{
  "hash": "bce06e4fdbd16517de3dbea9f579a4dd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Coding basics\"\nexecute: \n  eval: false\n---\n\n\n\n\n## Week 1\n\n::: notes\nTODO: Fill in info re: Hands-On Programming with R chapters on [basics](https://rstudio-education.github.io/hopr/basics.html) and [packages](https://rstudio-education.github.io/hopr/packages.html)\n:::\n\n### Packages in R\n\nA container for:\n\n-   functions\n-   data\n-   documentation\n\n`{tidyverse}` is a *metapackage*â€”or a package that loads a set of other packages.\n\n#### Installing packages\n\nUse `install.packages()` to install a package from [CRAN](https://cran.r-project.org/) (Comprehensive R Archive Network):\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nBut, remember, this does not work:\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n\n```\nError: object 'sf' not found\n```\n\n\n:::\n:::\n\n\n\n\n#### Loading packages\n\nUse `library()` to load a package into your environment:\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.callout-note collapse=\"true\"}\n#### Why can we use both `library(sf)` and `library(\"sf\")`?\n\nThe `package` argument can be the name of a package: as a **name**, **literal character string**, or **a character string**.\n:::\n\n#### base functions and packages are always available\n\nThe `{base}` package for R is one of fifteen \"base packages\" that are always available. Functions like `sum()`, `max()`, and `paste0()` are all examples of \"base functions\".\n\n### Functions in R\n\nFunctions take inputs (known as arguments or parameters) and return outputs.\n\nA container for:\n\n-   Logic (a.k.a. an algorithm)\n-   Math\n-   More functions\n-   Data *or* connections to data sources\n\n------------------------------------------------------------------------\n\nSome functions require a specific type of input:\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n------------------------------------------------------------------------\n\nBut some functions are more flexible:\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n------------------------------------------------------------------------\n\nOrder of execution matters!\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}