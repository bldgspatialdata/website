{
  "hash": "39d0c6b64b78d962b3162a4896b4c717",
  "result": {
    "engine": "knitr",
    "markdown": "---\norder: 8\ntitle: \"Exploratory data analysis\"\nsubtitle: \"Session {{< meta order >}}\"\ndate: 2023-10-18\nimage: \"images/tidyverse-packages.png\"\n---\n\n\n# Working openly\n\n## Why open your work?\n\n1. Improve the quality of your work: \"be more organized, more accurate, less likely to miss errors\"\n2. Broaden reach and impact\n3. Foster data literacy: \"others can follow and learn—which can enrich and diversify data ecosystems, practices, and communities\"\n\n## How to open your work?\n\nConsider:\n\n- when is transparency valuable?\n- when is transparency a lower priority?\n- when is transparency potentially harmful?\n\n# Exploratory data analysis\n\nThis next section is straight from [R for Data Science (2e) - 11  Exploratory data analysis](https://r4ds.hadley.nz/eda#introduction).\n\n## What do you *do* when you *do* exploratory data analysis?\n\n1. Generate questions about your data.\n2. Search for answers by visualizing, transforming, and modelling your data.\n3. Use what you learn to refine your questions and/or generate new questions.\n\n**\"More than anything, EDA is a state of mind.\"**\n\n## Use questions as tools to guide your investigation\n\nWhen you ask a question…\n\n- the question focuses your attention on a specific part of your dataset\n- this helps you decide which graphs, models, or transformations to make.\n- the key to asking _quality_ questions is to generate a large _quantity_ of questions\n\n::: notes\n>Your goal during EDA is to develop an understanding of your data. The easiest way to do this is to **use questions as tools to guide your investigation**. When you ask a question, the question focuses your attention on a specific part of your dataset and helps you decide which graphs, models, or transformations to make.\n:::\n\n## Two useful questions to start\n\n1. What type of variation occurs within my variables?\n2. What type of covariation occurs between my variables?\n\n## What are you \"exploring\" when you do exploratory data analysis?\n\n### General summary\n\nWhen you start with a dataset, you might do something where you look at the general summary, using functions such as:\n\n- [`summary()`](https://rdrr.io/r/base/summary.html)\n- [`str()`](https://rdrr.io/r/utils/str.html)\n- [`skimr::skim()`](https://github.com/ropensci/skimr), or\n- [`dplyr::glimpse()`](https://pillar.r-lib.org/reference/glimpse.html)\n\n\"These work really well when you’ve got a small amount of data, but when you have more data, you are generally limited by how much you can read.\"\n\n## Variation\n\n### Typical values\n\n- Which values are the most common? Why?\n- Which values are rare? Why? Does that match your expectations?\n- Can you see any unusual patterns? What might explain them?\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmaller <- diamonds |>\n  filter(carat < 3)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in eval(expr, envir, enclos): object 'diamonds' not found\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(smaller, aes(x = carat)) +\n  geom_histogram(binwidth = 0.01)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in ggplot(smaller, aes(x = carat)): could not find function \"ggplot\"\n```\n\n\n:::\n:::\n\n\n#### Sub-groups\n\nTo understand the subgroups, ask:\n\n- How are the observations within each subgroup similar to each other?\n- How are the observations in separate clusters different from each other?\n- How can you explain or describe the clusters?\n- Why might the appearance of clusters be misleading?\n\n### Unusual values\n\nWhat makes a value unusual?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(diamonds, aes(x = y)) +\n  geom_histogram(binwidth = 0.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in ggplot(diamonds, aes(x = y)): could not find function \"ggplot\"\n```\n\n\n:::\n:::\n\n\n---\n\nHandling unusual values can include:\n\n- Dropping observations with unusual values\n- Replacing unusual values with missing values\n\n---\n\n## Covariation\n\n::: notes\n>**Covariation** is the tendency for the values of two or more variables to vary together in a related way. The best way to spot covariation is to visualize the relationship between two or more variables.\n:::\n\n### A categorical and a numerical variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(diamonds, aes(x = price)) +\n  geom_freqpoly(aes(color = cut), binwidth = 500, linewidth = 0.75)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in ggplot(diamonds, aes(x = price)): could not find function \"ggplot\"\n```\n\n\n:::\n:::\n\n\n### Two categorical variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(diamonds, aes(x = cut, y = color)) +\n  geom_count()\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in ggplot(diamonds, aes(x = cut, y = color)): could not find function \"ggplot\"\n```\n\n\n:::\n:::\n\n\n### Two numerical variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(smaller, aes(x = carat, y = price)) +\n  geom_point()\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in ggplot(smaller, aes(x = carat, y = price)): could not find function \"ggplot\"\n```\n\n\n:::\n:::\n\n\n## Patterns and models\n\nIf a systematic relationship exists between two variables it will appear as a pattern in the data. If you spot a pattern, ask yourself:\n\n- Could this pattern be due to coincidence (i.e. random chance)?  \n- How can you describe the relationship implied by the pattern?\n- How strong is the relationship implied by the pattern?\n- What other variables might affect the relationship?\n- Does the relationship change if you look at individual subgroups of the data?\n\n## Tools for data exploration\n\n### Missing data\n\n[naniar](https://naniar.njtierney.com/)\n\n>`naniar` provides principled, tidy ways to summarise, visualise, and manipulate missing data with minimal deviations from the workflows in ggplot2 and tidy data.\n\n### Distributions\n\n[Visualizations of Distributions and Uncertainty • ggdist](https://mjskay.github.io/ggdist/)\n\n>`ggdist` is an R package that provides a flexible set of ggplot2 geoms and stats designed especially for visualizing distributions and uncertainty.\n\n- What type of data do you have?\n- How much time do you have?\n- How do you expect to communicate what you learn?\n\n## Communicating\n\n### Codebooks\n\n[Create Codebooks from Data Frames • codebookr](https://brad-cannell.github.io/codebookr/)\n\n>The `codebookr` package is intended to make it easy for users to create codebooks (also called data dictionaries) directly from an R data frame.\n\n[Option to put interactive elements in an HTML table — opt\\_interactive • gt](https://gt.rstudio.com/reference/opt_interactive.html)\n\n### Additional packages\n\n[inspectdf](https://alastairrushworth.github.io/inspectdf/)\n\n>inspectdf is collection of utilities for columnwise summary, comparison and visualisation of data frames. Functions are provided to summarise missingness, categorical levels, numeric distribution, correlation, column types and memory usage.\n\n### Other tools\n\n[Datasette](https://datasette.io/):\n\n>Datasette is a tool for exploring and publishing data. It helps people take data of any shape, analyze and explore it, and publish it as an interactive website and accompanying API.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}