{
  "hash": "b96e082bc04c7622eed6240911fcf7e0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Reading and writing spatial data\"\nsubtitle: \"Session {{< meta order >}}\"\norder: 11\nimage: images/2016-11-29_openeo_gdal-diagram.png\nformat: \n  revealjs: \n    number-sections: false\n---\n\n\n\n## Overview\n\n- Spatial data is everywhere\n- Navigating specifications, file formats, and services\n- Working with common spatial file formats\n- Working with popular spatial web services\n\n## Spatial data is everywhere\n\n- Shapefiles, GeoJSON files, and other spatial data files\n- Spatial data editing and hosting services, e.g. [ArcGIS Online](https://www.esri.com/en-us/arcgis/products/arcgis-online/overview) or [Felt](https://felt.com/maps/recent))\n- Open data portals serving spatial and non-spatial data, e.g. [data.gov](https://data.gov/)\n\n## Spatial data is everywhere\n\n- Google Maps, Apple Maps, Waze, and navigation apps (on your phone or [in your vehicle](https://support.google.com/googleappsincar/answer/9941814?hl=en))\n- Biking and running apps (Strava publishes a [global user activity heatmap](https://www.strava.com/heatmap#11.21/-76.64618/39.34348/hot/all))\n- Web browsers on your phone and desktop application\n\n## Spatial data is everywhere\n\n- Phone camera photos (stored in the EXIF metadata)\n- Calendars ([iCal](https://en.wikipedia.org/wiki/ICalendar)), contacts ([vCard](https://en.wikipedia.org/wiki/VCard)), and emails (using [IP address](https://en.wikipedia.org/wiki/Internet_geolocation) locations)\n\n## Creating spatial data is \"easy\"\n\n- GIS Desktop applications, e.g. [QGIS](https://qgis.org/)\n- Web mapping applications (e.g. [geojson.io](https://geojson.io/#map=2/0/20), [Felt](https://felt.com/))\n- Spreadsheet applications (e.g. [Google Sheets](https://sheets.google.com/))\n- Low-code data tools (e.g. [Airtable](https://airtable.com/) or [Microsoft Lists](https://support.microsoft.com/en-us/office/introduction-to-lists-0a1c3ace-def0-44af-b225-cfa8d92c52d7))\n\n## What can we do with it all?\n\n- Read and write spatial data files\n- Read and write related data files\n- Read from and write to web services\n\n## Standards and specifications\n\n[Open Geospatial Consortium (OGC) Standards](https://www.ogc.org/publications/) are organized into categories:\n\n- APIs (e.g. [Moving Features API](https://www.ogc.org/publications/standard/ogc-api-moving-features/))\n- Web Services (e.g. [Web Feature Service](https://www.ogc.org/publications/standard/wfs/))\n- Data Models and Encodings (e.g. [GeoTIFF](https://www.ogc.org/publications/standard/geotiff/))\n- and more (Sensors, Publish-Subscribe, Syndication & Context, Discovery, Containers, Abstract Specifications)\n\n::: notes\n\n\n:::\n\n## Standards and specifications\n\n![](https://imgs.xkcd.com/comics/standards.png)\n\nSource: [xkcd: Standards](https://xkcd.com/927/) (CC BY-NC 2.5)\n\n::: notes\n\n:::\n\n## Common spatial file formats\n\n- Shapefile (`.shp`)\n- GeoJSON (`.json`, `.geojson`)\n- GeoPackage (`.gpkg`)\n- KML - Keyhole Markup Language (`.kml`)\n- Esri File Geodatabase (`.gdb`)\n- GPX - GPS Exchange Format (`.gpx`)\n\n::: notes\n\n- Vector spatial: Shapefile, [GeoJSON](https://en.wikipedia.org/wiki/GeoJSON), KML\n- Raster spatial: [GeoTIFF](https://en.wikipedia.org/wiki/GeoTIFF), \n- Tabular data with geometry: CSV, Microsoft Excel, delimited text with coordinates or WKT (well known text)\n\n:::\n\n## Common spatial file formats\n\nThese file formats vary in:\n\n- How geometry is stored\n- Input/output speed\n- File size\n- Compatibility with tools/systems\n- Other constraints or limits\n- And more!\n\n## Specialized spatial file formats\n\n- Raster data\n  - Digital Elevation Model (DEM)\n  - [GeoTIFF](https://www.ogc.org/publications/standard/geotiff/)\n- Map tiles\n  - [MBTiles](https://github.com/mapbox/mbtiles-spec)\n  - [PMTiles](https://docs.protomaps.com/pmtiles/)\n  \n## Specialized spatial file formats\n\n- Columnar data formats\n  - [GeoParquet](https://geoparquet.org/)\n  - [GeoArrow](https://geoarrow.org/)\n- Databases\n  - [PostGIS](https://postgis.net/)\n- Other\n  - [FlatGeobuf](https://flatgeobuf.org/)\n  \n::: notes\n- DEM Standards from USGS - https://www.usgs.gov/3d-elevation-program-standards-and-specifications\n- Mapbox glossary - https://docs.mapbox.com/help/glossary/mbtiles/\n:::\n\n<!-- ## Examples -->\n\n<!-- ![](https://www.census.gov/content/dam/Census/newsroom/blogs/2016/04/understanding-census-bureau-address-ranges/Orris-figure.jpg) -->\n\n<!-- ::: notes -->\n<!-- Census data -->\n\n<!-- ::: -->\n\n<!-- --- -->\n\n<!-- ![](https://i0.wp.com/transportgeography.org/wp-content/uploads/esri_shapefile_model.png?w=1800&ssl=1) -->\n\n<!-- ::: notes -->\n\n<!-- Shapefile model -->\n<!-- ::: -->\n\n<!-- ---- -->\n\n<!-- ![](https://developers.google.com/static/kml/documentation/images/classTree52.gif) -->\n\n<!-- ::: notes -->\n\n<!-- KML -->\n\n<!-- Source: https://developers.google.com/kml/documentation/kmlreference -->\n<!-- ::: -->\n\n<!-- ---- -->\n\n<!-- ![](https://wiki.openstreetmap.org/w/images/thumb/1/10/ERD_of_OSM_DB.svg/1280px-ERD_of_OSM_DB.svg.png){.lightbox} -->\n\n<!-- ::: notes -->\n\n<!-- Open Street Map -->\n\n<!-- SVG: https://wiki.openstreetmap.org/wiki/File:ERD_of_OSM_DB.svg -->\n<!-- ::: -->\n\n## Historically, many tools and formats did not work together\n\n![](https://r-spatial.org/images/gis2.png)\n\n## Now, GDAL supports translation between *many* different formats\n\n![](https://r-spatial.org/images/gis3.png)\n\n::: notes\nGDAL is a translator library for raster and vector geospatial data formats.\n:::\n\n## Read spatial data files with R\n\nThe `dsn` or data source name for `sf::read_sf()` can include:\n\n- a file name\n- a URL\n- a folder\n- the name and access credentials of a database\n- a character string with the contents of a GeoJSON file\n\n## Read spatial data files with R\n\nYou can use the `query` parameter of `sf::read_sf()` to use a SQL query to select records from a file (or select a specific geographical extent).\n  \n## Many file formats *can* include spatial data\n\nNon-spatial files can still be used to store Well Known Text (WKT) strings, coordinate values, or addresses (convertible to spatial data):\n\n- Excel files (`xlsx` or `xls`)\n- vCard or VCF (Virtual Contact File)\n- EXIF metadata in a JPEG, HEIC, PNG, TIFF or other media file\n\n## Reading data into R\n  \n- Read data using `{sf}`\n- Read data using a package that returns a `sf` object\n- Read data and use `{sf}` to convert to a `sf` object\n\n## Writing data from R\n\n- Write data to a spatial file using `{sf}`\n- Write data a a non-spatial file using a different package\n\nWhen you write spatial data to a non-spatial format, you should drop the geometry or convert the geometry to coordinates or well-known text.\n\n## Read data using `{sf}`\n\nFirst load `{sf}`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\n```\n:::\n\n\n\n## Read data using `{sf}`\n\n`{sf}` can use any available drivers to read data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrivers <- sf::st_drivers()\n\ndrivers\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                         name\nESRIC                   ESRIC\nPCIDSK                 PCIDSK\nnetCDF                 netCDF\nPDS4                     PDS4\nVICAR                   VICAR\nJP2OpenJPEG       JP2OpenJPEG\nPDF                       PDF\nMBTiles               MBTiles\nBAG                       BAG\nEEDA                     EEDA\nOGCAPI                 OGCAPI\nESRI Shapefile ESRI Shapefile\nMapInfo File     MapInfo File\nUK .NTF               UK .NTF\nLVBAG                   LVBAG\nOGR_SDTS             OGR_SDTS\nS57                       S57\nDGN                       DGN\nOGR_VRT               OGR_VRT\nMemory                 Memory\nCSV                       CSV\nGML                       GML\nGPX                       GPX\nKML                       KML\nGeoJSON               GeoJSON\nGeoJSONSeq         GeoJSONSeq\nESRIJSON             ESRIJSON\nTopoJSON             TopoJSON\nOGR_GMT               OGR_GMT\nGPKG                     GPKG\nSQLite                 SQLite\nODBC                     ODBC\nWAsP                     WAsP\nPGeo                     PGeo\nMSSQLSpatial     MSSQLSpatial\nPostgreSQL         PostgreSQL\nOpenFileGDB       OpenFileGDB\nDXF                       DXF\nCAD                       CAD\nFlatGeobuf         FlatGeobuf\nGeoconcept         Geoconcept\nGeoRSS                 GeoRSS\nVFK                       VFK\nPGDUMP                 PGDUMP\nOSM                       OSM\nGPSBabel             GPSBabel\nOGR_PDS               OGR_PDS\nWFS                       WFS\nOAPIF                   OAPIF\nEDIGEO                 EDIGEO\nSVG                       SVG\nIdrisi                 Idrisi\nXLS                       XLS\nODS                       ODS\nXLSX                     XLSX\nElasticsearch   Elasticsearch\nCarto                   Carto\nAmigoCloud         AmigoCloud\nSXF                       SXF\nSelafin               Selafin\nJML                       JML\nPLSCENES             PLSCENES\nCSW                       CSW\nVDV                       VDV\nMVT                       MVT\nNGW                       NGW\nMapML                   MapML\nTIGER                   TIGER\nAVCBin                 AVCBin\nAVCE00                 AVCE00\nHTTP                     HTTP\n                                                          long_name write  copy\nESRIC                                            Esri Compact Cache FALSE FALSE\nPCIDSK                                         PCIDSK Database File  TRUE FALSE\nnetCDF                                   Network Common Data Format  TRUE  TRUE\nPDS4                                   NASA Planetary Data System 4  TRUE  TRUE\nVICAR                                               MIPL VICAR file  TRUE  TRUE\nJP2OpenJPEG              JPEG-2000 driver based on OpenJPEG library FALSE  TRUE\nPDF                                                  Geospatial PDF  TRUE  TRUE\nMBTiles                                                     MBTiles  TRUE  TRUE\nBAG                                      Bathymetry Attributed Grid  TRUE  TRUE\nEEDA                                          Earth Engine Data API FALSE FALSE\nOGCAPI                                                       OGCAPI FALSE FALSE\nESRI Shapefile                                       ESRI Shapefile  TRUE FALSE\nMapInfo File                                           MapInfo File  TRUE FALSE\nUK .NTF                                                     UK .NTF FALSE FALSE\nLVBAG                                   Kadaster LV BAG Extract 2.0 FALSE FALSE\nOGR_SDTS                                                       SDTS FALSE FALSE\nS57                                                  IHO S-57 (ENC)  TRUE FALSE\nDGN                                                Microstation DGN  TRUE FALSE\nOGR_VRT                                    VRT - Virtual Datasource FALSE FALSE\nMemory                                                       Memory  TRUE FALSE\nCSV                                    Comma Separated Value (.csv)  TRUE FALSE\nGML                                 Geography Markup Language (GML)  TRUE FALSE\nGPX                                                             GPX  TRUE FALSE\nKML                                   Keyhole Markup Language (KML)  TRUE FALSE\nGeoJSON                                                     GeoJSON  TRUE FALSE\nGeoJSONSeq                                         GeoJSON Sequence  TRUE FALSE\nESRIJSON                                                   ESRIJSON FALSE FALSE\nTopoJSON                                                   TopoJSON FALSE FALSE\nOGR_GMT                                    GMT ASCII Vectors (.gmt)  TRUE FALSE\nGPKG                                                     GeoPackage  TRUE  TRUE\nSQLite                                          SQLite / Spatialite  TRUE FALSE\nODBC                                                                FALSE FALSE\nWAsP                                               WAsP .map format  TRUE FALSE\nPGeo                                      ESRI Personal GeoDatabase FALSE FALSE\nMSSQLSpatial                  Microsoft SQL Server Spatial Database  TRUE FALSE\nPostgreSQL                                       PostgreSQL/PostGIS  TRUE FALSE\nOpenFileGDB                                            ESRI FileGDB FALSE FALSE\nDXF                                                     AutoCAD DXF  TRUE FALSE\nCAD                                                  AutoCAD Driver FALSE FALSE\nFlatGeobuf                                               FlatGeobuf  TRUE FALSE\nGeoconcept                                               Geoconcept  TRUE FALSE\nGeoRSS                                                       GeoRSS  TRUE FALSE\nVFK                            Czech Cadastral Exchange Data Format FALSE FALSE\nPGDUMP                                          PostgreSQL SQL dump  TRUE FALSE\nOSM                                       OpenStreetMap XML and PBF FALSE FALSE\nGPSBabel                                                   GPSBabel  TRUE FALSE\nOGR_PDS                                Planetary Data Systems TABLE FALSE FALSE\nWFS                                   OGC WFS (Web Feature Service) FALSE FALSE\nOAPIF                                            OGC API - Features FALSE FALSE\nEDIGEO                                French EDIGEO exchange format FALSE FALSE\nSVG                                        Scalable Vector Graphics FALSE FALSE\nIdrisi                                         Idrisi Vector (.vct) FALSE FALSE\nXLS                                                 MS Excel format FALSE FALSE\nODS            Open Document/ LibreOffice / OpenOffice Spreadsheet   TRUE FALSE\nXLSX                                 MS Office Open XML spreadsheet  TRUE FALSE\nElasticsearch                                        Elastic Search  TRUE FALSE\nCarto                                                         Carto  TRUE FALSE\nAmigoCloud                                               AmigoCloud  TRUE FALSE\nSXF                                     Storage and eXchange Format FALSE FALSE\nSelafin                                                     Selafin  TRUE FALSE\nJML                                                    OpenJUMP JML  TRUE FALSE\nPLSCENES                                     Planet Labs Scenes API FALSE FALSE\nCSW                          OGC CSW (Catalog  Service for the Web) FALSE FALSE\nVDV                             VDV-451/VDV-452/INTREST Data Format  TRUE FALSE\nMVT                                             Mapbox Vector Tiles  TRUE FALSE\nNGW                                                     NextGIS Web  TRUE  TRUE\nMapML                                                         MapML  TRUE FALSE\nTIGER                                        U.S. Census TIGER/Line FALSE FALSE\nAVCBin                                     Arc/Info Binary Coverage FALSE FALSE\nAVCE00                                Arc/Info E00 (ASCII) Coverage FALSE FALSE\nHTTP                                          HTTP Fetching Wrapper FALSE FALSE\n               is_raster is_vector   vsi\nESRIC               TRUE      TRUE  TRUE\nPCIDSK              TRUE      TRUE  TRUE\nnetCDF              TRUE      TRUE FALSE\nPDS4                TRUE      TRUE  TRUE\nVICAR               TRUE      TRUE  TRUE\nJP2OpenJPEG         TRUE      TRUE  TRUE\nPDF                 TRUE      TRUE FALSE\nMBTiles             TRUE      TRUE  TRUE\nBAG                 TRUE      TRUE  TRUE\nEEDA               FALSE      TRUE FALSE\nOGCAPI              TRUE      TRUE  TRUE\nESRI Shapefile     FALSE      TRUE  TRUE\nMapInfo File       FALSE      TRUE  TRUE\nUK .NTF            FALSE      TRUE  TRUE\nLVBAG              FALSE      TRUE  TRUE\nOGR_SDTS           FALSE      TRUE  TRUE\nS57                FALSE      TRUE  TRUE\nDGN                FALSE      TRUE  TRUE\nOGR_VRT            FALSE      TRUE  TRUE\nMemory             FALSE      TRUE FALSE\nCSV                FALSE      TRUE  TRUE\nGML                FALSE      TRUE  TRUE\nGPX                FALSE      TRUE  TRUE\nKML                FALSE      TRUE  TRUE\nGeoJSON            FALSE      TRUE  TRUE\nGeoJSONSeq         FALSE      TRUE  TRUE\nESRIJSON           FALSE      TRUE  TRUE\nTopoJSON           FALSE      TRUE  TRUE\nOGR_GMT            FALSE      TRUE  TRUE\nGPKG                TRUE      TRUE  TRUE\nSQLite             FALSE      TRUE  TRUE\nODBC               FALSE      TRUE FALSE\nWAsP               FALSE      TRUE  TRUE\nPGeo               FALSE      TRUE FALSE\nMSSQLSpatial       FALSE      TRUE FALSE\nPostgreSQL         FALSE      TRUE FALSE\nOpenFileGDB        FALSE      TRUE  TRUE\nDXF                FALSE      TRUE  TRUE\nCAD                 TRUE      TRUE  TRUE\nFlatGeobuf         FALSE      TRUE  TRUE\nGeoconcept         FALSE      TRUE  TRUE\nGeoRSS             FALSE      TRUE  TRUE\nVFK                FALSE      TRUE FALSE\nPGDUMP             FALSE      TRUE  TRUE\nOSM                FALSE      TRUE  TRUE\nGPSBabel           FALSE      TRUE FALSE\nOGR_PDS            FALSE      TRUE  TRUE\nWFS                FALSE      TRUE  TRUE\nOAPIF              FALSE      TRUE FALSE\nEDIGEO             FALSE      TRUE  TRUE\nSVG                FALSE      TRUE  TRUE\nIdrisi             FALSE      TRUE  TRUE\nXLS                FALSE      TRUE FALSE\nODS                FALSE      TRUE  TRUE\nXLSX               FALSE      TRUE  TRUE\nElasticsearch      FALSE      TRUE FALSE\nCarto              FALSE      TRUE FALSE\nAmigoCloud         FALSE      TRUE FALSE\nSXF                FALSE      TRUE  TRUE\nSelafin            FALSE      TRUE  TRUE\nJML                FALSE      TRUE  TRUE\nPLSCENES            TRUE      TRUE FALSE\nCSW                FALSE      TRUE FALSE\nVDV                FALSE      TRUE  TRUE\nMVT                FALSE      TRUE  TRUE\nNGW                 TRUE      TRUE FALSE\nMapML              FALSE      TRUE  TRUE\nTIGER              FALSE      TRUE  TRUE\nAVCBin             FALSE      TRUE  TRUE\nAVCE00             FALSE      TRUE  TRUE\nHTTP                TRUE      TRUE FALSE\n```\n\n\n:::\n:::\n\n\n\n## Read data from a URL using `{sf}`\n\n`read_sf()` works well with a direct link to a spatial data file.\n\nRead a GeoJSON file:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# GeoJSON (geojson)\nread_sf(\"https://github.com/ropensci/geojsonio/raw/main/inst/examples/california.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 1 feature and 11 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -124.4096 ymin: 32.53416 xmax: -114.1315 ymax: 42.00952\nGeodetic CRS:  WGS 84\n# A tibble: 1 × 12\n  name       abbreviation capital    city   population   area waterarea landarea\n  <chr>      <chr>        <chr>      <chr>       <int>  <int>     <int>    <int>\n1 California CA           Sacramento Los A…   38332521 423968     20502   403466\n# ℹ 4 more variables: houseseats <int>, statehood <date>, group <chr>,\n#   geometry <MULTIPOLYGON [°]>\n```\n\n\n:::\n:::\n\n\n\n----\n\nRead a KML file:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Keyhole Markup Language (kml)\nread_sf(\"https://github.com/ropensci/geojsonio/raw/main/inst/examples/poa_annua.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 161 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -167.15 ymin: 0 xmax: 0 ymax: 69.3333\nGeodetic CRS:  WGS 84\n# A tibble: 161 × 3\n   Name                                    Description             geometry\n   <chr>                                   <chr>                <POINT [°]>\n 1 \"Patterson's bluegrass, Patterson blue… \"<table wi… (-113.9553 43.39448)\n 2 \"Patterson's bluegrass, Patterson blue… \"<table wi…  (-114.1191 46.0793)\n 3 \"Patterson's bluegrass, Patterson blue… \"<table wi…  (-114.1191 46.0793)\n 4 \"Patterson's bluegrass, Patterson blue… \"<table wi…  (-114.1191 46.0793)\n 5 \"Patterson's bluegrass, Patterson blue… \"<table wi… (-109.5936 44.49239)\n 6 \"Patterson's bluegrass, Patterson blue… \"<table wi…  (-114.1191 46.0793)\n 7 \"Patterson's bluegrass, Patterson blue… \"<table wi…   (-109.817 40.7667)\n 8 \"Patterson's bluegrass, Patterson blue… \"<table wi…            (-105 39)\n 9 \"Patterson's bluegrass, Patterson blue… \"<table wi… (-106.1376 39.62102)\n10 \"Patterson's bluegrass, Patterson blue… \"<table wi…   (-111.183 40.6167)\n# ℹ 151 more rows\n```\n\n\n:::\n:::\n\n\n\n----\n\nRead a GeoPackage file:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# GeoPackage (gpkg)\nread_sf(\"https://github.com/r-spatial/sf/raw/main/inst/gpkg/nc.gpkg\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 100 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965\nGeodetic CRS:  NAD27\n# A tibble: 100 × 15\n    AREA PERIMETER CNTY_ CNTY_ID NAME  FIPS  FIPSNO CRESS_ID BIR74 SID74 NWBIR74\n   <dbl>     <dbl> <dbl>   <dbl> <chr> <chr>  <dbl>    <int> <dbl> <dbl>   <dbl>\n 1 0.114      1.44  1825    1825 Ashe  37009  37009        5  1091     1      10\n 2 0.061      1.23  1827    1827 Alle… 37005  37005        3   487     0      10\n 3 0.143      1.63  1828    1828 Surry 37171  37171       86  3188     5     208\n 4 0.07       2.97  1831    1831 Curr… 37053  37053       27   508     1     123\n 5 0.153      2.21  1832    1832 Nort… 37131  37131       66  1421     9    1066\n 6 0.097      1.67  1833    1833 Hert… 37091  37091       46  1452     7     954\n 7 0.062      1.55  1834    1834 Camd… 37029  37029       15   286     0     115\n 8 0.091      1.28  1835    1835 Gates 37073  37073       37   420     0     254\n 9 0.118      1.42  1836    1836 Warr… 37185  37185       93   968     4     748\n10 0.124      1.43  1837    1837 Stok… 37169  37169       85  1612     1     160\n# ℹ 90 more rows\n# ℹ 4 more variables: BIR79 <dbl>, SID79 <dbl>, NWBIR79 <dbl>,\n#   geom <MULTIPOLYGON [°]>\n```\n\n\n:::\n:::\n\n\n\n----\n\nEven non-spatial data works if the data includes a well-known text column:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Comma-separated values (csv)\nread_sf(\"https://github.com/r-spatial/sf/raw/main/inst/csv/pt.csv\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 3 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 0 ymin: 0 xmax: 44 ymax: 55\nCRS:           NA\n# A tibble: 3 × 5\n  Id    Int64        Int32 WKT          geometry\n  <chr> <chr>        <chr> <chr>         <POINT>\n1 1     \"0\"          \"33\"  POINT(0 1)      (0 1)\n2 2     \"4294967297\" \"44\"  POINT(44 55)  (44 55)\n3 3     \"\"           \"\"    POINT(0 0)      (0 0)\n```\n\n\n:::\n:::\n\n\n\n----\n\nIf the non-spatial data does not include a well-known text column, `read_sf()` still returns a data frame:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_sf(\"https://github.com/elipousson/marylandedu/raw/main/data-raw/extdata/Enrollment_By_Grade_2023.csv\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9,766 × 8\n   Year  LEA   `LEA Name` School `School Name`         Grade    `Enrolled Count`\n   <chr> <chr> <chr>      <chr>  <chr>                 <chr>    <chr>           \n 1 2023  01    Allegany   0301   Flintstone Elementary Prekind… 19              \n 2 2023  01    Allegany   0301   Flintstone Elementary Kinderg… 42              \n 3 2023  01    Allegany   0301   Flintstone Elementary Grade 1  33              \n 4 2023  01    Allegany   0301   Flintstone Elementary Grade 2  29              \n 5 2023  01    Allegany   0301   Flintstone Elementary Grade 3  26              \n 6 2023  01    Allegany   0301   Flintstone Elementary Grade 4  31              \n 7 2023  01    Allegany   0301   Flintstone Elementary Grade 5  36              \n 8 2023  01    Allegany   0301   Flintstone Elementary All Gra… 216             \n 9 2023  01    Allegany   0401   South Penn Elementary Prekind… 77              \n10 2023  01    Allegany   0401   South Penn Elementary Kinderg… 79              \n# ℹ 9,756 more rows\n# ℹ 1 more variable: `Create Date` <chr>\n```\n\n\n:::\n:::\n\n\n\n----\n\nA multifile format like a shapefile does *not* work as a URL:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Shapefile (shp)\nread_sf(\"https://github.com/r-spatial/sf/raw/main/inst/shape/nc.shp\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: Cannot open \"https://github.com/r-spatial/sf/raw/main/inst/shape/nc.shp\"; The file doesn't seem to exist.\n```\n\n\n:::\n:::\n\n\n\nBut it *does* work if you provide a local file path (`system.file()` returns a file path in this case):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_sf(system.file(\"shape/nc.shp\", package = \"sf\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 100 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965\nGeodetic CRS:  NAD27\n# A tibble: 100 × 15\n    AREA PERIMETER CNTY_ CNTY_ID NAME  FIPS  FIPSNO CRESS_ID BIR74 SID74 NWBIR74\n   <dbl>     <dbl> <dbl>   <dbl> <chr> <chr>  <dbl>    <int> <dbl> <dbl>   <dbl>\n 1 0.114      1.44  1825    1825 Ashe  37009  37009        5  1091     1      10\n 2 0.061      1.23  1827    1827 Alle… 37005  37005        3   487     0      10\n 3 0.143      1.63  1828    1828 Surry 37171  37171       86  3188     5     208\n 4 0.07       2.97  1831    1831 Curr… 37053  37053       27   508     1     123\n 5 0.153      2.21  1832    1832 Nort… 37131  37131       66  1421     9    1066\n 6 0.097      1.67  1833    1833 Hert… 37091  37091       46  1452     7     954\n 7 0.062      1.55  1834    1834 Camd… 37029  37029       15   286     0     115\n 8 0.091      1.28  1835    1835 Gates 37073  37073       37   420     0     254\n 9 0.118      1.42  1836    1836 Warr… 37185  37185       93   968     4     748\n10 0.124      1.43  1837    1837 Stok… 37169  37169       85  1612     1     160\n# ℹ 90 more rows\n# ℹ 4 more variables: BIR79 <dbl>, SID79 <dbl>, NWBIR79 <dbl>,\n#   geometry <MULTIPOLYGON [°]>\n```\n\n\n:::\n:::\n\n\n\n## Working with web services\n\nExamples of common web services for working with spatial data include:\n\n- Spatial data sharing and discovery\n- Spatial data visualization\n- Routing\n- Geocoding\n\n## Considerations when working with web services\n\nUsing a web service often requires:\n\n- Creating an account for authentication and billing\n- Dedicating funding for usage\n- Understanding data privacy implications\n\n## Example: Feature Services\n\nAn ArcGIS FeatureServer URL does *not* work:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_sf(\"https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDOT_SHA_County_Boundaries/FeatureServer/0\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: Cannot open \"https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDOT_SHA_County_Boundaries/FeatureServer/0\"; The file doesn't seem to exist.\n```\n\n\n:::\n:::\n\n\n\nBut a FeatureServer URL that includes the output format *does* work:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_sf(\"https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDOT_SHA_County_Boundaries/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 24 features and 17 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -79.48731 ymin: 37.88654 xmax: -75.0492 ymax: 39.72288\nGeodetic CRS:  WGS 84\n# A tibble: 24 × 18\n   OBJECTID COUNTY_NAME     COUNTY_INTEGER COUNTY_ABBREVIATION COUNTY_DIGITCAPS\n      <int> <chr>                    <int> <chr>                          <int>\n 1        1 Prince George's             16 PG                                16\n 2        2 Cecil                        7 CE                                 7\n 3        3 Howard                      13 HO                                13\n 4        4 Talbot                      20 TA                                20\n 5        5 Garrett                     11 GA                                11\n 6        6 Baltimore City              24 BC                                24\n 7        7 Carroll                      6 CL                                 6\n 8        8 Washington                  21 WA                                21\n 9        9 Worcester                   23 WO                                23\n10       10 Frederick                   10 FR                                10\n# ℹ 14 more rows\n# ℹ 13 more variables: COUNTY_2DIGITCAPS <chr>, DISTRICT_NAME <chr>,\n#   DISTRICT_NUMBER <int>, COUNTY_FIP <int>, COUNTYNUM <int>, TSD_ID <int>,\n#   COUNTY <chr>, DISTRICT <int>, Shape__Area <dbl>, Shape__Length <dbl>,\n#   COUNTY_ALLCAPS <chr>, Region <chr>, geometry <POLYGON [°]>\n```\n\n\n:::\n:::\n\n\n\nThere are a wide variety of packages that you can use to supplement  `{sf}`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(arcgislayers)\n\nfeature_layer <- arc_open(\"https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDOT_SHA_County_Boundaries/FeatureServer/0\")\n\narc_select(feature_layer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 24 features and 17 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 607669.3 ymin: 80997.33 xmax: 1870976 ymax: 757701.4\nProjected CRS: NAD83(HARN) / Maryland (ftUS)\nFirst 10 features:\n   OBJECTID     COUNTY_NAME COUNTY_INTEGER COUNTY_ABBREVIATION COUNTY_DIGITCAPS\n1         1 Prince George's             16                  PG               16\n2         2           Cecil              7                  CE                7\n3         3          Howard             13                  HO               13\n4         4          Talbot             20                  TA               20\n5         5         Garrett             11                  GA               11\n6         6  Baltimore City             24                  BC               24\n7         7         Carroll              6                  CL                6\n8         8      Washington             21                  WA               21\n9         9       Worcester             23                  WO               23\n10       10       Frederick             10                  FR               10\n   COUNTY_2DIGITCAPS DISTRICT_NAME DISTRICT_NUMBER COUNTY_FIP COUNTYNUM TSD_ID\n1                 16    District 3               3         33        16      3\n2                 07    District 2               2         15         7     21\n3                 13    District 7               7         27        13     10\n4                 20    District 2               2         41        20     18\n5                 11    District 6               6         23        11      4\n6                 24   No District               0        510        24     23\n7                 06    District 7               7         13         6      1\n8                 21    District 6               6         43        21   1060\n9                 23    District 1               1         47        23      2\n10                10    District 7               7         21        10     24\n            COUNTY DISTRICT Shape__Area Shape__Length  COUNTY_ALLCAPS Region\n1  Prince George's        3 13902243040      720691.0 PRINCE GEORGE'S   <NA>\n2            Cecil        2 11643675836      494670.7           CECIL   <NA>\n3           Howard        7  7056288549      471922.1          HOWARD   <NA>\n4           Talbot        2 13193323636      657963.0          TALBOT   <NA>\n5          Garrett        6 18339518744      680782.9         GARRETT   <NA>\n6   Baltimore City        0  2562810672      207145.0  BALTIMORE CITY   <NA>\n7          Carroll        7 12623420879      651107.6         CARROLL   <NA>\n8       Washington        6 13031238277      948164.4      WASHINGTON   <NA>\n9        Worcester        1 16297527948      694972.5       WORCESTER   <NA>\n10       Frederick        7 18613257293      683407.8       FREDERICK   <NA>\n                         geometry\n1  POLYGON ((1313442 476110.4,...\n2  POLYGON ((1660741 628728.5,...\n3  POLYGON ((1391417 567919.8,...\n4  POLYGON ((1611348 457521.9,...\n5  POLYGON ((769889 754580.7, ...\n6  POLYGON ((1445534 565803.6,...\n7  POLYGON ((1371781 748182.4,...\n8  POLYGON ((936016.4 751530.6...\n9  POLYGON ((1870321 284172.9,...\n10 POLYGON ((1213130 747989.9,...\n```\n\n\n:::\n:::\n\n\n\n::: notes\n\n- Practice writing a query with arc_select\n\n:::\n\n## Example: Mapbox API\n\n`mapboxapi::mb_isochrone()` allows access to the [Mapbox Isochrone API](https://docs.mapbox.com/api/navigation/isochrone/):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mapboxapi)\n\nwalk_5min <- mb_isochrone(\n  \"100 Holliday St, Baltimore, MD 21202\",\n  profile = \"walking\",\n  time = 5\n)\n\nwalk_5min\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 1 feature and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -76.61453 ymin: 39.28688 xmax: -76.6056 ymax: 39.29477\nGeodetic CRS:  WGS 84\n# A tibble: 1 × 2\n   time                                                                 geometry\n  <int>                                                            <POLYGON [°]>\n1     5 ((-76.60768 39.29392, -76.60868 39.2939, -76.6098 39.29477, -76.6115 39…\n```\n\n\n:::\n:::\n\n\n\n## Example: Mapbox API\n\n`mapboxapi::addMapboxTiles()` provides easy access to the [Mapbox Static Tiles API](https://docs.mapbox.com/api/maps/static-tiles/): \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaflet)\n\nleaflet(walk_5min) %>%\n  addMapboxTiles(style_id = \"streets-v11\",\n                 username = \"mapbox\") %>%\n  addPolygons()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-440854a1184fce46c660\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-440854a1184fce46c660\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZWxpcG91c3Nvbi1iYWx0aW1vcmVjaXR5IiwiYSI6ImNsNHI5ZHpkZzBhZzkza21uMHd3NGRxMjEifQ.5BGEL2VMq5WHWp7H3Ih_iQ\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://www.mapbox.com/about/maps/\\\">Mapbox<\\/a> &copy; <a href=\\\"http://www.openstreetmap.org/copyright\\\">OpenStreetMap<\\/a> <strong><a href=\\\"https://www.mapbox.com/map-feedback/\\\" target=\\\"_blank\\\">Improve this map<\\/a><\\/strong>\"}]},{\"method\":\"addPolygons\",\"args\":[[[[{\"lng\":[-76.60768400000001,-76.608684,-76.609797,-76.611502,-76.613395,-76.614526,-76.61430300000001,-76.612684,-76.61068400000001,-76.609616,-76.605842,-76.605602,-76.606883,-76.60768400000001],\"lat\":[39.293922,39.293897,39.294771,39.294702,39.292884,39.290884,39.289884,39.28811,39.286972,39.286884,39.290042,39.290884,39.291685,39.293922]}]]],null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"color\":\"#03F\",\"weight\":5,\"opacity\":0.5,\"fill\":true,\"fillColor\":\"#03F\",\"fillOpacity\":0.2,\"smoothFactor\":1,\"noClip\":false},null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[39.286884,39.294771],\"lng\":[-76.614526,-76.605602]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## Storing and organizing spatial data takes planning\n\nPlanning for the structure and organization of your data can be supported using a variety of tools:\n\n- Diagram drawing applications (e.g. [draw.io](https://www.drawio.com/))\n- Entity-relationship diagram tools (e.g. [drawDB](https://www.drawdb.app/))\n- Low-code, visual database applications (e.g. [Airtable](https://airtable.com/)) \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}