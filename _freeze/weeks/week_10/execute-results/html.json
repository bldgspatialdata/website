{
  "hash": "2a6f4a63ca7ca478590f7561690f5f35",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Week 10\"\norder: 10\nsubtitle: \"Exploring American Community Survey data with `{tidycensus}`\"\ndate: 2023-11-01\n---\n\n\n## Prepare\n\n### Required readings\n\n-   [Ch. 5 Census Geographic Data and Applications in R](https://walker-data.com/census-r/census-geographic-data-and-applications-in-r.html) in @walkerAnalyzingUSCensus2022\n-   @boukPrimerPowerfulNumbers2022\n-   @walkerSpatialAnalysisUS2021\n\n### Optional readings\n\n-   @boukHowDoesQueerness2022\n-   @walkerAccessingAnalyzingCensus2021\n\n\n\n## Participate\n\nDuring class, we will review this sample code as an exercise.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Practice exercise\"}\n# Load libraries\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(osmdata)\nlibrary(tidyverse)\n\n# Set option for tigris\noptions(tigris_use_cache = TRUE)\n\n# Get American Community Survey tract level data on population by race/ethnicity\n# Make sure to include a summary variable with total population\nbaltcity_pop <- get_acs(\n  geography = ____,\n  variables = ____,\n  summary_var = ____,\n  cache_table = TRUE,\n  year = 2021,\n  state = \"MD\",\n  county = \"Baltimore city\",\n  geometry = TRUE,\n  survey = \"acs5\"\n)\n\n# If you are unsure what variables to use, use the `load_variables()` function\n# to get a data frame with all of the variables\nacs_vars <- load_variables(year = ____, dataset = ____)\n\n# Use `tidycensus::as_dot_density()` to convert the geometry of your data into a\n# dot density format and scale the values based on the values_per_dot parameter\nbaltcity_pop_dots <- as_dot_density(\n  input_data = ____,\n  value = ____,\n  values_per_dot = 100,\n  group = \"variable\"\n)\n\n# Use tigris to get a basemap layer with the tract geometry\nbaltcity_tracts <- tracts(\n  state = ____,\n  county = ____\n)\n\n# Use geom_sf to make a map using the `baltimore_dots` data that is color-coded\n# by race/ethnicity\nggplot() +\n  geom_sf(data = ____) +\n  geom_sf(data = ____, aes(color = ____)) +\n  theme_void()\n\n# Now try to improve the map:\n#\n# - Change the size and transparency of the dots to address over-plotting\n# - Change the color scale to a color-blind friendly palette (I recommend `scale_color_brewer()`)\n# - Change the values of the attribute mapped to color to reflect the categories used by the U.S. Census Bureau\n\nggplot() +\n  geom_sf(data = ____) +\n  geom_sf(data = ____, aes(color = ____)) +\n  theme_void()\n```\n:::\n\n\nSolutions for this sample code are now available here.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Practice solutions\"}\n# Load libraries\n\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(osmdata)\nlibrary(tidyverse)\n\n# Set option for tigris\n\noptions(tigris_use_cache = TRUE)\n\n# Get American Community Survey data on population by race/ethnicity\n\nbaltcity_pop <- get_acs(\n  geography = \"tract\",\n  variables = c(\"B03002_003\", \"B03002_004\", \"B03002_012\"),\n  summary_var = \"B03002_001\",\n  cache_table = TRUE,\n  year = 2021,\n  state = \"MD\",\n  county = \"Baltimore city\",\n  geometry = TRUE,\n  survey = \"acs5\"\n)\n\n# If you are unsure what variables to use, use the `load_variables()` function\n# to get a data frame with all of the variables\n\nacs_vars <- load_variables(year = 2021, dataset = \"acs5\")\n\n# You can visualize the estimate using fill and split variables into different\n# panels of the plot\n\nggplot() +\n  geom_sf(data = baltcity_pop, aes(fill = estimate)) +\n  facet_wrap(~variable) +\n  theme_void()\n\n\n# Use `tidycensus::as_dot_density()` to convert the geometry of your data into a\n# dot density format and scale the values based on the values_per_dot parameter\n\nbaltcity_pop_dots <- as_dot_density(\n  input_data = baltcity_pop,\n  value = \"estimate\",\n  values_per_dot = 100,\n  group = \"variable\"\n)\n\nbaltcity_tracts <- tracts(\n  state = \"MD\",\n  county = \"Baltimore city\"\n)\n\n# Use geom_sf to make a map using the `baltimore_dots` data that is color-coded\n# by race/ethnicity\n\nggplot() +\n  geom_sf(data = baltcity_tracts) +\n  geom_sf(\n    data = baltcity_pop_dots,\n    aes(color = variable)\n  ) +\n  theme_void()\n\n# Now try to improve the map:\n#\n# - Change the size and transparency of the dots to address over-plotting\n# - Change the color scale to a color-blind friendly palette (I recommend `scale_color_brewer()`)\n# - Change the values of the attribute mapped to color to reflect the categories used by the U.S. Census Bureau\n\nggplot() +\n  geom_sf(data = baltcity_tracts, fill = NA) +\n  geom_sf(\n    data = baltcity_pop_dots,\n    aes(color = variable),\n    alpha = 0.5,\n    size = 0.35\n  ) +\n  scale_color_brewer(palette = \"Accent\", direction = -1) +\n  theme_void() +\n  theme(\n    legend.position = \"bottom\"\n  ) +\n  labs(\n    color = \"Race/ethnicity\"\n  )\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}