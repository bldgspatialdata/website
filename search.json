[
  {
    "objectID": "slides/data-visualization.html#why-and-how-do-we-visualize-spatial-data",
    "href": "slides/data-visualization.html#why-and-how-do-we-visualize-spatial-data",
    "title": "Visualizing spatial data with ggplot2",
    "section": "1.1 Why and how do we visualize spatial data?",
    "text": "1.1 Why and how do we visualize spatial data?"
  },
  {
    "objectID": "slides/data-visualization.html#how-do-we-visualize-spatial-data",
    "href": "slides/data-visualization.html#how-do-we-visualize-spatial-data",
    "title": "Visualizing spatial data with ggplot2",
    "section": "1.2 How do we visualize spatial data?",
    "text": "1.2 How do we visualize spatial data?\n\n\nA map is a special type of data visualization for spatial data but it isn‚Äôt the only one.\nPlots and tables are two other common ways to visualize spatial data.\n\n\n\n\nKey for interpreting Sanborn fire insurance maps courtesy Library of Congress"
  },
  {
    "objectID": "slides/data-visualization.html#grammar-of-graphics",
    "href": "slides/data-visualization.html#grammar-of-graphics",
    "title": "Visualizing spatial data with ggplot2",
    "section": "Grammar of graphics",
    "text": "Grammar of graphics\n\nImage from The Grammar of Graphics for Introduction to data visualisation with ggplot2 QCBS R Workshop Series"
  },
  {
    "objectID": "slides/data-visualization.html#grammar-of-graphics-1",
    "href": "slides/data-visualization.html#grammar-of-graphics-1",
    "title": "Visualizing spatial data with ggplot2",
    "section": "Grammar of graphics",
    "text": "Grammar of graphics\n\nData\nMapping\nStatistics\nScales\nGeometries\nFacets\nCoordinates\nTheme\n\n\nThis introduction to the ‚Äúgrammar of graphics‚Äù is based largely on a 2020 ggplot2 workshop (part 1) by Thomas Lin Pedersen."
  },
  {
    "objectID": "slides/data-visualization.html#data",
    "href": "slides/data-visualization.html#data",
    "title": "Visualizing spatial data with ggplot2",
    "section": "2.1 Data",
    "text": "2.1 Data\n\nStructure and representation of data determines what you can and can‚Äôt do with it\nData is expected to be in a ‚Äútidy‚Äù format (also known as long format data)"
  },
  {
    "objectID": "slides/data-visualization.html#mapping",
    "href": "slides/data-visualization.html#mapping",
    "title": "Visualizing spatial data with ggplot2",
    "section": "2.2 Mapping",
    "text": "2.2 Mapping\n\nAllow data to be understood by the graphics system through:\n\nAesthetic mapping: variables -&gt; graphical properties in the geometry\nFacet mapping: variables -&gt; panels in layout"
  },
  {
    "objectID": "slides/data-visualization.html#statistics",
    "href": "slides/data-visualization.html#statistics",
    "title": "Visualizing spatial data with ggplot2",
    "section": "2.3 Statistics",
    "text": "2.3 Statistics\n\nData may not represent the displayed values\nStatistics transform input variables into displayed values, e.g.\n\nCounting the number of observations by category\nCalculating summary statistics for a boxplot\n\n\n\nStatistics can be used prior to plotting data or used by a plotting function directly."
  },
  {
    "objectID": "slides/data-visualization.html#scales",
    "href": "slides/data-visualization.html#scales",
    "title": "Visualizing spatial data with ggplot2",
    "section": "2.4 Scales",
    "text": "2.4 Scales\n\nScales translate between value ranges and graphical properties, e.g.\n\nCategories -&gt; Colors\nNumbers -&gt; Position\n\nScales use a specific type of interpolation, e.g.¬†discrete, continuous, etc., so not all scales work with all variables.\n\n\nIn the not too common case where data directly represents a graphical property, e.g.¬†a ‚Äúcolor‚Äù column, you can use a special type of scale called an ‚Äúidentity‚Äù scale."
  },
  {
    "objectID": "slides/data-visualization.html#geometries",
    "href": "slides/data-visualization.html#geometries",
    "title": "Visualizing spatial data with ggplot2",
    "section": "2.5 Geometries",
    "text": "2.5 Geometries\n\nHow translate aesthetics into graphical representations\nBasic geometries (e.g.¬†points, lines, polygons) can be combined into more complex geometries (e.g.¬†box plot, map)\nTypically, the geometries are the same as the ‚Äútype‚Äù of plot"
  },
  {
    "objectID": "slides/data-visualization.html#facets",
    "href": "slides/data-visualization.html#facets",
    "title": "Visualizing spatial data with ggplot2",
    "section": "2.6 Facets",
    "text": "2.6 Facets\n\nDefines how data is split across multiple panels"
  },
  {
    "objectID": "slides/data-visualization.html#coordinates",
    "href": "slides/data-visualization.html#coordinates",
    "title": "Visualizing spatial data with ggplot2",
    "section": "2.7 Coordinates",
    "text": "2.7 Coordinates\n\nPositional aesthetics must be interpreted by a coordinate system\nDefines the physical mapping of aesthetics to the paper\n\n\nWe usually think about the cartesian coordinate system‚Äîbut there are a lot of different kinds of coordinate systems."
  },
  {
    "objectID": "slides/data-visualization.html#theme",
    "href": "slides/data-visualization.html#theme",
    "title": "Visualizing spatial data with ggplot2",
    "section": "2.8 Theme",
    "text": "2.8 Theme\n\nEvery part of the graphic that isn‚Äôt linked to the data:\n\nFonts\nSpacing\nColors\nWeights\netc."
  },
  {
    "objectID": "slides/data-visualization.html#cheatsheets",
    "href": "slides/data-visualization.html#cheatsheets",
    "title": "Visualizing spatial data with ggplot2",
    "section": "3.1 Cheatsheets",
    "text": "3.1 Cheatsheets\n\nggplot2 data visualization cheatsheet"
  },
  {
    "objectID": "slides/data-visualization.html#build-layered-data-visualizations",
    "href": "slides/data-visualization.html#build-layered-data-visualizations",
    "title": "Visualizing spatial data with ggplot2",
    "section": "3.2 Build layered data visualizations",
    "text": "3.2 Build layered data visualizations"
  },
  {
    "objectID": "slides/data-visualization.html#setup",
    "href": "slides/data-visualization.html#setup",
    "title": "Visualizing spatial data with ggplot2",
    "section": "3.3 Setup",
    "text": "3.3 Setup\nFor this session, we are going to use the {ggplot2} and {dplyr} packages along with {sf} and {rnaturalearth}:\n\n\nCode\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(sf)\nlibrary(rnaturalearth)"
  },
  {
    "objectID": "slides/data-visualization.html#setup-data",
    "href": "slides/data-visualization.html#setup-data",
    "title": "Visualizing spatial data with ggplot2",
    "section": "3.4 Setup data",
    "text": "3.4 Setup data\nWe are also going to use the storms data included with {dplyr}.\nTake a quick look at storms using glimpse():\n\n\nCode\nglimpse(storms)\n#&gt; Rows: 19,537\n#&gt; Columns: 13\n#&gt; $ name                         &lt;chr&gt; \"Amy\", \"Amy\", \"Amy\", \"Amy\", \"Amy\", \"Am‚Ä¶\n#&gt; $ year                         &lt;dbl&gt; 1975, 1975, 1975, 1975, 1975, 1975, 19‚Ä¶\n#&gt; $ month                        &lt;dbl&gt; 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,‚Ä¶\n#&gt; $ day                          &lt;int&gt; 27, 27, 27, 27, 28, 28, 28, 28, 29, 29‚Ä¶\n#&gt; $ hour                         &lt;dbl&gt; 0, 6, 12, 18, 0, 6, 12, 18, 0, 6, 12, ‚Ä¶\n#&gt; $ lat                          &lt;dbl&gt; 27.5, 28.5, 29.5, 30.5, 31.5, 32.4, 33‚Ä¶\n#&gt; $ long                         &lt;dbl&gt; -79.0, -79.0, -79.0, -79.0, -78.8, -78‚Ä¶\n#&gt; $ status                       &lt;fct&gt; tropical depression, tropical depressi‚Ä¶\n#&gt; $ category                     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA‚Ä¶\n#&gt; $ wind                         &lt;int&gt; 25, 25, 25, 25, 25, 25, 25, 30, 35, 40‚Ä¶\n#&gt; $ pressure                     &lt;int&gt; 1013, 1013, 1013, 1013, 1012, 1012, 10‚Ä¶\n#&gt; $ tropicalstorm_force_diameter &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA‚Ä¶\n#&gt; $ hurricane_force_diameter     &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA‚Ä¶\n\n\n\n\n\n\nRemember that each row is an observation of a storm, not a individual storm."
  },
  {
    "objectID": "slides/data-visualization.html#create-a-ggplot",
    "href": "slides/data-visualization.html#create-a-ggplot",
    "title": "Visualizing spatial data with ggplot2",
    "section": "3.5 Create a ggplot",
    "text": "3.5 Create a ggplot\nWe can start by using the function ggplot() to define a plot object. Set storm as the input data for ggplot():\n\n\n\nCode\nggplot(data = storms)\n\n\n\n\n\n\n\n\n\n\n. . . ::: {.smaller} Well, that doesn‚Äôt look like much. ü§î\nThis is the first step in creating a plot that we can add layers to. Parameters set with ggplot() can be ‚Äúinherited‚Äù by layers added later. :::"
  },
  {
    "objectID": "slides/data-visualization.html#add-aesthetics-and-layers",
    "href": "slides/data-visualization.html#add-aesthetics-and-layers",
    "title": "Visualizing spatial data with ggplot2",
    "section": "3.6 Add aesthetics and layers",
    "text": "3.6 Add aesthetics and layers"
  },
  {
    "objectID": "slides/data-visualization.html#visualizing-distributions",
    "href": "slides/data-visualization.html#visualizing-distributions",
    "title": "Visualizing spatial data with ggplot2",
    "section": "4.1 Visualizing distributions",
    "text": "4.1 Visualizing distributions"
  },
  {
    "objectID": "slides/data-visualization.html#distribution-of-one-numeric-variable",
    "href": "slides/data-visualization.html#distribution-of-one-numeric-variable",
    "title": "Visualizing spatial data with ggplot2",
    "section": "4.2 Distribution of one numeric variable",
    "text": "4.2 Distribution of one numeric variable\n\n\n\nCode\nggplot(\n  data = storms,\n  mapping = aes(y = lat)\n) +\n  geom_histogram(bins = 90)"
  },
  {
    "objectID": "slides/data-visualization.html#distribution-of-one-numeric-variable-1",
    "href": "slides/data-visualization.html#distribution-of-one-numeric-variable-1",
    "title": "Visualizing spatial data with ggplot2",
    "section": "4.3 Distribution of one numeric variable",
    "text": "4.3 Distribution of one numeric variable\n\n\n\nCode\nggplot(\n  data = storms,\n  mapping = aes(x = lat)\n) +\n  geom_freqpoly(binwidth = 1)"
  },
  {
    "objectID": "slides/data-visualization.html#distribution-of-one-categorical-variable",
    "href": "slides/data-visualization.html#distribution-of-one-categorical-variable",
    "title": "Visualizing spatial data with ggplot2",
    "section": "4.4 Distribution of one categorical variable",
    "text": "4.4 Distribution of one categorical variable\n\n\n\nCode\nggplot(\n  data = storms,\n  mapping = aes(y = category)\n) +\n  geom_bar()"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#setup",
    "href": "slides/spatial-data-attributes.html#setup",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "1 Setup",
    "text": "1 Setup\nToday, we are going to use the {tidyverse} along with {sf} and two related packages: {lwgeom} and {units}.\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(lwgeom)\nlibrary(units)"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#getting-started",
    "href": "slides/spatial-data-attributes.html#getting-started",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "2 Getting started",
    "text": "2 Getting started\nFor this session, we also need some data to look at. We are going to load data from the U.S. Census Bureau using the {tigris} package:\n\nlibrary(tigris)\noptions(tigris_use_cache = TRUE)"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#things-to-remember-about-spatial-data",
    "href": "slides/spatial-data-attributes.html#things-to-remember-about-spatial-data",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "3 Things to remember about spatial data",
    "text": "3 Things to remember about spatial data\n\nFields\nObjects\n\nCheck out the Wikipedia article on data models in GIS for more background on this topic."
  },
  {
    "objectID": "slides/spatial-data-attributes.html#things-to-remember-about-sf-and-sfc-objects",
    "href": "slides/spatial-data-attributes.html#things-to-remember-about-sf-and-sfc-objects",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "4 Things to remember about sf and sfc objects",
    "text": "4 Things to remember about sf and sfc objects\nA sf object is a data frame with a sfc list-column.\n\nus_states$geometry\n\nGeometry set for 56 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -179.2311 ymin: -14.60181 xmax: 179.8597 ymax: 71.43979\nGeodetic CRS:  NAD83\nFirst 5 geometries:"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#things-to-remember-about-sf-and-sfc-objects-1",
    "href": "slides/spatial-data-attributes.html#things-to-remember-about-sf-and-sfc-objects-1",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "5 Things to remember about sf and sfc objects",
    "text": "5 Things to remember about sf and sfc objects\n\na sf object is a data frame with a sfc list-column\na sf object has a sf_column attribute (it isn‚Äôt always named geometry‚Äîuse attributes() to take a look)"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#things-to-remember-about-sf-and-sfc-objects-2",
    "href": "slides/spatial-data-attributes.html#things-to-remember-about-sf-and-sfc-objects-2",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "6 Things to remember about sf and sfc objects",
    "text": "6 Things to remember about sf and sfc objects\n\na sf object is a data frame with a sfc list-column\na sf object has a sf_column attribute (it isn‚Äôt always named geometry‚Äîuse attributes() to take a look)\nsf and sfc objects use a coordinate reference system"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#things-to-remember-about-sf-and-sfc-objects-3",
    "href": "slides/spatial-data-attributes.html#things-to-remember-about-sf-and-sfc-objects-3",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "7 Things to remember about sf and sfc objects",
    "text": "7 Things to remember about sf and sfc objects\n\na sf object is a data frame with a sfc list-column\na sf object has a sf_column attribute (it isn‚Äôt always named geometry‚Äîuse attributes() to take a look)\nsf and sfc objects use a coordinate reference system\nworking with sf objects is slower than working with data frames‚Äîso drop the geometry if you don‚Äôt need it"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#things-to-remember-about-coordinate-reference-systems",
    "href": "slides/spatial-data-attributes.html#things-to-remember-about-coordinate-reference-systems",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "8 Things to remember about coordinate reference systems",
    "text": "8 Things to remember about coordinate reference systems\n\nobjects must share the same coordinate reference system if you are using them together\ncoordinate reference systems are stored as attributes for sfc and sf objects (sfg objects don‚Äôt have a CRS)\ncoordinate reference systems have units\ngeographic and projected coordinate reference systems are not the same\ncoordinate reference systems can be missing and they can be wrong"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#things-to-think-about",
    "href": "slides/spatial-data-attributes.html#things-to-think-about",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "9 Things to think about",
    "text": "9 Things to think about\n\nsf objects are not the only way to represent spatial data in R\nIf you are working with more than one sf or sfc, the objects must use the same coordinate reference system to use them together.\n\n\n# state"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#what-is-an-attribute-in-gis",
    "href": "slides/spatial-data-attributes.html#what-is-an-attribute-in-gis",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "10 What is an ‚Äúattribute‚Äù in GIS?",
    "text": "10 What is an ‚Äúattribute‚Äù in GIS?\nWithin a GIS desktop application, an attribute may be known as a field.\nWhen we talk about tidy data frames, an attribute is equivalent to a variable which is represented as a column in a data frame.\n\nhttps://support.esri.com/en-us/gis-dictionary/attribute\n\n[data models] Nonspatial information about a geographic feature in a GIS, usually stored in a table and linked to the feature by a unique identifier. For example, attributes of a river might include its name, length, and sediment load at a gauging station.\n[data models] In raster datasets, information associated with each unique value of a raster cell.\n[graphics (map display)] Information that specifies how features are displayed and labeled on a map; for example, the graphic attributes of a river might include line thickness, line length, color, and font for labeling."
  },
  {
    "objectID": "slides/spatial-data-attributes.html#what-is-an-attribute",
    "href": "slides/spatial-data-attributes.html#what-is-an-attribute",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "11 What is an attribute?",
    "text": "11 What is an attribute?\nSo (to recap) an attribute in GIS can also be called a‚Ä¶\n\n‚Ä¶field in a desktop GIS application\n‚Ä¶variable in tidy data\n‚Ä¶column in a data frame"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#what-types-of-attributes-exist",
    "href": "slides/spatial-data-attributes.html#what-types-of-attributes-exist",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "12 What types of attributes exist?",
    "text": "12 What types of attributes exist?\nAttributes are ‚Äúproperties of features (‚Äòthings‚Äô) that do not describe the feature‚Äôs geometry‚Äù.\nHere are the attributes for us_states:\n\nglimpse(st_drop_geometry(us_states))\n\nRows: 56\nColumns: 14\n$ REGION   &lt;chr&gt; \"3\", \"3\", \"2\", \"2\", \"3\", \"1\", \"4\", \"1\", \"3\", \"1\", \"1\", \"3\", \"‚Ä¶\n$ DIVISION &lt;chr&gt; \"5\", \"5\", \"3\", \"4\", \"5\", \"1\", \"8\", \"1\", \"5\", \"1\", \"1\", \"5\", \"‚Ä¶\n$ STATEFP  &lt;chr&gt; \"54\", \"12\", \"17\", \"27\", \"24\", \"44\", \"16\", \"33\", \"37\", \"50\", \"‚Ä¶\n$ STATENS  &lt;chr&gt; \"01779805\", \"00294478\", \"01779784\", \"00662849\", \"01714934\", \"‚Ä¶\n$ GEOID    &lt;chr&gt; \"54\", \"12\", \"17\", \"27\", \"24\", \"44\", \"16\", \"33\", \"37\", \"50\", \"‚Ä¶\n$ STUSPS   &lt;chr&gt; \"WV\", \"FL\", \"IL\", \"MN\", \"MD\", \"RI\", \"ID\", \"NH\", \"NC\", \"VT\", \"‚Ä¶\n$ NAME     &lt;chr&gt; \"West Virginia\", \"Florida\", \"Illinois\", \"Minnesota\", \"Marylan‚Ä¶\n$ LSAD     &lt;chr&gt; \"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"‚Ä¶\n$ MTFCC    &lt;chr&gt; \"G4000\", \"G4000\", \"G4000\", \"G4000\", \"G4000\", \"G4000\", \"G4000\"‚Ä¶\n$ FUNCSTAT &lt;chr&gt; \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"‚Ä¶\n$ ALAND    &lt;dbl&gt; 62266456923, 138962819934, 143778515726, 206244837557, 251517‚Ä¶\n$ AWATER   &lt;dbl&gt; 489045863, 45971472526, 6216539665, 18937184315, 6979295311, ‚Ä¶\n$ INTPTLAT &lt;chr&gt; \"+38.6472854\", \"+28.3989775\", \"+40.1028754\", \"+46.3159573\", \"‚Ä¶\n$ INTPTLON &lt;chr&gt; \"-080.6183274\", \"-082.5143005\", \"-089.1526108\", \"-094.1996043‚Ä¶"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#what-is-an-attribute-domain",
    "href": "slides/spatial-data-attributes.html#what-is-an-attribute-domain",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "13 What is an ‚Äúattribute domain‚Äù?",
    "text": "13 What is an ‚Äúattribute domain‚Äù?\n\n\n[data structures] In a geodatabase, a mechanism for enforcing data integrity. Attribute domains define what values are allowed in a field in a feature class or nonspatial attribute table. If the features or nonspatial objects have been grouped into subtypes, different attribute domains can be assigned to each of the subtypes."
  },
  {
    "objectID": "slides/spatial-data-attributes.html#what-are-we-working-with",
    "href": "slides/spatial-data-attributes.html#what-are-we-working-with",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "14 What are we working with?",
    "text": "14 What are we working with?\nWhen we do data analysis using {dplyr}, there are three types of functions we use most often:\n\nBoolean operators or predicates\nWindow or vector functions\nSummary or analysis functions\n\nThere are similar"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#predicate-functions-for-geometries-with-sf",
    "href": "slides/spatial-data-attributes.html#predicate-functions-for-geometries-with-sf",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "15 Predicate functions for geometries with {sf}",
    "text": "15 Predicate functions for geometries with {sf}\n{sf} includes ‚Äúvectorized‚Äù logical operators or tests that work with geometry including:\n\nst_is()\nst_is_valid()\nst_is_empty()"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#predicate-functions-for-geometries-with-sf-1",
    "href": "slides/spatial-data-attributes.html#predicate-functions-for-geometries-with-sf-1",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "16 Predicate functions for geometries with {sf}",
    "text": "16 Predicate functions for geometries with {sf}\n{sf} also includes more than a dozen predicate functions for working with pairs of simple geometries including:\n\nst_intersects\nst_disjoint\nst_contains\nst_covers\nst_is_within_distance"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#using-predicate-functions-for-spatial-joins-and-filters",
    "href": "slides/spatial-data-attributes.html#using-predicate-functions-for-spatial-joins-and-filters",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "17 Using predicate functions for spatial joins and filters",
    "text": "17 Using predicate functions for spatial joins and filters\nst_filter() and st_join() are two functions that rely on these predicate functions to work."
  },
  {
    "objectID": "slides/spatial-data-attributes.html#creating-new-variables-with-geometry",
    "href": "slides/spatial-data-attributes.html#creating-new-variables-with-geometry",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "18 Creating new variables with geometry",
    "text": "18 Creating new variables with geometry\n\nMeasuring feature geometries\nComparing feature geometries\nJoining data based on feature geometries\n\n\nmaryland &lt;- filter(us_states, NAME == \"Maryland\")"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#measuring-geometries-with-sf",
    "href": "slides/spatial-data-attributes.html#measuring-geometries-with-sf",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "19 Measuring geometries with {sf}",
    "text": "19 Measuring geometries with {sf}"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#measuring-geometries-with-sf-1",
    "href": "slides/spatial-data-attributes.html#measuring-geometries-with-sf-1",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "20 Measuring geometries with {sf}",
    "text": "20 Measuring geometries with {sf}\n{sf} includes a few different functions for measuring geometries:\n\nst_area() (only works with POLYGON and MULTIPOLYGON geometries)\nst_length() (only wrks with LINESTRING and MULTILINSTRING geometries)\nst_distance() (requires a pair of objects)"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#measuring-geometries-with-sf-2",
    "href": "slides/spatial-data-attributes.html#measuring-geometries-with-sf-2",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "21 Measuring geometries with {sf}",
    "text": "21 Measuring geometries with {sf}\nAll of these functions are vectorized meaning that they can operate independently on each feature in a sf or sfc object.\nThey support both sf inputs (data frames) and sfc inputs (lists)‚Äîbut they always return a vector:\n\nst_area(maryland)\n\n53204014058 [m^2]\n\nst_area(maryland$geometry)\n\n53204014058 [m^2]"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#measuring-geometries-with-sf-3",
    "href": "slides/spatial-data-attributes.html#measuring-geometries-with-sf-3",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "22 Measuring geometries with {sf}",
    "text": "22 Measuring geometries with {sf}\nBut, remember, dplyr::mutate() is designed to work with vectorized functions so you can do us a measurement function inside mutate():\n\nmaryland |&gt;\n  mutate(\n    area = st_area(geometry)\n  )\n\nSimple feature collection with 1 feature and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -8848525 ymin: 4563419 xmax: -8347435 ymax: 4825776\nProjected CRS: WGS 84 / Pseudo-Mercator\n  REGION DIVISION STATEFP  STATENS GEOID STUSPS     NAME LSAD MTFCC FUNCSTAT\n1      3        5      24 01714934    24     MD Maryland   00 G4000        A\n        ALAND     AWATER    INTPTLAT     INTPTLON\n1 25151771744 6979295311 +38.9466584 -076.6744939\n                        geometry              area\n1 MULTIPOLYGON (((-8433120 47... 53204014058 [m^2]"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#measuring-geometries-with-sf-4",
    "href": "slides/spatial-data-attributes.html#measuring-geometries-with-sf-4",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "23 Measuring geometries with {sf}",
    "text": "23 Measuring geometries with {sf}\nYou can even work with multiple geometries using this same approach:\n\nus_states |&gt;\n  mutate(\n    area = st_area(geometry),\n    distance_to_maryland = st_distance(geometry, maryland)\n  )\n\nSimple feature collection with 56 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -19951910 ymin: -1643353 xmax: 20021890 ymax: 11554350\nProjected CRS: WGS 84 / Pseudo-Mercator\nFirst 10 features:\n   REGION DIVISION STATEFP  STATENS GEOID STUSPS           NAME LSAD MTFCC\n1       3        5      54 01779805    54     WV  West Virginia   00 G4000\n2       3        5      12 00294478    12     FL        Florida   00 G4000\n3       2        3      17 01779784    17     IL       Illinois   00 G4000\n4       2        4      27 00662849    27     MN      Minnesota   00 G4000\n5       3        5      24 01714934    24     MD       Maryland   00 G4000\n6       1        1      44 01219835    44     RI   Rhode Island   00 G4000\n7       4        8      16 01779783    16     ID          Idaho   00 G4000\n8       1        1      33 01779794    33     NH  New Hampshire   00 G4000\n9       3        5      37 01027616    37     NC North Carolina   00 G4000\n10      1        1      50 01779802    50     VT        Vermont   00 G4000\n   FUNCSTAT        ALAND      AWATER    INTPTLAT     INTPTLON\n1         A  62266456923   489045863 +38.6472854 -080.6183274\n2         A 138962819934 45971472526 +28.3989775 -082.5143005\n3         A 143778515726  6216539665 +40.1028754 -089.1526108\n4         A 206244837557 18937184315 +46.3159573 -094.1996043\n5         A  25151771744  6979295311 +38.9466584 -076.6744939\n6         A   2677763373  1323686975 +41.5964850 -071.5264901\n7         A 214049908397  2391592787 +44.3484222 -114.5588538\n8         A  23190126218  1025960758 +43.6726907 -071.5843145\n9         A 125935585728 13453835222 +35.5397100 -079.1308636\n10        A  23872569964  1030754610 +44.0589536 -072.6710173\n                         geometry               area distance_to_maryland\n1  MULTIPOLYGON (((-8655578 47... 103045932411 [m^2]              0.0 [m]\n2  MULTIPOLYGON (((-9251622 28... 240290408316 [m^2]        1122737.0 [m]\n3  MULTIPOLYGON (((-9784141 46... 257089838322 [m^2]         893538.7 [m]\n4  MULTIPOLYGON (((-10610961 6... 473223859914 [m^2]        1423100.6 [m]\n5  MULTIPOLYGON (((-8433120 47...  53204014058 [m^2]              0.0 [m]\n6  MULTIPOLYGON (((-7979248 50...   7160497121 [m^2]         490274.7 [m]\n7  MULTIPOLYGON (((-12952962 6... 424675068387 [m^2]        3530363.1 [m]\n8  MULTIPOLYGON (((-7885747 53...  46326405214 [m^2]         579065.3 [m]\n9  MULTIPOLYGON (((-8671763 43... 210941928191 [m^2]         186785.1 [m]\n10 MULTIPOLYGON (((-8019664 54...  48271922011 [m^2]         527897.6 [m]\n\n\nThis works to aggregate features by division:\n\nus_states |&gt;\n  group_by(DIVISION) |&gt;\n  summarise(\n    n_states = n_distinct(NAME)\n  )\n\nSimple feature collection with 10 features and 2 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -19951910 ymin: -1643353 xmax: 20021890 ymax: 11554350\nProjected CRS: WGS 84 / Pseudo-Mercator\n# A tibble: 10 √ó 3\n   DIVISION n_states                                                    geometry\n   &lt;chr&gt;       &lt;int&gt;                                              &lt;GEOMETRY [m]&gt;\n 1 0               5 MULTIPOLYGON (((-18726019 -1633065, -18725998 -1633025, -1‚Ä¶\n 2 1               6 MULTIPOLYGON (((-7978692 5038758, -7978581 5039616, -79783‚Ä¶\n 3 2               3 POLYGON ((-8290777 4763109, -8291389 4762454, -8291849 476‚Ä¶\n 4 3               5 POLYGON ((-9799335 4551032, -9799438 4550965, -9799539 455‚Ä¶\n 5 4               7 POLYGON ((-10176807 4921011, -10176847 4920961, -10177047 ‚Ä¶\n 6 5               9 MULTIPOLYGON (((-9250560 2835330, -9249947 2836819, -92493‚Ä¶\n 7 6               4 POLYGON ((-9840190 3523448, -9841106 3523126, -9842801 352‚Ä¶\n 8 7               4 POLYGON ((-10148561 3895849, -10148557 3895720, -10148574 ‚Ä¶\n 9 8               8 POLYGON ((-11473113 3798919, -11473113 3798905, -11473113 ‚Ä¶\n10 9               5 MULTIPOLYGON (((-19000283 2939831, -19000200 2940106, -190‚Ä¶"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#measuring-geometries-with-sf-5",
    "href": "slides/spatial-data-attributes.html#measuring-geometries-with-sf-5",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "24 Measuring geometries with {sf}",
    "text": "24 Measuring geometries with {sf}\nNot all functions work with all geometry types!\n\nst_area() only works with POLYGON and MULTIPOLYGON geometries\nst_length() only works with LINESTRING and MULTILINSTRING geometries"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#measuring-geometries-with-sf-6",
    "href": "slides/spatial-data-attributes.html#measuring-geometries-with-sf-6",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "25 Measuring geometries with {sf}",
    "text": "25 Measuring geometries with {sf}\n\nst_distance() requires at least two objects"
  },
  {
    "objectID": "slides/spatial-data-attributes.html#measuring-geometries-with-lwgeom-and-geosphere",
    "href": "slides/spatial-data-attributes.html#measuring-geometries-with-lwgeom-and-geosphere",
    "title": "Creating and manipulating attributes for spatial data",
    "section": "26 Measuring geometries with {lwgeom} and {geosphere}",
    "text": "26 Measuring geometries with {lwgeom} and {geosphere}\n\nlwgeom::st_perimeter()\ngeosphere::bearing()"
  },
  {
    "objectID": "slides/spatial-data.html#overview",
    "href": "slides/spatial-data.html#overview",
    "title": "Getting started with spatial data using {sf} and the {tidyverse}",
    "section": "1 Overview",
    "text": "1 Overview\n\nWhat is R?\nHow does R work with spatial data?\nTake a look at {sf} and tidyverse in action"
  },
  {
    "objectID": "slides/spatial-data.html#what-is-r",
    "href": "slides/spatial-data.html#what-is-r",
    "title": "Getting started with spatial data using {sf} and the {tidyverse}",
    "section": "2 What is R?",
    "text": "2 What is R?\n\n\nR is best known as a statistical programming language often used in data science and research.\nLike Python or C++, R is an object-oriented, functional programming language where the base set of features can be extended through open-source packages or libraries.\n\n\n\n\n\nA package is a bundle of code that a generous person has written, tested, and then given away. Most of the time packages are designed to solve a specific problem, so they to pull together functions related to a particular data science problem (e.g., data wrangling, visualisation, inference).\n\nFrom BasicBasics 2 (R-Ladies Sydney)"
  },
  {
    "objectID": "slides/spatial-data.html#how-does-r-work-with-spatial-data",
    "href": "slides/spatial-data.html#how-does-r-work-with-spatial-data",
    "title": "Getting started with spatial data using {sf} and the {tidyverse}",
    "section": "3 How does R work with spatial data?",
    "text": "3 How does R work with spatial data?\n\n\nThe {sf} package, first published in 2016, is the most popular R package for spatial data.\n\nExtension packages include:\n\nlwgeom for selected liblwgeom/PostGIS functions\nstars for raster data, and raster or vector data cubes (spatial time series)\nsfnetworks for geospatial network data"
  },
  {
    "objectID": "slides/spatial-data.html#take-a-look-at-sf-and-the-tidyverse-in-action",
    "href": "slides/spatial-data.html#take-a-look-at-sf-and-the-tidyverse-in-action",
    "title": "Getting started with spatial data using {sf} and the {tidyverse}",
    "section": "4 Take a look at {sf} and the tidyverse in action",
    "text": "4 Take a look at {sf} and the tidyverse in action"
  },
  {
    "objectID": "slides/spatial-data.html#related-resources",
    "href": "slides/spatial-data.html#related-resources",
    "title": "Getting started with spatial data using {sf} and the {tidyverse}",
    "section": "5 Related resources",
    "text": "5 Related resources\n\nWeek 1 Required readings and Optional readings\nExercise 1"
  },
  {
    "objectID": "exercises/exercise_04.html",
    "href": "exercises/exercise_04.html",
    "title": "Exercise 04",
    "section": "",
    "text": "This week‚Äôs exercises are excerpted from Ch. 3, Ch. 4, and Ch. 5 in Geocomputation with R.\nThese exercises build on our last exercise using {dplyr} and include some of the same skills including:\n\nFiltering rows or observations\nGrouping and summarizing data by variable\n\nNew skills you will practice with this exercise include:\n\nUsing non-spatial joins for data frames\nComputing geometric measurements\nUsing spatial filters\nUsing geometric operations on a simple feature geometry set\nUsing geometric operations on pairs of simple feature geometries",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 04"
    ]
  },
  {
    "objectID": "exercises/exercise_04.html#overview",
    "href": "exercises/exercise_04.html#overview",
    "title": "Exercise 04",
    "section": "",
    "text": "This week‚Äôs exercises are excerpted from Ch. 3, Ch. 4, and Ch. 5 in Geocomputation with R.\nThese exercises build on our last exercise using {dplyr} and include some of the same skills including:\n\nFiltering rows or observations\nGrouping and summarizing data by variable\n\nNew skills you will practice with this exercise include:\n\nUsing non-spatial joins for data frames\nComputing geometric measurements\nUsing spatial filters\nUsing geometric operations on a simple feature geometry set\nUsing geometric operations on pairs of simple feature geometries",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 04"
    ]
  },
  {
    "objectID": "exercises/exercise_04.html#setup",
    "href": "exercises/exercise_04.html#setup",
    "title": "Exercise 04",
    "section": "2 Setup",
    "text": "2 Setup\nThis exercise uses the sf and tidyverse packages:\n\nlibrary(tidyverse)\nlibrary(sf)\n\nWe are also going to use the us_states and us_states_df data from the {spData} package:\n\nlibrary(spData)\n\nNote that the us_states loaded for this exercise is different than the us_states we created during class with the tigris::states() function. For this exercise, the bonus exercises are mixed in with the other questions but you are welcome to skip them if you do not want go for the bonus part of the exercise.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 04"
    ]
  },
  {
    "objectID": "exercises/exercise_04.html#exercises",
    "href": "exercises/exercise_04.html#exercises",
    "title": "Exercise 04",
    "section": "3 Exercises",
    "text": "3 Exercises\n\n3.1 Filtering data\nFind all states that belong to the West region, have an area below 250,000 km2and in 2015 a population greater than 5,000,000 residents (Hint: you may need to use the function units::set_units() or as.numeric()).\n\nus_states |&gt; \n  ____\n\nFind all states that belong to the South region, had an area larger than 150,000 km2 or a total population in 2015 larger than 7,000,000 residents.\n\nus_states |&gt; \n  ____\n\n\n\n\n\n\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answers for filtering data questions‚Äù.\n\n\n\n\n\n3.2 Joining and summarizing data\nWhat was the total population in 2015 in the us_states dataset? What was the minimum and maximum total population in 2015?\n\nus_states |&gt; \n  ____\n\nAdd variables from us_states_df to us_states, and create a new object called us_states_stats.\n\nWhat function did you use and why?\nWhich variable is the key in both datasets?\nWhat is the class of the new object?\n\nTip: we are covering joins in more detail next week‚Äîcheck out the R for Data Science chapter on Joins for more information.\n\nus_states_stats &lt;- us_states |&gt; \n  ____\n\nus_states_df has two more rows than us_states. How can you find them?\nHint: try to use the dplyr::anti_join() function.\n\n____(us_states, us_states_df)\n\nHow much has population density changed between 2010 and 2015 in each state?\nCalculate the change in percentages and map them with plot() or geom_sf():\nCalculate the change in the number of residents living below the poverty level between 2010 and 2015 for each state.\nHint: See ?us_states_df for documentation on the poverty level columns.\nOptional: Calculate the change in the percentage of residents living below the poverty level in each state.\nWhat was the minimum, average and maximum state‚Äôs number of people living below the poverty line in 2015 for each region?\nOptional: What is the region with the largest increase in people living below the poverty line?\n\n\n3.3 Spatial operations\nSection 4.2 (in Geocomputation with R) established that Canterbury was the region of New Zealand containing most of the 100 highest points in the country.\nHow many of these high points does the Canterbury region contain?\n\ncanterbury &lt;- nz |&gt;\n  filter(Name == \"Canterbury\")\n\nnz_height |&gt; \n  ____\n\nOptional: plot the result using the ggplot2::geom_sf() function to show all of New Zealand, canterbury region highlighted in yellow, high points in Canterbury represented by red crosses (Hint: try using shape = 7) and high points in other parts of New Zealand represented by blue circles.\nSee the help page ?ggplot2::shape and run the examples to see an illustration of different shape values.\nWhich region has the second highest number of nz_height points, and how many does it have?\n\nnz_height |&gt; \n  ____\n\nGeneralizing the question to all regions: how many of New Zealand‚Äôs 16 regions contain points which belong to the top 100 highest points in the country? Which regions?\nOptional: create a table listing these regions in order of the number of points and their name. Hint: use dplyr::slice_max() and gt::gt().\nUsing st_buffer(), how many points in nz_height are within 100 km of Canterbury?\n\ncanterbury_area &lt;- st_buffer(canterbury, dist = ____)\n\nnz_height |&gt; \n  ____\n\n\n\n\n\n\n\nRender, commit, and push your changes to GitHub again with a second informative commit message.\n\n\n\n\n\n3.4 Spatial predicates\nTest your knowledge of spatial predicates by finding out and plotting how US states relate to each other and other spatial objects.\nThe starting point of this part of the exercise is to create an object representing Maryland state in the USA using the filter() function and plot the resulting object in the context of US states.\n\nmaryland &lt;- filter(____, ____)\n\nggplot() +\n  geom_sf(data = us_states) +\n  geom_sf(data = ____)\n\nCreate a new object representing all the states that geographically intersect with Maryland and plot the result (hint: the most concise way to do this is with the subsetting method [ but you can also use sf::st_filter()).\n\nstates_intersecting_md &lt;- ____\n\nCreate another object representing all the objects that touch (have a shared boundary with) Maryland and plot the result.\nHint: remember you can use the argument op = st_intersects when subsetting with base R or .predicate = st_intersects when using st_filter()\n\nstates_touching_md &lt;- ____\n\nOptional: create a straight line from the centroid of Maryland to the centroid of California near the West coast of the USA (hint: functions st_centroid(), st_union() and st_cast() described in Chapter 5 may help) and identify which states this long East-West line crosses.\nHow far is the geographic centroid of Maryland from the geographic centroid of Canterbury, New Zealand?\nCalculate the perimeter of the boundary lines of US states in meters. Which state has the longest border and which has the shortest?\nHint: st_perimeter is a recent addition to {sf} that works with POLYGON or MULTIPOLYGON geometry. If you use st_length, make sure you convert your data to LINESTRING or MULTILINESTRING geometry.\n\nus_states |&gt; \n  ____\n\n\n\n3.5 Tidy data\nus_states_df has information on median income and poverty in a ‚Äúwide‚Äù format. Pivot the data into a long format using tidyr::pivot_longer()\n\nus_states_df |&gt; \n  pivot_longer(\n    cols = ____\n  )\n\nWhy could it be useful to have this data in a wide format?\nOptional: By default, the new ‚Äúname‚Äù created by pivot_longer() contains the existing column names. Try using the names_pattern or names_transform arguments to create a separate year and variable column:\n\nus_states_df |&gt; \n  pivot_longer(\n    cols = ____,\n    ____\n  )\n\nThe last question is from Ch. 5 Data Tidying from R4DS. For this question, we are using a handful of sample tables included with the {tidyr} package:\n\ntable1\n\ntable2\n\ntable3\n\nSketch out the process you‚Äôd use to calculate the rate for table2 and table3. You will need to perform four operations:\n\nExtract the number of TB cases per country per year.\nExtract the matching population per country per year.\nDivide cases by population, and multiply by 10000.\nStore back in the appropriate place.\n\nYou haven‚Äôt yet learned all the functions you‚Äôd need to actually perform these operations, but you should still be able to think through the transformations you‚Äôd need.\n\n\n\n\n\n\nDon‚Äôt forget to render, commit, and push your changes to GitHub one last time with an informative commit message.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 04"
    ]
  },
  {
    "objectID": "exercises/exercise_03.html",
    "href": "exercises/exercise_03.html",
    "title": "Exercise 03",
    "section": "",
    "text": "Exercise due on 2024-09-20",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 03"
    ]
  },
  {
    "objectID": "exercises/exercise_03.html#overview",
    "href": "exercises/exercise_03.html#overview",
    "title": "Exercise 03",
    "section": "1 Overview",
    "text": "1 Overview\nThis week‚Äôs exercise comes directly from the data transformation chapter of R for Data Science. More typically, our exercises will always include spatial data but I wanted to use a more tried and tested exercise for this week‚Äôs material.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 03"
    ]
  },
  {
    "objectID": "exercises/exercise_03.html#setup",
    "href": "exercises/exercise_03.html#setup",
    "title": "Exercise 03",
    "section": "2 Setup",
    "text": "2 Setup\nIf you don‚Äôt already have the {nycflights13} package installed, go ahead and install it then restart before continuing with the exercise.\n\npak::pkg_install(\"nycflights13\")\n\nIn addition to nycflights13, you will also need {dplyr} and {ggplot2}. Load the tidyverse library to make sure you have everything you need:\n\nlibrary(tidyverse)\nlibrary(nycflights13)",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 03"
    ]
  },
  {
    "objectID": "exercises/exercise_03.html#exercises",
    "href": "exercises/exercise_03.html#exercises",
    "title": "Exercise 03",
    "section": "3 Exercises",
    "text": "3 Exercises\n\n3.1 Working with rows\nIn a single pipeline for each condition, find all flights that meet the condition:\n\nHad an arrival delay of two or more hours\n\n\nflights |&gt; \n  ____\n\n\nFlew to Houston (IAH or HOU)\n\n\nflights |&gt; \n  ____\n\n\nWere operated by United, American, or Delta\n\n\nflights |&gt; \n  ____\n\n\nDeparted in summer (July, August, and September)\n\n\nflights |&gt; \n  ____\n\n\nArrived more than two hours late, but didn‚Äôt leave late\n\n\nflights |&gt; \n  ____\n\n\nWere delayed by at least an hour, but made up over 30 minutes in flight\n\n\nflights |&gt; \n  ____\n\nSort flights to find the flights with longest departure delays. Find the flights that left earliest in the morning.\n\nflights |&gt; \n  arrange(____)\n\nSort flights to find the fastest flights. (Hint: Try including a math calculation inside of your function.)\n\nflights |&gt; \n  ____\n\nAnswer the following questions including code blocks showing the code used in determining your answer.\nWas there a flight on every day of 2013? ____\nWhich flights traveled the farthest distance? ____\nWhich traveled the least distance? ____\nDoes it matter what order you used filter() and arrange() if you‚Äôre using both? Why/why not? Think about the results and how much work the functions would have to do.\n____\n\n\n\n\n\n\nNow is a good time to render, commit, and push your changes to GitHub with an informative commit message.\nMake sure to commit and push all changed files so that your Git pane is empty afterwards.\n\n\n\n\n\n3.2 Working with columns\nCompare dep_time, sched_dep_time, and dep_delay. How would you expect those three numbers to be related?\n____\nBrainstorm as many ways as possible to select dep_time, dep_delay, arr_time, and arr_delay from flights.\n\nselect(flights, ____)\n\nWhat happens if you specify the name of the same variable multiple times in a select() call?\n\nselect(flights, ____)\n\nWhat does the any_of() function do? Why might it be helpful in conjunction with this vector?\n\nvariables &lt;- c(\"year\", \"month\", \"day\", \"dep_delay\", \"arr_delay\")\n\nDoes the result of running the following code surprise you? How do the select helpers deal with upper and lower case by default? How can you change that default?\n\nflights |&gt; select(contains(\"TIME\"))\n\nRename air_time to air_time_min to indicate units of measurement and move it to the beginning of the data frame.\n\nflights |&gt; \n  rename(____)\n\nWhy doesn‚Äôt the following work, and what does the error mean?\n\nflights |&gt; \n  select(tailnum) |&gt; \n  arrange(arr_delay)\n\n\n\n\n\n\n\nDon‚Äôt forget to render, commit, and push your changes to GitHub with an informative commit message.\n\n\n\n\n\n3.3 Working with groups\nWhich carrier has the worst average delays? Challenge: can you disentangle the effects of bad airports vs.¬†bad carriers? Why/why not? (Hint: think about flights |&gt; group_by(carrier, dest) |&gt; summarize(n()))\n\nflights |&gt; \n  ____\n\nFind the flights that are most delayed upon departure from each destination.\n\nflights |&gt; \n  ____\n\nHow do delays vary over the course of the day. Illustrate your answer with a plot.\nWhat happens if you supply a negative n to slice_min() and friends?\n\nslice_min(flights, ____)\n\nExplain what count() does in terms of the dplyr verbs you just learned. What does the sort argument to count() do?\n\ncount(flights, ____)\n\ncount(flights, ____, sort = ____)\n\n\n\n\n\n\n\nRender, commit, and push your final changes to GitHub with a meaningful commit message.\nMake sure to commit and push all changed files so that your Git pane is empty afterwards.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 03"
    ]
  },
  {
    "objectID": "slides/spatial-data-io.html#spatial-data-is-everywhere",
    "href": "slides/spatial-data-io.html#spatial-data-is-everywhere",
    "title": "Reading and writing spatial data",
    "section": "1 Spatial data is everywhere",
    "text": "1 Spatial data is everywhere\n\nShapefiles, GeoJSON files, and other spatial data files\nSpatial data editing and hosting services, e.g.¬†ArcGIS Online or Felt)\nOpen data portals serving spatial and non-spatial data, e.g.¬†data.gov"
  },
  {
    "objectID": "slides/spatial-data-io.html#spatial-data-is-everywhere-1",
    "href": "slides/spatial-data-io.html#spatial-data-is-everywhere-1",
    "title": "Reading and writing spatial data",
    "section": "2 Spatial data is everywhere",
    "text": "2 Spatial data is everywhere\n\nGoogle Maps, Apple Maps, Waze, and navigation apps (on your phone or in your vehicle)\nBiking and running apps (Strava publishes a global user activity heatmap)\nWeb browsers on your phone and desktop application"
  },
  {
    "objectID": "slides/spatial-data-io.html#spatial-data-is-everywhere-2",
    "href": "slides/spatial-data-io.html#spatial-data-is-everywhere-2",
    "title": "Reading and writing spatial data",
    "section": "3 Spatial data is everywhere",
    "text": "3 Spatial data is everywhere\n\nPhone camera photos (stored in the EXIF metadata)\nCalendars (iCal), contacts (vCard), and emails (using IP address locations)"
  },
  {
    "objectID": "slides/spatial-data-io.html#creating-spatial-data-is-easy",
    "href": "slides/spatial-data-io.html#creating-spatial-data-is-easy",
    "title": "Reading and writing spatial data",
    "section": "4 Creating spatial data is ‚Äúeasy‚Äù",
    "text": "4 Creating spatial data is ‚Äúeasy‚Äù\n\nGIS Desktop applications, e.g.¬†QGIS\nWeb mapping applications (e.g.¬†geojson.io, Felt)\nSpreadsheet applications (e.g.¬†Google Sheets)\nDatabase builders (e.g.¬†Airtable or Microsoft Lists)"
  },
  {
    "objectID": "slides/spatial-data-io.html#what-can-we-do-with-it-all",
    "href": "slides/spatial-data-io.html#what-can-we-do-with-it-all",
    "title": "Reading and writing spatial data",
    "section": "5 What can we do with it all?",
    "text": "5 What can we do with it all?\n\nRead and write spatial data files\nRead and write related data files\nRead from and write to web services"
  },
  {
    "objectID": "slides/spatial-data-io.html#common-spatial-file-formats",
    "href": "slides/spatial-data-io.html#common-spatial-file-formats",
    "title": "Reading and writing spatial data",
    "section": "6 Common spatial file formats",
    "text": "6 Common spatial file formats\n\nShapefile (.shp)\nGeoJSON (.json, .geojson)\nGeoPackage (.gpkg)\nKML - Keyhole Markup Language (.kml)\nEsri File Geodatabase (.gdb)\n\n\n\nVector spatial: Shapefile, GeoJSON, KML\nRaster spatial: GeoTIFF,\nTabular data with geometry: CSV, Microsoft Excel, delimited text with coordinates or WKT (well known text)"
  },
  {
    "objectID": "slides/spatial-data-io.html#common-spatial-file-formats-1",
    "href": "slides/spatial-data-io.html#common-spatial-file-formats-1",
    "title": "Reading and writing spatial data",
    "section": "7 Common spatial file formats",
    "text": "7 Common spatial file formats\nThese file formats vary in:\n\nTypes of geometry that they support\nConstraints or limits (e.g.¬†shapefiles limit the lenghth of column names, GeoJSON can only use one coordinate reference system)\nFile size\nSpeed of input or output\nCompatibility with different tools or systems\nAnd more!"
  },
  {
    "objectID": "slides/spatial-data-io.html#read-spatial-data-files-with-r",
    "href": "slides/spatial-data-io.html#read-spatial-data-files-with-r",
    "title": "Reading and writing spatial data",
    "section": "8 Read spatial data files with R",
    "text": "8 Read spatial data files with R\nThe dsn or data source name for sf::read_sf() can include:\n\na file name\na URL\na folder\nthe name and access credentials of a database\na character string with the contents of a GeoJSON file"
  },
  {
    "objectID": "slides/spatial-data-io.html#read-spatial-data-files-with-r-1",
    "href": "slides/spatial-data-io.html#read-spatial-data-files-with-r-1",
    "title": "Reading and writing spatial data",
    "section": "9 Read spatial data files with R",
    "text": "9 Read spatial data files with R\nYou can use the query parameter of sf::read_sf() to use a SQL query to select records from a file (or select a specific geographical extent)."
  },
  {
    "objectID": "slides/spatial-data-io.html#many-file-formats-can-include-spatial-data",
    "href": "slides/spatial-data-io.html#many-file-formats-can-include-spatial-data",
    "title": "Reading and writing spatial data",
    "section": "10 Many file formats can include spatial data",
    "text": "10 Many file formats can include spatial data\n\nExcel files (xlsx or xls)\n\nvCard or VCF (Virtual Contact File)\nEXIF metadata in a JPEG, HEIC, PNG, TIFF or other media file"
  },
  {
    "objectID": "slides/spatial-data-io.html#reading-data-into-r",
    "href": "slides/spatial-data-io.html#reading-data-into-r",
    "title": "Reading and writing spatial data",
    "section": "11 Reading data into R",
    "text": "11 Reading data into R\n\nRead data using {sf}\nRead data using a package that returns a sf object\nRead data and use {sf} to convert to a sf object"
  },
  {
    "objectID": "slides/spatial-data-io.html#writing-data-from-r",
    "href": "slides/spatial-data-io.html#writing-data-from-r",
    "title": "Reading and writing spatial data",
    "section": "12 Writing data from R",
    "text": "12 Writing data from R\n\nWrite data to a spatial file using {sf}\nWrite data a a non-spatial file using a different package\n\nWhen you write spatial data to a non-spatial format, you should drop the geometry or convert the geometry to coordinates or well-known text."
  },
  {
    "objectID": "slides/spatial-data-io.html#read-data-using-sf",
    "href": "slides/spatial-data-io.html#read-data-using-sf",
    "title": "Reading and writing spatial data",
    "section": "13 Read data using {sf}",
    "text": "13 Read data using {sf}\nFirst load {sf}:\n\nlibrary(sf)"
  },
  {
    "objectID": "slides/spatial-data-io.html#read-data-using-sf-1",
    "href": "slides/spatial-data-io.html#read-data-using-sf-1",
    "title": "Reading and writing spatial data",
    "section": "14 Read data using {sf}",
    "text": "14 Read data using {sf}"
  },
  {
    "objectID": "slides/spatial-data-io.html#read-data-using-sf-2",
    "href": "slides/spatial-data-io.html#read-data-using-sf-2",
    "title": "Reading and writing spatial data",
    "section": "15 Read data using {sf}",
    "text": "15 Read data using {sf}"
  },
  {
    "objectID": "slides/spatial-data-io.html#read-data-using-sf-3",
    "href": "slides/spatial-data-io.html#read-data-using-sf-3",
    "title": "Reading and writing spatial data",
    "section": "16 Read data using {sf}",
    "text": "16 Read data using {sf}\n{sf} can use any available drivers to read data:\n\ndrivers &lt;- sf::st_drivers()\n\ndrivers\n\n                         name\nESRIC                   ESRIC\nPCIDSK                 PCIDSK\nnetCDF                 netCDF\nPDS4                     PDS4\nVICAR                   VICAR\nJP2OpenJPEG       JP2OpenJPEG\nPDF                       PDF\nMBTiles               MBTiles\nBAG                       BAG\nEEDA                     EEDA\nOGCAPI                 OGCAPI\nESRI Shapefile ESRI Shapefile\nMapInfo File     MapInfo File\nUK .NTF               UK .NTF\nLVBAG                   LVBAG\nOGR_SDTS             OGR_SDTS\nS57                       S57\nDGN                       DGN\nOGR_VRT               OGR_VRT\nMemory                 Memory\nCSV                       CSV\nGML                       GML\nGPX                       GPX\nKML                       KML\nGeoJSON               GeoJSON\nGeoJSONSeq         GeoJSONSeq\nESRIJSON             ESRIJSON\nTopoJSON             TopoJSON\nOGR_GMT               OGR_GMT\nGPKG                     GPKG\nSQLite                 SQLite\nODBC                     ODBC\nWAsP                     WAsP\nPGeo                     PGeo\nMSSQLSpatial     MSSQLSpatial\nPostgreSQL         PostgreSQL\nOpenFileGDB       OpenFileGDB\nDXF                       DXF\nCAD                       CAD\nFlatGeobuf         FlatGeobuf\nGeoconcept         Geoconcept\nGeoRSS                 GeoRSS\nVFK                       VFK\nPGDUMP                 PGDUMP\nOSM                       OSM\nGPSBabel             GPSBabel\nOGR_PDS               OGR_PDS\nWFS                       WFS\nOAPIF                   OAPIF\nEDIGEO                 EDIGEO\nSVG                       SVG\nIdrisi                 Idrisi\nXLS                       XLS\nODS                       ODS\nXLSX                     XLSX\nElasticsearch   Elasticsearch\nCarto                   Carto\nAmigoCloud         AmigoCloud\nSXF                       SXF\nSelafin               Selafin\nJML                       JML\nPLSCENES             PLSCENES\nCSW                       CSW\nVDV                       VDV\nMVT                       MVT\nNGW                       NGW\nMapML                   MapML\nTIGER                   TIGER\nAVCBin                 AVCBin\nAVCE00                 AVCE00\nHTTP                     HTTP\n                                                          long_name write  copy\nESRIC                                            Esri Compact Cache FALSE FALSE\nPCIDSK                                         PCIDSK Database File  TRUE FALSE\nnetCDF                                   Network Common Data Format  TRUE  TRUE\nPDS4                                   NASA Planetary Data System 4  TRUE  TRUE\nVICAR                                               MIPL VICAR file  TRUE  TRUE\nJP2OpenJPEG              JPEG-2000 driver based on OpenJPEG library FALSE  TRUE\nPDF                                                  Geospatial PDF  TRUE  TRUE\nMBTiles                                                     MBTiles  TRUE  TRUE\nBAG                                      Bathymetry Attributed Grid  TRUE  TRUE\nEEDA                                          Earth Engine Data API FALSE FALSE\nOGCAPI                                                       OGCAPI FALSE FALSE\nESRI Shapefile                                       ESRI Shapefile  TRUE FALSE\nMapInfo File                                           MapInfo File  TRUE FALSE\nUK .NTF                                                     UK .NTF FALSE FALSE\nLVBAG                                   Kadaster LV BAG Extract 2.0 FALSE FALSE\nOGR_SDTS                                                       SDTS FALSE FALSE\nS57                                                  IHO S-57 (ENC)  TRUE FALSE\nDGN                                                Microstation DGN  TRUE FALSE\nOGR_VRT                                    VRT - Virtual Datasource FALSE FALSE\nMemory                                                       Memory  TRUE FALSE\nCSV                                    Comma Separated Value (.csv)  TRUE FALSE\nGML                                 Geography Markup Language (GML)  TRUE FALSE\nGPX                                                             GPX  TRUE FALSE\nKML                                   Keyhole Markup Language (KML)  TRUE FALSE\nGeoJSON                                                     GeoJSON  TRUE FALSE\nGeoJSONSeq                                         GeoJSON Sequence  TRUE FALSE\nESRIJSON                                                   ESRIJSON FALSE FALSE\nTopoJSON                                                   TopoJSON FALSE FALSE\nOGR_GMT                                    GMT ASCII Vectors (.gmt)  TRUE FALSE\nGPKG                                                     GeoPackage  TRUE  TRUE\nSQLite                                          SQLite / Spatialite  TRUE FALSE\nODBC                                                                FALSE FALSE\nWAsP                                               WAsP .map format  TRUE FALSE\nPGeo                                      ESRI Personal GeoDatabase FALSE FALSE\nMSSQLSpatial                  Microsoft SQL Server Spatial Database  TRUE FALSE\nPostgreSQL                                       PostgreSQL/PostGIS  TRUE FALSE\nOpenFileGDB                                            ESRI FileGDB FALSE FALSE\nDXF                                                     AutoCAD DXF  TRUE FALSE\nCAD                                                  AutoCAD Driver FALSE FALSE\nFlatGeobuf                                               FlatGeobuf  TRUE FALSE\nGeoconcept                                               Geoconcept  TRUE FALSE\nGeoRSS                                                       GeoRSS  TRUE FALSE\nVFK                            Czech Cadastral Exchange Data Format FALSE FALSE\nPGDUMP                                          PostgreSQL SQL dump  TRUE FALSE\nOSM                                       OpenStreetMap XML and PBF FALSE FALSE\nGPSBabel                                                   GPSBabel  TRUE FALSE\nOGR_PDS                                Planetary Data Systems TABLE FALSE FALSE\nWFS                                   OGC WFS (Web Feature Service) FALSE FALSE\nOAPIF                                            OGC API - Features FALSE FALSE\nEDIGEO                                French EDIGEO exchange format FALSE FALSE\nSVG                                        Scalable Vector Graphics FALSE FALSE\nIdrisi                                         Idrisi Vector (.vct) FALSE FALSE\nXLS                                                 MS Excel format FALSE FALSE\nODS            Open Document/ LibreOffice / OpenOffice Spreadsheet   TRUE FALSE\nXLSX                                 MS Office Open XML spreadsheet  TRUE FALSE\nElasticsearch                                        Elastic Search  TRUE FALSE\nCarto                                                         Carto  TRUE FALSE\nAmigoCloud                                               AmigoCloud  TRUE FALSE\nSXF                                     Storage and eXchange Format FALSE FALSE\nSelafin                                                     Selafin  TRUE FALSE\nJML                                                    OpenJUMP JML  TRUE FALSE\nPLSCENES                                     Planet Labs Scenes API FALSE FALSE\nCSW                          OGC CSW (Catalog  Service for the Web) FALSE FALSE\nVDV                             VDV-451/VDV-452/INTREST Data Format  TRUE FALSE\nMVT                                             Mapbox Vector Tiles  TRUE FALSE\nNGW                                                     NextGIS Web  TRUE  TRUE\nMapML                                                         MapML  TRUE FALSE\nTIGER                                        U.S. Census TIGER/Line FALSE FALSE\nAVCBin                                     Arc/Info Binary Coverage FALSE FALSE\nAVCE00                                Arc/Info E00 (ASCII) Coverage FALSE FALSE\nHTTP                                          HTTP Fetching Wrapper FALSE FALSE\n               is_raster is_vector   vsi\nESRIC               TRUE      TRUE  TRUE\nPCIDSK              TRUE      TRUE  TRUE\nnetCDF              TRUE      TRUE FALSE\nPDS4                TRUE      TRUE  TRUE\nVICAR               TRUE      TRUE  TRUE\nJP2OpenJPEG         TRUE      TRUE  TRUE\nPDF                 TRUE      TRUE FALSE\nMBTiles             TRUE      TRUE  TRUE\nBAG                 TRUE      TRUE  TRUE\nEEDA               FALSE      TRUE FALSE\nOGCAPI              TRUE      TRUE  TRUE\nESRI Shapefile     FALSE      TRUE  TRUE\nMapInfo File       FALSE      TRUE  TRUE\nUK .NTF            FALSE      TRUE  TRUE\nLVBAG              FALSE      TRUE  TRUE\nOGR_SDTS           FALSE      TRUE  TRUE\nS57                FALSE      TRUE  TRUE\nDGN                FALSE      TRUE  TRUE\nOGR_VRT            FALSE      TRUE  TRUE\nMemory             FALSE      TRUE FALSE\nCSV                FALSE      TRUE  TRUE\nGML                FALSE      TRUE  TRUE\nGPX                FALSE      TRUE  TRUE\nKML                FALSE      TRUE  TRUE\nGeoJSON            FALSE      TRUE  TRUE\nGeoJSONSeq         FALSE      TRUE  TRUE\nESRIJSON           FALSE      TRUE  TRUE\nTopoJSON           FALSE      TRUE  TRUE\nOGR_GMT            FALSE      TRUE  TRUE\nGPKG                TRUE      TRUE  TRUE\nSQLite             FALSE      TRUE  TRUE\nODBC               FALSE      TRUE FALSE\nWAsP               FALSE      TRUE  TRUE\nPGeo               FALSE      TRUE FALSE\nMSSQLSpatial       FALSE      TRUE FALSE\nPostgreSQL         FALSE      TRUE FALSE\nOpenFileGDB        FALSE      TRUE  TRUE\nDXF                FALSE      TRUE  TRUE\nCAD                 TRUE      TRUE  TRUE\nFlatGeobuf         FALSE      TRUE  TRUE\nGeoconcept         FALSE      TRUE  TRUE\nGeoRSS             FALSE      TRUE  TRUE\nVFK                FALSE      TRUE FALSE\nPGDUMP             FALSE      TRUE  TRUE\nOSM                FALSE      TRUE  TRUE\nGPSBabel           FALSE      TRUE FALSE\nOGR_PDS            FALSE      TRUE  TRUE\nWFS                FALSE      TRUE  TRUE\nOAPIF              FALSE      TRUE FALSE\nEDIGEO             FALSE      TRUE  TRUE\nSVG                FALSE      TRUE  TRUE\nIdrisi             FALSE      TRUE  TRUE\nXLS                FALSE      TRUE FALSE\nODS                FALSE      TRUE  TRUE\nXLSX               FALSE      TRUE  TRUE\nElasticsearch      FALSE      TRUE FALSE\nCarto              FALSE      TRUE FALSE\nAmigoCloud         FALSE      TRUE FALSE\nSXF                FALSE      TRUE  TRUE\nSelafin            FALSE      TRUE  TRUE\nJML                FALSE      TRUE  TRUE\nPLSCENES            TRUE      TRUE FALSE\nCSW                FALSE      TRUE FALSE\nVDV                FALSE      TRUE  TRUE\nMVT                FALSE      TRUE  TRUE\nNGW                 TRUE      TRUE FALSE\nMapML              FALSE      TRUE  TRUE\nTIGER              FALSE      TRUE  TRUE\nAVCBin             FALSE      TRUE  TRUE\nAVCE00             FALSE      TRUE  TRUE\nHTTP                TRUE      TRUE FALSE"
  },
  {
    "objectID": "slides/spatial-data-io.html#read-data-from-a-url-using-sf",
    "href": "slides/spatial-data-io.html#read-data-from-a-url-using-sf",
    "title": "Reading and writing spatial data",
    "section": "17 Read data from a URL using {sf}",
    "text": "17 Read data from a URL using {sf}\nread_sf() works well with a direct link to a spatial data file:\n\n# GeoJSON (geojson)\nread_sf(\"https://github.com/ropensci/geojsonio/raw/main/inst/examples/california.geojson\")\n\nSimple feature collection with 1 feature and 11 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -124.4096 ymin: 32.53416 xmax: -114.1315 ymax: 42.00952\nGeodetic CRS:  WGS 84\n# A tibble: 1 √ó 12\n  name       abbreviation capital    city   population   area waterarea landarea\n  &lt;chr&gt;      &lt;chr&gt;        &lt;chr&gt;      &lt;chr&gt;       &lt;int&gt;  &lt;int&gt;     &lt;int&gt;    &lt;int&gt;\n1 California CA           Sacramento Los A‚Ä¶   38332521 423968     20502   403466\n# ‚Ñπ 4 more variables: houseseats &lt;int&gt;, statehood &lt;date&gt;, group &lt;chr&gt;,\n#   geometry &lt;MULTIPOLYGON [¬∞]&gt;"
  },
  {
    "objectID": "slides/spatial-data-io.html#read-spatial-data-with-other-packages",
    "href": "slides/spatial-data-io.html#read-spatial-data-with-other-packages",
    "title": "Reading and writing spatial data",
    "section": "18 Read spatial data with other packages",
    "text": "18 Read spatial data with other packages\nThere are a wide variety of packages that you can use to supplement {sf}.\n\nlibrary(arcgislayers)\n\nfeature_layer &lt;- arc_open(\"https://services.arcgis.com/njFNhDsUCentVYJW/arcgis/rest/services/MDOT_SHA_County_Boundaries/FeatureServer/0\")\n\narc_select(feature_layer)\n\nSimple feature collection with 24 features and 17 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 607669.3 ymin: 80997.33 xmax: 1870976 ymax: 757701.4\nProjected CRS: NAD83(HARN) / Maryland (ftUS)\nFirst 10 features:\n   OBJECTID     COUNTY_NAME COUNTY_INTEGER COUNTY_ABBREVIATION COUNTY_DIGITCAPS\n1         1 Prince George's             16                  PG               16\n2         2           Cecil              7                  CE                7\n3         3          Howard             13                  HO               13\n4         4          Talbot             20                  TA               20\n5         5         Garrett             11                  GA               11\n6         6  Baltimore City             24                  BC               24\n7         7         Carroll              6                  CL                6\n8         8      Washington             21                  WA               21\n9         9       Worcester             23                  WO               23\n10       10       Frederick             10                  FR               10\n   COUNTY_2DIGITCAPS DISTRICT_NAME DISTRICT_NUMBER COUNTY_FIP COUNTYNUM TSD_ID\n1                 16    District 3               3         33        16      3\n2                 07    District 2               2         15         7     21\n3                 13    District 7               7         27        13     10\n4                 20    District 2               2         41        20     18\n5                 11    District 6               6         23        11      4\n6                 24   No District               0        510        24     23\n7                 06    District 7               7         13         6      1\n8                 21    District 6               6         43        21   1060\n9                 23    District 1               1         47        23      2\n10                10    District 7               7         21        10     24\n            COUNTY DISTRICT Shape__Area Shape__Length  COUNTY_ALLCAPS Region\n1  Prince George's        3 13902243040      720691.0 PRINCE GEORGE'S   &lt;NA&gt;\n2            Cecil        2 11643675836      494670.7           CECIL   &lt;NA&gt;\n3           Howard        7  7056288549      471922.1          HOWARD   &lt;NA&gt;\n4           Talbot        2 13193323636      657963.0          TALBOT   &lt;NA&gt;\n5          Garrett        6 18339518744      680782.9         GARRETT   &lt;NA&gt;\n6   Baltimore City        0  2562810672      207145.0  BALTIMORE CITY   &lt;NA&gt;\n7          Carroll        7 12623420879      651107.6         CARROLL   &lt;NA&gt;\n8       Washington        6 13031238277      948164.4      WASHINGTON   &lt;NA&gt;\n9        Worcester        1 16297527948      694972.5       WORCESTER   &lt;NA&gt;\n10       Frederick        7 18613257293      683407.8       FREDERICK   &lt;NA&gt;\n                         geometry\n1  POLYGON ((1313442 476110.4,...\n2  POLYGON ((1660741 628728.5,...\n3  POLYGON ((1391417 567919.8,...\n4  POLYGON ((1611348 457521.9,...\n5  POLYGON ((769889 754580.7, ...\n6  POLYGON ((1445534 565803.6,...\n7  POLYGON ((1371781 748182.4,...\n8  POLYGON ((936016.4 751530.6...\n9  POLYGON ((1870321 284172.9,...\n10 POLYGON ((1213130 747989.9,..."
  },
  {
    "objectID": "slides/spatial-data-io.html#examples",
    "href": "slides/spatial-data-io.html#examples",
    "title": "Reading and writing spatial data",
    "section": "19 Examples",
    "text": "19 Examples\n\n\nCensus data"
  },
  {
    "objectID": "course-prep.html",
    "href": "course-prep.html",
    "title": "Preparing for the course",
    "section": "",
    "text": "Set up two-factor authentication. This is highly recommended!",
    "crumbs": [
      "Course information",
      "Prep"
    ]
  },
  {
    "objectID": "course-prep.html#installing-git-and-setting-up-a-github-account",
    "href": "course-prep.html#installing-git-and-setting-up-a-github-account",
    "title": "Preparing for the course",
    "section": "",
    "text": "Set up two-factor authentication. This is highly recommended!",
    "crumbs": [
      "Course information",
      "Prep"
    ]
  },
  {
    "objectID": "course-prep.html#installing-r-packages",
    "href": "course-prep.html#installing-r-packages",
    "title": "Preparing for the course",
    "section": "Installing R packages",
    "text": "Installing R packages\nInstall the tidyverse and sf packages:\n\ninstall.packages(\"tidyverse\")\ninstall.packages(\"sf\")\n\nWe will use these packages more than anything else.\nNow, install {pak} to get a better than basic installing packages:\n\ninstall.packages(\"pak\")\n\nHere are all of the other packages we are using in this class.\n\npak::pkg_install(\n  c(\n    \"mapview\", \"usethis\", \"quarto\", \"sf\",\n    \"tigris\", \"rnaturalearth\", \"spData\", \"arcgis\"\n  )\n)",
    "crumbs": [
      "Course information",
      "Prep"
    ]
  },
  {
    "objectID": "course-prep.html#configuring-rstudio",
    "href": "course-prep.html#configuring-rstudio",
    "title": "Preparing for the course",
    "section": "Configuring RStudio",
    "text": "Configuring RStudio\nConfiguring RStudio is something we do together as a class during our first session. If you missed the first session, please review the instructions below to make sure your setup is the same as other members of the class\n\nRequired changes\nSelect Tools \\&gt; Global Options from the menu then:\n\nUnder the ‚ÄúWorkspace heading‚Äù, uncheck the ‚ÄúRestore .RData‚Äù box.\nUnder the same heading, ‚ÄúSave workspace to .RData on exit.‚Äù select ‚ÄúNever‚Äù from the drop-down.\nSelect the Code panel, then check the box ‚ÄúUse native pipe operator, |&gt; (requires R 4.1+)‚Äù\n\n\n\nOptional changes\nSelect Tools \\&gt; Global Options from the menu then:\n\nSelect the ‚ÄúPane Layout‚Äù options. I recommend placing the console in the top-right pane and the help and plot viewer in the bottom left. This is a personal preference and you can try a few options to see what works best for you.\nSelect the ‚ÄúAppearance‚Äù options. This is the place you can customize the theme, code editor font, and code editor color scheme. Many programmers find a dark color scheme more readable. You may also want to try installing a ‚Äúnerd font‚Äù or ‚Äúprogramming‚Äù font. I use a font called FiraCode but you can find a wide variety of free fonts for download on this website.\n\n\n\nRecommended Resources\n\nReview keyboard shortcuts.\n\n\n\nAlternate IDEs\n\nPositron\n\n\n\nSet up GitHub credentials in RStudio\nIf you are using RStudio instead of GitHub Desktop to update your repository, you also need to set up some local credentials so GitHub knows that RStudio is allowed to make changes to your personal or course repositories.\nThe {usethis} documentation includes detailed article on connecting GitHub and R but it is more detail than you may need. These instructions are a brief summary of that article.\nFirst, install the {usethis} package (if you don‚Äôt have it installed already):\n\ninstall.packages(\"usethis\")\n\nThere are three steps to connect GitHub and RStudio:\n\nRun usethis::create_github_token() to get a personal access token and copy the token to your clipboard. Make sure you are signed in to GitHub in your browser first! I also suggest setting the expiration to 90 days so you won‚Äôt need to refresh the token until after the end of this course.\nRun gitcreds::gitcreds_set() to put your PAT in your Git credential store.\nRestart your session and run usethis::gh_token_help() to double-check that the token is saved in the right place.\n\nIf you run into any trouble, you can run usethis::git_sitrep() for more feedback on what is set up correctly and what (if anything) might need to be fixed.",
    "crumbs": [
      "Course information",
      "Prep"
    ]
  },
  {
    "objectID": "slides/coding-basics.html#week-1",
    "href": "slides/coding-basics.html#week-1",
    "title": "Coding basics",
    "section": "1 Week 1",
    "text": "1 Week 1\n\nTODO: Fill in info re: Hands-On Programming with R chapters on basics and packages"
  },
  {
    "objectID": "final-project-presentation.html#using-this-template",
    "href": "final-project-presentation.html#using-this-template",
    "title": "GES668: Your Project Title",
    "section": "Using this template",
    "text": "Using this template\n\n\n\n\n\n\nHow to use this template\n\n\nThis template is based on the the GES 668 Final Project instructions. You should replace the questions or other instructions in this template with your own writing about the project. Link to your project README or other files in your repository to provide more detailed information where appropriate."
  },
  {
    "objectID": "final-project-presentation.html#working-with-reveal.js",
    "href": "final-project-presentation.html#working-with-reveal.js",
    "title": "GES668: Your Project Title",
    "section": "Working with Reveal.js",
    "text": "Working with Reveal.js\n\n\n\n\n\n\nRemove this slide\n\n\nThis slide and the next three slides should be removed. They are only provided as a reference for working with Reveal.js presentation format in Quarto. Check the full list of options for the Reveal.js presentation format in Quarto for more detailed information."
  },
  {
    "objectID": "final-project-presentation.html#working-with-reveal.js-1",
    "href": "final-project-presentation.html#working-with-reveal.js-1",
    "title": "GES668: Your Project Title",
    "section": "Working with Reveal.js",
    "text": "Working with Reveal.js\nThis slide includes a captioned image inserted with Markdown formatting.\n\nBuilding Spatial Datasets Course logo"
  },
  {
    "objectID": "final-project-presentation.html#working-with-reveal.js-2",
    "href": "final-project-presentation.html#working-with-reveal.js-2",
    "title": "GES668: Your Project Title",
    "section": "Working with Reveal.js",
    "text": "Working with Reveal.js\nThis slide includes a code block and presentation notes.\n\nlibrary(sf)\nlibrary(ggplot2)\n\nnc &lt;- st_read(system.file(\"shape/nc.shp\", package = \"sf\"))\n\nReading layer `nc' from data source \n  `/Users/elipousson/Library/R/arm64/4.4/library/sf/shape/nc.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 100 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965\nGeodetic CRS:  NAD27\n\nggplot() +\n  geom_sf(data = nc, aes(fill = NAME)) +\n  guides(fill = \"none\")\n\n\n\nThis is an example of how you add in presentation notes."
  },
  {
    "objectID": "final-project-presentation.html#working-with-reveal.js-3",
    "href": "final-project-presentation.html#working-with-reveal.js-3",
    "title": "GES668: Your Project Title",
    "section": "Working with Reveal.js",
    "text": "Working with Reveal.js\nThis slide includes a hidden code block and a custom footer. See the Quarto code cells reference for more information.\n\n\n\n\n\n\n\n\nAREA\nPERIMETER\nNAME\nFIPS\n\n\n\n\n0.114\n1.442\nAshe\n37009\n\n\n0.061\n1.231\nAlleghany\n37005\n\n\n0.143\n1.630\nSurry\n37171\n\n\n\n\n\n\n\n\nThis is an example of a custom footer."
  },
  {
    "objectID": "final-project-presentation.html#overview",
    "href": "final-project-presentation.html#overview",
    "title": "GES668: Your Project Title",
    "section": "Overview",
    "text": "Overview\n\nBrief summary description of the project"
  },
  {
    "objectID": "final-project-presentation.html#project-goals",
    "href": "final-project-presentation.html#project-goals",
    "title": "GES668: Your Project Title",
    "section": "Project goals",
    "text": "Project goals\n\nWhat were your initial goals for the project?\nHow did they change or develop as you worked on your project?"
  },
  {
    "objectID": "final-project-presentation.html#data-sources",
    "href": "final-project-presentation.html#data-sources",
    "title": "GES668: Your Project Title",
    "section": "Data sources",
    "text": "Data sources\nMore than one slide per data source is likely required for this section and basic information on each major data source used in your project. Make sure to answer:\n\nWhat data sources did you use?\nHow, why, and where were they created?"
  },
  {
    "objectID": "final-project-presentation.html#approach-and-methods-for-working-with-data",
    "href": "final-project-presentation.html#approach-and-methods-for-working-with-data",
    "title": "GES668: Your Project Title",
    "section": "Approach and methods for working with data",
    "text": "Approach and methods for working with data\nBriefly recap related information from your initial project proposal describing your approach. Make sure to answer:\n\nDid your approach involve mapping, exploratory analysis, documentation, visualization, or a combination of multiple approaches?\nWhy did you select this approach and did you change apporach while completing your final project?\nWhat packages, templates, or other resources did you use in creating your final project?"
  },
  {
    "objectID": "final-project-presentation.html#challenges-in-working-with-data",
    "href": "final-project-presentation.html#challenges-in-working-with-data",
    "title": "GES668: Your Project Title",
    "section": "Challenges in working with data",
    "text": "Challenges in working with data\nWhat challenges did you encounter in making use of these resources and this data?\nChallenges can be practical, e.g.¬†‚ÄúDifficulty identifying which key-value pairs needed to query OpenStreetMap data,‚Äù or conceptual, e.g.¬†‚ÄúUnsure appropriate level of geographical analysis to support a robust analysis.‚Äù"
  },
  {
    "objectID": "final-project-presentation.html#successes-in-working-with-data",
    "href": "final-project-presentation.html#successes-in-working-with-data",
    "title": "GES668: Your Project Title",
    "section": "Successes in working with data",
    "text": "Successes in working with data\nWhat do you think your project does well?\nYour areas of success likely depend on your approach:\n\nIf you completed a data analysis, what are your key findings?\nIf you created a map, what does it communicate to people who see it?"
  },
  {
    "objectID": "final-project-presentation.html#where-to-learn-more",
    "href": "final-project-presentation.html#where-to-learn-more",
    "title": "GES668: Your Project Title",
    "section": "Where to learn more",
    "text": "Where to learn more\n\nAdd links or brief descriptions of how to find the required elements for your project repository.\n\nproject data\n\nsource files or a script used for importing and processing the data before visualization or analysis. Students who are using {osmdata} or {tidycensus} should include scripts for downloading data.\n\nproject code\n\nany R scripts, RMarkdown, or Quarto files used to read, tidy, transform, analyze, visualize or map the selected data.\n\noutput files\n\nincluding any processed data files or rendered PDF or HTML documents.\n\nREADME\n\na public-facing summary of the project explaining your process for processing the data and any relevant information another person may need to work with the data or your code.\n\n\nThese can be placeholder links as you still have time to complete the final project and some elements may be incomplete.\n\n\nThis slide uses a fit-text div to make sure the text fits on a single slide. Learn more about Advanced Reveal features in the Quarto documentation."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GES 668: Building Spatial Datasets (Fall 2024)",
    "section": "",
    "text": "In this course, students learn how to look critically at spatial data and use the R programming language to transform, visualize, and create spatial datasets. Working with open-source tools, reproducible methods, and real world data, students develop skills in the fundamentals of reading and wrangling spatial data with the sf and tidyverse family of R packages.\n\n\n\n\n\n\n\n\nWeek\nDate\nTopic\nSlides\nExercise\n\n\n\n\n1\nFri, Aug 30\nGetting started with spatial data using sf and the tidyverse\nüìñ\nüìù\n\n\n2\nFri, Sep 6\nVisualizing spatial data with ggplot2\nüìñ\nüìù\n\n\n3\nFri, Sep 13\nTransforming data with dplyr\nüìñ\nüìù\n\n\n4\nFri, Sep 20\nTransforming spatial data attributes\nüìñ\nüìù\n\n\n5\nFri, Sep 27\nApplying spatial transformations and geometric operations using sf\nüìñ\nüìù\n\n\n6\nFri, Oct 4\nTidying and joining spatial data\nüìñ\nüìù\n\n\n7\nFri, Oct 11\nBuilding functions in R and literate programming with Quarto\nüìñ\nüìù\n\n\n8\nFri, Oct 18\nDeveloping an exploratory data analysis with sf and the tidyverse\nüìñ\n‚Äî\n\n\n9\nFri, Oct 25\nEditing OpenStreetMap and exploring OpenStreetMap data with the osmdata package\nüìñ\n‚Äî\n\n\n10\nFri, Nov 1\nExploring American Community Survey data with the tidycensus package\n‚Äî\n‚Äî\n\n\n11\nFri, Nov 8\nReading and writing spatial data files and services\nüìñ\n‚Äî\n\n\n12\nFri, Nov 15\nCreating and managing spatial metadata\nüìñ\n‚Äî\n\n\n13\nFri, Nov 22\nProject check-in meetings (no class)\n‚Äî\n‚Äî\n\n\n14\nFri, Nov 29\nReview and work session\n‚Äî\n‚Äî\n\n\n15\nFri, Dec 6\nFinal project presentations\n‚Äî\n‚Äî\n\n\n‚Äî\nSat, Dec 14\nDue: Final project repository\n‚Äî\n‚Äî"
  },
  {
    "objectID": "slides/tidy-data.html#what-is-involved-in-tidying-messy-datasets",
    "href": "slides/tidy-data.html#what-is-involved-in-tidying-messy-datasets",
    "title": "Tidying and joining data",
    "section": "1 What is involved in tidying messy datasets?",
    "text": "1 What is involved in tidying messy datasets?\n\nColumn headers are values, not variable names\nMultiple variables stored in one column\nVariables are stored in both rows and columns\nMultiple types in one table\nOne type in multiple tables\n\n\nfrom Tidy data vignette https://tidyr.tidyverse.org/articles/tidy-data.html"
  },
  {
    "objectID": "slides/tidy-data.html#pivoting",
    "href": "slides/tidy-data.html#pivoting",
    "title": "Tidying and joining data",
    "section": "2 Pivoting",
    "text": "2 Pivoting"
  },
  {
    "objectID": "slides/tidy-data.html#how-would-this-look-if-we-turn-it-into-tidy-data",
    "href": "slides/tidy-data.html#how-would-this-look-if-we-turn-it-into-tidy-data",
    "title": "Tidying and joining data",
    "section": "3 How would this look if we turn it into tidy data?",
    "text": "3 How would this look if we turn it into tidy data?\n\n\n\nCity\n2000\n2010\n2020\n\n\n\n\nBaltimore city, Maryland\n300000\n290000\n285000\n\n\nWashington, DC\n300000\n315000\n330000\n\n\nRichmond, Virginia\n200000\n202000\n210000"
  },
  {
    "objectID": "slides/tidy-data.html#tidying-messy-datasets",
    "href": "slides/tidy-data.html#tidying-messy-datasets",
    "title": "Tidying and joining data",
    "section": "4 Tidying messy datasets",
    "text": "4 Tidying messy datasets\n\nColumn headers are values, not variable names\nMultiple variables stored in one column\nVariables are stored in both rows and columns\nMultiple types in one table\nOne type in multiple tables"
  },
  {
    "objectID": "slides/tidy-data.html#how-would-this-look-if-we-turn-it-into-tidy-data-1",
    "href": "slides/tidy-data.html#how-would-this-look-if-we-turn-it-into-tidy-data-1",
    "title": "Tidying and joining data",
    "section": "5 How would this look if we turn it into tidy data?",
    "text": "5 How would this look if we turn it into tidy data?\n\n\n\nCity name\n2000\n2010\n2020\n\n\n\n\nBaltimore city, Maryland\n300000\n290000\n285000\n\n\nWashington, DC\n300000\n315000\n330000\n\n\nRichmond, Virginia\n200000\n202000\n210000"
  },
  {
    "objectID": "slides/tidy-data.html#data-organization-in-spreadsheets",
    "href": "slides/tidy-data.html#data-organization-in-spreadsheets",
    "title": "Tidying and joining data",
    "section": "6 Data organization in spreadsheets",
    "text": "6 Data organization in spreadsheets"
  },
  {
    "objectID": "weeks/week_12.html",
    "href": "weeks/week_12.html",
    "title": "Week 12",
    "section": "",
    "text": "This session introduces the basics of metadata and specialized spatial metadata standards. We will also explore how to write READMEs for both data and project documentation.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 12"
    ]
  },
  {
    "objectID": "weeks/week_12.html#overview",
    "href": "weeks/week_12.html#overview",
    "title": "Week 12",
    "section": "",
    "text": "This session introduces the basics of metadata and specialized spatial metadata standards. We will also explore how to write READMEs for both data and project documentation.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 12"
    ]
  },
  {
    "objectID": "weeks/week_12.html#key-objectives",
    "href": "weeks/week_12.html#key-objectives",
    "title": "Week 12",
    "section": "Key Objectives",
    "text": "Key Objectives\n\nReview examples of READMEs for data sets and projects\nPractice working with data dictionaries and the {labelled} package.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 12"
    ]
  },
  {
    "objectID": "weeks/week_12.html#prepare",
    "href": "weeks/week_12.html#prepare",
    "title": "Week 12",
    "section": "Prepare",
    "text": "Prepare\n\nRequired readings\n\nCh. 8 Documentation in Crystal Lewis Data Management in Large-Scale Education Research, 1st ed. (Chapman & Hall, 2024), https://datamgmtinedresearch.com/.\nCh. 7 Show Your Work in Catherine D‚ÄôIgnazio and Lauren F. Klein Data Feminism (The MIT Press, 2020), https://data-feminism.mitpress.mit.edu/.\nShannon Pileggi ‚ÄúThe Case for Variable Labels in R‚Äù (Piping Hot Data, September 13, 2022), https://www.pipinghotdata.com/posts/2022-09-13-the-case-for-variable-labels-in-r/.\n\n\n\nOptional readngs\n\n‚ÄúGuide to Writing \"Readme\" Style Metadata‚Äù (Research Data Management Service Group), accessed August 27, 2022, https://data.research.cornell.edu/content/readme.\nEmily Riederer ‚ÄúColumn Names as Contracts‚Äù (Emily Riederer, September 6, 2020), https://emilyriederer.netlify.app/post/column-name-contracts/.\n‚ÄúData-Primers‚Äù (DataCurationNetwork, 2019), https://github.com/DataCurationNetwork/data-primers/tree/c6ec438e76fea49eaaf2806bc79ec2c8c12de7f3.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 12"
    ]
  },
  {
    "objectID": "weeks/week_12.html#participate",
    "href": "weeks/week_12.html#participate",
    "title": "Week 12",
    "section": "Participate",
    "text": "Participate\nüñ•Ô∏è Creating and managing spatial metadata",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 12"
    ]
  },
  {
    "objectID": "weeks/week_09.html",
    "href": "weeks/week_09.html",
    "title": "Week 9",
    "section": "",
    "text": "OpenStreetMap is both the largest community-created map of the world and a free, open-source geographic database. We will learn to edit OpenStreetMap and accessing OSM data using R for visualization and analysis.\n\n\n\nIntroduce OpenStreetMap and concept of volunteered geographic information (VGI)\nPractice editing OpenStreetMap\nPractice accessing OpenStreetMap using the {osmdata} package",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 9"
    ]
  },
  {
    "objectID": "weeks/week_09.html#overview",
    "href": "weeks/week_09.html#overview",
    "title": "Week 9",
    "section": "",
    "text": "OpenStreetMap is both the largest community-created map of the world and a free, open-source geographic database. We will learn to edit OpenStreetMap and accessing OSM data using R for visualization and analysis.\n\n\n\nIntroduce OpenStreetMap and concept of volunteered geographic information (VGI)\nPractice editing OpenStreetMap\nPractice accessing OpenStreetMap using the {osmdata} package",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 9"
    ]
  },
  {
    "objectID": "weeks/week_09.html#prepare",
    "href": "weeks/week_09.html#prepare",
    "title": "Week 9",
    "section": "Prepare",
    "text": "Prepare\n\n\n\n\n\n\nEditing OpenStreetMap, requires an OSM account. If you don‚Äôt have an OSM account already, please set up an account before class this Wednesday and share your username as part of your weekly check-in response.\n\n\n\n\nRequired readings\n\nMark Padgham and Robin Lovelace ‚Äú1. Osmdata‚Äù (osmdata, August 15, 2023), https://docs.ropensci.org/osmdata/articles/osmdata.html.\nAlan McConchie ‚ÄúOpenStreetMap Pasts, OpenStreetMap Futures,‚Äù July 27, 2016, https://www.youtube.com/watch?v=KNTSZGnQVRw.\n\n\n\nOptional readings\n\nGeoff Boeing ‚ÄúThe Right Tools for the Job: The Case for Spatial Science Tool-Building,‚Äù Transactions in GIS 24, no. 5 (October 2020): 1299‚Äì1314, doi:10.1111/tgis.12678.\nDani Arribas-Bel and Jon Reades ‚ÄúGeography and Computers: Past, Present, and Future,‚Äù Geography Compass 12, no. 10 (2018): e12403, doi:10.1111/gec3.12403.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 9"
    ]
  },
  {
    "objectID": "weeks/week_07.html",
    "href": "weeks/week_07.html",
    "title": "Week 7",
    "section": "",
    "text": "Introduce process of refactoring code to write functions\nPractice naming functions and adding comments to functions\nIntroduce the concept of reproducible data analysis pipelines",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 7"
    ]
  },
  {
    "objectID": "weeks/week_07.html#overview",
    "href": "weeks/week_07.html#overview",
    "title": "Week 7",
    "section": "",
    "text": "Introduce process of refactoring code to write functions\nPractice naming functions and adding comments to functions\nIntroduce the concept of reproducible data analysis pipelines",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 7"
    ]
  },
  {
    "objectID": "weeks/week_07.html#prepare",
    "href": "weeks/week_07.html#prepare",
    "title": "Week 7",
    "section": "Prepare",
    "text": "Prepare\n\nRequired readings\n\nCh. 26 Functions in Hadley Wickham, Garrett Grolemund, and Mine √áetinkaya-Rundel R for Data Science: Import, Tidy, Transform, Visualize, and Model Data, 2nd edition. (Sebastopol, CA: O‚ÄôReilly Media, 2023), https://r4ds.hadley.nz/.\nCh. 11 Scripts, algorithms and functions in Robin Lovelace, Jakub Nowosad, and Jannes Muenchow Geocomputation with R, 2nd ed. (CRC Press, 2025), https://r.geocompx.org.\nCh. 29 Quarto in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\n\n\n\nOptional readings\n\nSam Leon ‚ÄúAccounting for Methods: Spreadsheets, Scripts and Programming Notebooks,‚Äù in The Data Journalism Handbook: Towards A Critical Data Practice, ed. Liliana Bounegru and Jonathan Gray, 2nd ed. (Amsterdam University Press, 2021), 128‚Äì137, doi:10.2307/j.ctv1qr6smr.\nWelcome to Quarto Workshop! (Posit PBC, 2022), https://www.youtube.com/watch?v=yvi5uXQMvu4.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 7"
    ]
  },
  {
    "objectID": "weeks/week_07.html#participate",
    "href": "weeks/week_07.html#participate",
    "title": "Week 7",
    "section": "Participate",
    "text": "Participate\nüñ•Ô∏è Writing functions and pipelines",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 7"
    ]
  },
  {
    "objectID": "weeks/week_07.html#practice",
    "href": "weeks/week_07.html#practice",
    "title": "Week 7",
    "section": "Practice",
    "text": "Practice\nDetails on week 7 exercise to be provided.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 7"
    ]
  },
  {
    "objectID": "weeks/week_05.html",
    "href": "weeks/week_05.html",
    "title": "Week 5",
    "section": "",
    "text": "Practice joining tables by attribute with {dplyr}\nPractice converting between wide and long data formats with dplyr::pivot_longer() and dplyr::pivot_wider()\nPractice recoding categorical attribute data using the {forcats} package",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 5"
    ]
  },
  {
    "objectID": "weeks/week_05.html#overview",
    "href": "weeks/week_05.html#overview",
    "title": "Week 5",
    "section": "",
    "text": "Practice joining tables by attribute with {dplyr}\nPractice converting between wide and long data formats with dplyr::pivot_longer() and dplyr::pivot_wider()\nPractice recoding categorical attribute data using the {forcats} package",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 5"
    ]
  },
  {
    "objectID": "weeks/week_05.html#prepare",
    "href": "weeks/week_05.html#prepare",
    "title": "Week 5",
    "section": "Prepare",
    "text": "Prepare\n\nRequired readings\n\nCh. 6 Data tidying in Hadley Wickham, Garrett Grolemund, and Mine √áetinkaya-Rundel R for Data Science: Import, Tidy, Transform, Visualize, and Model Data, 2nd edition. (Sebastopol, CA: O‚ÄôReilly Media, 2023), https://r4ds.hadley.nz/.\nCh. 14 Data cleaning in Crystal Lewis Data Management in Large-Scale Education Research, 1st ed. (Chapman & Hall, 2024), https://datamgmtinedresearch.com/.\nCh. 1 Local Origins, Ch. 2 A Place for Plant Data, and Ch. 3 Collecting Infrastructures in Yanni Alexander Loukissas All Data Are Local: Thinking Critically in a Data-Driven Society, 2019, doi:10.7551/mitpress/11543.001.0001.\n\n\n\nOptional readings\n\nCatherine D‚ÄôIgnazio and Lauren Klein ‚ÄúWho Collects the Data? A Tale of Three Maps,‚Äù MIT Case Studies in Social and Ethical Responsibilities of Computing (February 5, 2021), doi:10.21428/2c646de5.fc6a97cc.\nKarl W. Broman and Kara H. Woo ‚ÄúData Organization in Spreadsheets,‚Äù The American Statistician 72, no. 1 (January 2, 2018): 2‚Äì10, doi:10.1080/00031305.2017.1375989.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 5"
    ]
  },
  {
    "objectID": "weeks/week_05.html#participate",
    "href": "weeks/week_05.html#participate",
    "title": "Week 5",
    "section": "Participate",
    "text": "Participate\nüñ•Ô∏è Tidying and joining data",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 5"
    ]
  },
  {
    "objectID": "weeks/week_05.html#practice",
    "href": "weeks/week_05.html#practice",
    "title": "Week 5",
    "section": "Practice",
    "text": "Practice\nExercise details to be provided.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 5"
    ]
  },
  {
    "objectID": "weeks/week_03.html",
    "href": "weeks/week_03.html",
    "title": "Week 3",
    "section": "",
    "text": "This week includes a review of data visualization and mapping with {ggplot} review, an introduction to data transformation with {dplyr}, and an initial discussion of using {dplyr} with sf objects.\n\n\n\nReview the concept of ‚Äútidy‚Äù, analysis-friendly data\nIntroduce the ‚Äúverbs‚Äù of data wrangling with {dplyr}\nPractice subsetting rows with dplyr::filter() or dplyr::slice()\nPractice subsetting columns with dplyr::select()\nPractice using {tidyselect} helpers including where(), all_of(), any_of(), and starts_with()\nPractice creating new variables with dplyr::mutate() or dplyr::summarise()",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 3"
    ]
  },
  {
    "objectID": "weeks/week_03.html#overview",
    "href": "weeks/week_03.html#overview",
    "title": "Week 3",
    "section": "",
    "text": "This week includes a review of data visualization and mapping with {ggplot} review, an introduction to data transformation with {dplyr}, and an initial discussion of using {dplyr} with sf objects.\n\n\n\nReview the concept of ‚Äútidy‚Äù, analysis-friendly data\nIntroduce the ‚Äúverbs‚Äù of data wrangling with {dplyr}\nPractice subsetting rows with dplyr::filter() or dplyr::slice()\nPractice subsetting columns with dplyr::select()\nPractice using {tidyselect} helpers including where(), all_of(), any_of(), and starts_with()\nPractice creating new variables with dplyr::mutate() or dplyr::summarise()",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 3"
    ]
  },
  {
    "objectID": "weeks/week_03.html#prepare",
    "href": "weeks/week_03.html#prepare",
    "title": "Week 3",
    "section": "Prepare",
    "text": "Prepare\n\nRequired readings\n\nCh. 3 Data Structure in Crystal Lewis Data Management in Large-Scale Education Research, 1st ed. (Chapman & Hall, 2024), https://datamgmtinedresearch.com/.\nCh. 5 Data transformation in Hadley Wickham, Garrett Grolemund, and Mine √áetinkaya-Rundel R for Data Science: Import, Tidy, Transform, Visualize, and Model Data, 2nd edition. (Sebastopol, CA: O‚ÄôReilly Media, 2023), https://r4ds.hadley.nz/.\nCh. 3 Attribute data operations in Robin Lovelace, Jakub Nowosad, and Jannes Muenchow Geocomputation with R, 2nd ed. (CRC Press, 2025), https://r.geocompx.org.\n\n\n\nOptional readings\n\nCh. 5 Attributes and Support in Edzer Pebesma and Roger Bivand Spatial Data Science (CRC Press, 2023), https://r-spatial.org/book/.\ndplyr base R vignette for the {dplyr} package comparing dplyr functions to their base R equivalents.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 3"
    ]
  },
  {
    "objectID": "weeks/week_03.html#participate",
    "href": "weeks/week_03.html#participate",
    "title": "Week 3",
    "section": "Participate",
    "text": "Participate\nüñ•Ô∏è Transforming data with {dplyr} and {tidyr}",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 3"
    ]
  },
  {
    "objectID": "weeks/week_03.html#practice",
    "href": "weeks/week_03.html#practice",
    "title": "Week 3",
    "section": "Practice",
    "text": "Practice\nüõ†Ô∏èÔ∏è Exercise 03",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 3"
    ]
  },
  {
    "objectID": "course-exercises.html",
    "href": "course-exercises.html",
    "title": "Completing and submitting practice exercises",
    "section": "",
    "text": "You must sign up for a GitHub user account and share your GitHub username with me before I can create an exercise repository for you.\nNote that you must have installed R and RStudio to complete exercises and installed GitHub Desktop to submit exercises.\nSoon after I get your username, you should expect an email asking you to accept an invitation to the ‚Äú2023_Students‚Äù Team in the class GitHub organization.\nThis is a private repository just for your exercise assignments so the repository will be named: &lt;your first name&gt;_&lt;your last name&gt; and can be accessed at: https://github.com/bldgspatialdata/&lt;your first name&gt;_&lt;your last name&gt;. Don‚Äôt forget to replace the placeholder with your first and last name in lower case. You can also go to the course repository list and, if you are logged in and have access, you should find your repository there.\n\n\n\n\n\n\n\nWhat is a repository?\n\n\n\n\n\nA repository is a collection of files where changes can be tracked and managed using a version control system. Git is a version control system. GitHub is a web service that makes it easier to manage version-controlled repositories and collaborate with others. For more background, read Ch. 1 Why Git? Why GitHub? from Happy Git and GitHub for the useR by Jenny Bryan.\n\n\n\n\n\n\nIf you are using RStudio instead of GitHub Desktop to update your repository, you also need to set up some local credentials so GitHub knows that RStudio is allowed to make changes to your repositories. You\nThe {usethis} documentation includes detailed article on connecting GitHub and R but it is more detail than you may need. First, install the {usethis} package (if you don‚Äôt have it installed already):\n\n# pak::pkg_install(\"usethis\")\n\nNow, there are four steps (the first step is optional):\n\nSet up two-factor authentication. This is optional but recommended.\nRun usethis::create_github_token() to get a personal access token and copy the token to your clipboard. Make sure you are signed in to GitHub in your browser first! I also suggest setting the expiration to 90 days so you won‚Äôt need to refresh the token until after the end of this course.\nRun gitcreds::gitcreds_set() to put your PAT in your Git credential store\nRestart your session and run usethis::gh_token_help() to double-check that the token is saved in the right place.\n\nIf you run into any trouble, you can also run usethis::git_sitrep() for more feedback on what is set up correctly and what (if anything) might need to be fixed.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise How-to"
    ]
  },
  {
    "objectID": "course-exercises.html#access-your-exercise-repository",
    "href": "course-exercises.html#access-your-exercise-repository",
    "title": "Completing and submitting practice exercises",
    "section": "",
    "text": "You must sign up for a GitHub user account and share your GitHub username with me before I can create an exercise repository for you.\nNote that you must have installed R and RStudio to complete exercises and installed GitHub Desktop to submit exercises.\nSoon after I get your username, you should expect an email asking you to accept an invitation to the ‚Äú2023_Students‚Äù Team in the class GitHub organization.\nThis is a private repository just for your exercise assignments so the repository will be named: &lt;your first name&gt;_&lt;your last name&gt; and can be accessed at: https://github.com/bldgspatialdata/&lt;your first name&gt;_&lt;your last name&gt;. Don‚Äôt forget to replace the placeholder with your first and last name in lower case. You can also go to the course repository list and, if you are logged in and have access, you should find your repository there.\n\n\n\n\n\n\n\nWhat is a repository?\n\n\n\n\n\nA repository is a collection of files where changes can be tracked and managed using a version control system. Git is a version control system. GitHub is a web service that makes it easier to manage version-controlled repositories and collaborate with others. For more background, read Ch. 1 Why Git? Why GitHub? from Happy Git and GitHub for the useR by Jenny Bryan.\n\n\n\n\n\n\nIf you are using RStudio instead of GitHub Desktop to update your repository, you also need to set up some local credentials so GitHub knows that RStudio is allowed to make changes to your repositories. You\nThe {usethis} documentation includes detailed article on connecting GitHub and R but it is more detail than you may need. First, install the {usethis} package (if you don‚Äôt have it installed already):\n\n# pak::pkg_install(\"usethis\")\n\nNow, there are four steps (the first step is optional):\n\nSet up two-factor authentication. This is optional but recommended.\nRun usethis::create_github_token() to get a personal access token and copy the token to your clipboard. Make sure you are signed in to GitHub in your browser first! I also suggest setting the expiration to 90 days so you won‚Äôt need to refresh the token until after the end of this course.\nRun gitcreds::gitcreds_set() to put your PAT in your Git credential store\nRestart your session and run usethis::gh_token_help() to double-check that the token is saved in the right place.\n\nIf you run into any trouble, you can also run usethis::git_sitrep() for more feedback on what is set up correctly and what (if anything) might need to be fixed.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise How-to"
    ]
  },
  {
    "objectID": "course-exercises.html#download-or-update-your-exercise-repository",
    "href": "course-exercises.html#download-or-update-your-exercise-repository",
    "title": "Completing and submitting practice exercises",
    "section": "2 Download or update your exercise repository",
    "text": "2 Download or update your exercise repository\n\n2.1 Downloading (a.k.a ‚Äúcloning‚Äù) your exercise repository\n\nClone the repository to your computer using GitHub Desktop or using the GitHub website. Review the GitHub documentation on cloning a repository with GitHub Desktop or the GitHub website for more detailed instructions.\nFind and open folder where you downloaded the local copy of the exercise repository. By default, this folder should have the same name as the repository itself.\nAs long as you keep this folder on your computer, you should do not need to clone the repository again. If you delete your local files or switch computers, you need to repeat this step.\n\n\n\n2.2 Updating (a.k.a ‚Äúsyncing‚Äù) your exercise repository\n\nI will be adding new exercises to your repository each week using GitHub. You should ‚Äúsync‚Äù the changes to the GitHub repository with your local copy of the project each week. Read the GitHub documentation on Syncing your branch in GitHub Desktop for more detailed instructions.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise How-to"
    ]
  },
  {
    "objectID": "course-exercises.html#complete-the-weeks-exercise",
    "href": "course-exercises.html#complete-the-weeks-exercise",
    "title": "Completing and submitting practice exercises",
    "section": "3 Complete the week‚Äôs exercise",
    "text": "3 Complete the week‚Äôs exercise\nThe process for completing will be mostly the same for each week of the class.\n\n3.1 Locating the week‚Äôs exercise file\n\nLocate the &lt;your first name&gt;_&lt;your last name&gt;/exercises folder on your computer.\nOpen the exercises.RProj file in RStudio. Review the documentation on managing projects in RStudio or the R for Data Science chapter on working with projects for more background on why projects are useful.\nUsing the ‚ÄúFiles‚Äù tab pane, locate the exercise_01.qmd file (or the number exercise file for this week) and open it. The file extension (.qmd) is short for Quarto Markdown document.\nIf you can‚Äôt find this week‚Äôs exercise file, you may have forgotten to update the repository. Go back and check Section¬†2.2\n\n\n\n\n\n\n\nWhat is a Quarto document?\n\n\n\n\n\nA Quarto document is a format that lets you mix blocks (also known as ‚Äúchunks‚Äù) of R code with sections of text formatted using Markdown formatting. This format is similar to an older format known as RMarkdown (.Rmd). Quarto comes installed with RStudio but it is a separate command line application that can turn a qmd document into a standalone website, a formatted PDF, a presentation, and more. This course website, for example, is built with Quarto.\nYou can see that a front matter section at the top of each document. This front matter (also known as YAML) controls the format, appearance, and content of the rendered document.\nThe Hello, Quarto tutorial is a great place to learn how to render Quarto documents, run code blocks interactively, and format text using the markdown syntax.\n\n\n\n\nComplete the project by filling in the blank spaces, fixing any ‚Äúbroken‚Äù code in the document, or adding new code in the code blocks that look like this:\n\n\n1 + 1 # example code\n\n[1] 2\n\n\n\n\n3.2 Running code and writing responses to the exercise prompts\n\nTry executing the code in each block as you work through the practice exercise. The results from the code appear right below the block. If you get an error or a warning, try to use that information as a clue to figure out what you need to change.\nWhen you are done with the exercise, there should be no more blank spaces like this one: ____. The bonus exercises are optional but otherwise any code block that started empty should now have code inside.\nSome questions require short written responses which should be completed as Markdown formatted text above or below the related code block‚Äînot as a comment inside the code block!\nIf all of your code blocks run smoothly, you should be able to ‚Äúrender‚Äù the .qmd document to create a new HTML document. When I review completed assignments, trying to render the document will always be my first step.\nWhen you done with the exercise, please change the front matter for the document from status: Available to status: Complete.\nRemember, you don‚Äôt need to get everything right and it is OK if your document won‚Äôt render. Just try your best with each part of the exercise.\n\n\n\n\n\n\n\nTips for completing exercises\n\n\n\n\n\n\nComplete this exercise from top to bottom. Blocks of code at the end of the document may depend on blocks from the beginning or middle so avoid skipping around.\nIf you get an error message, read it. If it doesn‚Äôt make sense, try looking it up. R for Data Science reminds readers that Google is your friend.\nRead the documentation!",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise How-to"
    ]
  },
  {
    "objectID": "course-exercises.html#committing-your-completed-exercise-to-the-repository",
    "href": "course-exercises.html#committing-your-completed-exercise-to-the-repository",
    "title": "Completing and submitting practice exercises",
    "section": "4 Committing your completed exercise to the repository",
    "text": "4 Committing your completed exercise to the repository\nYou may have saved your updated document to your computer but the last step is to save or ‚Äúcommit‚Äù those changes to the exercise repository.\n‚ÄúCommitting‚Äù your changes and syncing the changes with the remote version of your repository on GitHub allows me to see your completed exercise and share feedback on your work.\n\n4.1 Commit changes with GitHub Desktop\nThe first and easiest way to commit changes is using GitHub Desktop.\n\nReview the GitHub documentation on Committing and reviewing changes to your project in GitHub Desktop for more detailed instructions.\n\n\n\n4.2 Commit changes with RStudio\nThe second way to commit changes is using the Git tab within RStudio. The interface for Git within RStudio is a little less friendly but is a convenient option since you don‚Äôt need to leave RStudio to commit your changes.\nHere is the step-by-step process (adapted from Connect RStudio to Git and GitHub in Happy Git and GitHub for the useR):\n\nClick the ‚ÄúGit‚Äù tab in upper right pane.\nCheck ‚ÄúStaged‚Äù box for exercise_01.qmd.\nIf you‚Äôre not already in the Git pop-up, click ‚ÄúCommit‚Äù.\nType a message in ‚ÄúCommit message‚Äù, such as ‚ÄúCommit from RStudio‚Äù.\nClick ‚ÄúCommit‚Äù.\nFinally, click the green ‚ÄúPush‚Äù button to send your local changes to GitHub.\n\n\n\n\n\n\n\nWhen should you commit your changes?\n\n\n\n\n\nYou don‚Äôt need to wait until you are 100% finished with the exercise to commit your changes. You may want to commit the changes every time you work on the exercise. Please make sure to change the ‚Äústatus‚Äù for the exercise from ‚ÄúAvailable‚Äù to ‚ÄúComplete‚Äù when your exercise is complete and ready for evaluation. I will typically evaluate the last week‚Äôs exercises on the Tuesday before each class session. Committing changes as you go can also avoid conflicts if I need to make corrections or additions to some part of the assignment after you started working on it.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise How-to"
    ]
  },
  {
    "objectID": "weeks/week_14.html",
    "href": "weeks/week_14.html",
    "title": "Week 14",
    "section": "",
    "text": "Reminder! We have no in-person class to allow students time to travel for Thanksgiving Day and American Indian Heritage Day.\n\n\n\n\n\n\n\n\n\nReminder! Your final project presentation is due on 2024-12-04",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 14"
    ]
  },
  {
    "objectID": "slides/metadata.html#what-are-we-talking-about-metadata",
    "href": "slides/metadata.html#what-are-we-talking-about-metadata",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "1 What are we talking about metadata?",
    "text": "1 What are we talking about metadata?\n\nWhat is metadata and why does it matter?\nWhat is geospatial metadata?\nHow can you make metadata?\n\n\nPortions of these are adapted or inspired by a fall 2022 lecture by Reina Chano Murray (repo / Google Slides).\n\n\n\nIntroduction to metadata:\n\nWhat is metadata?\nWhy does metadata matter?\nWhat are metadata standards?\n\nGeospatial metadata\n\nGeospatial metadata standards\nGeospatial metadata schemas\n\nMetadata DIY\n\nDiÔ¨Äerent levels of data\nCommon elements to include in metadata\nWriting a READMEs\nUsing data dictionaries"
  },
  {
    "objectID": "slides/metadata.html#what-is-metadata",
    "href": "slides/metadata.html#what-is-metadata",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "2 What is metadata?",
    "text": "2 What is metadata?\n\nWhat is metadata?\nWhy does metadata matter?\nWhat is a metadata standard?\nWhat is a schema?"
  },
  {
    "objectID": "slides/metadata.html#what-is-metadata-1",
    "href": "slides/metadata.html#what-is-metadata-1",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "3 What is metadata?",
    "text": "3 What is metadata?\n\nMetadata is data about data. It describes information like who collected it, when, for what purpose, and the level of quality‚Ä¶ You can think of metadata as little messengers to the future.\n\n‚Äì Sarah Wakamiya (Inventory & Monitoring Program Data Manager), National Park Service from What in the World is Metadata and Why Should I Care?"
  },
  {
    "objectID": "slides/metadata.html#what-is-metadata-2",
    "href": "slides/metadata.html#what-is-metadata-2",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "4 What is metadata?",
    "text": "4 What is metadata?\n\nMetadata provides context\nMetadata has structure\nMetadata makes it easier to find, use, or manage related data"
  },
  {
    "objectID": "slides/metadata.html#what-is-metadata-3",
    "href": "slides/metadata.html#what-is-metadata-3",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "5 What is metadata?",
    "text": "5 What is metadata?\n\n‚Äúthe metadata is collected so that it can fulÔ¨Åll a useful purpose, and sorted into known categories. It is this notion of structure that turns raw information into actionable metadata.‚Äù\n\n‚Äì Jenn Riley, NISO, from Understanding Metadata: What is Metadata, and What is it For?: A Primer, 2017"
  },
  {
    "objectID": "slides/metadata.html#why-does-metadata-matter",
    "href": "slides/metadata.html#why-does-metadata-matter",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "6 Why does metadata matter?",
    "text": "6 Why does metadata matter?\nMetadata makes your data more discoverable and understandable\nGood metadata helps others trust, validate, reuse and build upon your data."
  },
  {
    "objectID": "slides/metadata.html#what-are-metadata-standards",
    "href": "slides/metadata.html#what-are-metadata-standards",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "7 What are metadata standards?",
    "text": "7 What are metadata standards?\nA metadata standard is a set of rules, or an agreement, that set the minimum amount of information that should be documented about a dataset (and how).\nA metadata syntax is a set of rules for the structure and format of the metadata.\nStandardizing content and syntax makes it easier for both humans and computers to Ô¨Ånd and understand your data!\n\nProvides agreement on the meaning and semantics of the data."
  },
  {
    "objectID": "slides/metadata.html#geospatial-metadata",
    "href": "slides/metadata.html#geospatial-metadata",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "8 Geospatial Metadata",
    "text": "8 Geospatial Metadata\nGeospatial metadata is just metadata about geospatial datasets, projects, or workflows."
  },
  {
    "objectID": "slides/metadata.html#what-elements-are-in-most-geospatial-metadata-standards",
    "href": "slides/metadata.html#what-elements-are-in-most-geospatial-metadata-standards",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "9 What elements are in most geospatial metadata standards?",
    "text": "9 What elements are in most geospatial metadata standards?\n\nBounding box\nGeographic location (often a identifier or controlled vocabulary, e.g.¬†GeoName)\nGeometry type (a.k.a. spatial representation)\nProjection/coordinate reference system\nProvenance (how the data was made)\n\n\n\n\n\n\n\nImportant\n\n\nSome elements can be generated by a GIS application‚Äîbut some require manual entry."
  },
  {
    "objectID": "slides/metadata.html#what-else-is-included-in-a-geospatial-metadata-standard",
    "href": "slides/metadata.html#what-else-is-included-in-a-geospatial-metadata-standard",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "10 What else is included in a geospatial metadata standard?",
    "text": "10 What else is included in a geospatial metadata standard?\n\nGeoprocessing tools used to create data\nMaintenance schedule (if data will be updated)\nSystem/software environment (e.g.¬†software and software version used to create data)\nGeospatial metadata schema"
  },
  {
    "objectID": "slides/metadata.html#different-levels-of-data-to-document",
    "href": "slides/metadata.html#different-levels-of-data-to-document",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "11 Different Levels of Data to Document",
    "text": "11 Different Levels of Data to Document\n\nData file or layer\nCollection of files or layers\nMap or data presentation\nProject"
  },
  {
    "objectID": "slides/metadata.html#metadata-policies-maryland-imap",
    "href": "slides/metadata.html#metadata-policies-maryland-imap",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "12 Metadata Policies: Maryland iMAP",
    "text": "12 Metadata Policies: Maryland iMAP"
  },
  {
    "objectID": "slides/metadata.html#metadata-policies-maryland-imap-1",
    "href": "slides/metadata.html#metadata-policies-maryland-imap-1",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "13 Metadata Policies: Maryland iMAP",
    "text": "13 Metadata Policies: Maryland iMAP\n\nHow do you get data published on MD iMAP?\n\nMD iMAP Data Submission Policy (Jan.¬†2015): ‚Äúorganizations can submit data for inclusion in MD iMAP using the guidelines in this document.‚Äù\n\nHow should state agencies use ArcGIS Online?\n\nPolicy and Standards for Esri ArcGIS Online (Mar.¬†2021): ‚Äúpolicy and guidance on standards and the use of ArcGIS Online for Maryland (AGOL) by State agencies.‚Äù\n\nWhat can people who use MD iMAP expect?\n\nMD iMAP Data Management Plan (Jan.¬†2015): ‚Äústandards and specifications‚Äù to improve ‚Äúdata consistency and availability of information.‚Äù"
  },
  {
    "objectID": "slides/metadata.html#metadata-policies",
    "href": "slides/metadata.html#metadata-policies",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "14 Metadata Policies",
    "text": "14 Metadata Policies\n\n\nHow do you ensure the integrity of data for environmental regulation?\n\nEPA Metadata Specifications. See also Ecological Metadata Language (EML)"
  },
  {
    "objectID": "slides/metadata.html#metadata-schemas",
    "href": "slides/metadata.html#metadata-schemas",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "15 Metadata Schemas",
    "text": "15 Metadata Schemas\n\n\nHow do you share data across the federal government?\n\nFederal agencies are encouraged to use ISO 19115: Geographic information - Metadata (a standard developed from 1999 to 2003 to make the 1998 Content Standard for Digital Geospatial Metadata (CSDGM) work with ‚Äúother formal and defacto standards that support the documentation of geospatial data and services.‚Äù\n\n\n\nISO Standards Diagram via FGDC"
  },
  {
    "objectID": "slides/metadata.html#geospatial-metadata-schemas",
    "href": "slides/metadata.html#geospatial-metadata-schemas",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "16 Geospatial Metadata Schemas",
    "text": "16 Geospatial Metadata Schemas\n\nINSPIRE (Infrastructure for Spatial Information in Europe)\nOpenGeoMetadata"
  },
  {
    "objectID": "slides/metadata.html#what-can-you-do-with-geospatial-metadata",
    "href": "slides/metadata.html#what-can-you-do-with-geospatial-metadata",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "17 What can you do with geospatial metadata?",
    "text": "17 What can you do with geospatial metadata?\n\nSearch and discovery for maps and data\nGazetteers and controlled vocabularies\nBuild tools and references\n\n\n\ninput form\nstructured attributes (author, subject, topic)\nunstructured attributes (description, keywords, tags)\nsupplementary reference information"
  },
  {
    "objectID": "slides/metadata.html#what-can-you-build-to-work-with-spatial-metadata",
    "href": "slides/metadata.html#what-can-you-build-to-work-with-spatial-metadata",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "18 What can you build to work with spatial metadata?",
    "text": "18 What can you build to work with spatial metadata?\n\nREADMEs\nData dictionaries\nConventions and controlled vocabularies\n\nVaried tools can support the creation of different elements of metadata."
  },
  {
    "objectID": "slides/metadata.html#useful-how-to-resources",
    "href": "slides/metadata.html#useful-how-to-resources",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "19 Useful how to resources",
    "text": "19 Useful how to resources\n\nUSGS Metadata Creation Guide"
  },
  {
    "objectID": "slides/metadata.html#search-and-discovery",
    "href": "slides/metadata.html#search-and-discovery",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "20 Search and discovery",
    "text": "20 Search and discovery\n\nGeoBlacklight\nOpenIndexMaps\nAllmaps: Curating, georeferencing and exploring for IIIF maps"
  },
  {
    "objectID": "slides/metadata.html#gazetteers",
    "href": "slides/metadata.html#gazetteers",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "21 Gazetteers",
    "text": "21 Gazetteers\n\nWho‚Äôs On First: a big list of places, each with a stable identifier and some number of descriptive properties about that location.\nPleiades: a community-built gazetteer and graph of ancient places.\nWorld Historical Gazetteer"
  },
  {
    "objectID": "slides/metadata.html#tips-for-documentation",
    "href": "slides/metadata.html#tips-for-documentation",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "22 Tips for Documentation",
    "text": "22 Tips for Documentation\n\nREADMEs are your best friend\nDocument your data along the way - saves you time at the end\nUse descriptive file names\n\n\n\n\n\n\n\nUse GIS applications to make metadata\n\n\nIf you‚Äôre using geospatial desktop software or web GIS, create your metadata in the platform/software you start in (inheritance). You can usually export the metadata as XML."
  },
  {
    "objectID": "slides/metadata.html#what-is-a-readme",
    "href": "slides/metadata.html#what-is-a-readme",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "23 What is a README?",
    "text": "23 What is a README?\nA README file is a text file containing key information about your data which gives the reader a general understanding of the purpose and history of your data set, how it is organized, and how it can be used. You can think of a README file as a manual for your data.\nYou can use it to capture components of your data that are not adequately captured in the metadata contained with your geoprocessing application."
  },
  {
    "objectID": "slides/metadata.html#what-write-a-readme",
    "href": "slides/metadata.html#what-write-a-readme",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "24 What write a README?",
    "text": "24 What write a README?\nWhile some of the information contained within your README file may overlap with the content you entered in the metadata within your geoprocessing tool, it is still a good idea to create a separate file that lives outside of your geospatial file.\nThis is helpful for not only if you share your data with others, but is also beneÔ¨Åcial to yourself if you need to revisit your data in the future.\nFurthermore, some geospatial formats (e.g.¬†GeoJSON) or other formats you might save your file as (csv) just can‚Äôt store metadata like a shapefile or GeoPackage.\nCover all your bases."
  },
  {
    "objectID": "slides/metadata.html#readme-files---what-to-include",
    "href": "slides/metadata.html#readme-files---what-to-include",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "25 README Files - What to include?",
    "text": "25 README Files - What to include?\n\nUse templates and checklists!\nHigh-level and essential information, e.g.¬†purpose of the data set, where the files can be found\nGeospatial-speciÔ¨Åc elements, e.g.¬†coordinate reference system, geometry type\nWorkÔ¨Çow/software environment, e.g.¬†software version, data manipulations which occurred outside of your geoprocessing tool, data version history\nFile naming and organization, e.g.¬†purpose of key files and file naming scheme\n\nGuide to writing ‚Äúreadme‚Äù style metadata"
  },
  {
    "objectID": "slides/metadata.html#open-data-charter-2015",
    "href": "slides/metadata.html#open-data-charter-2015",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "26 Open Data Charter (2015)",
    "text": "26 Open Data Charter (2015)\n\n\nCreated in October 2015, the International Open Data Charter developed six principles on how to publish data that can be freely used, reused, and redistributed by anyone, anytime, anywhere:\n\nOpen by Default\nTimely and Comprehensive\nAccessible and Usable\nComparable and Interoperable\nFor Improved Governance and Citizen Engagement\nFor Inclusive Development and Innovation\n\n\n\n\n\nCover of the International Open Data Charter\n\n\n\n\n\nOpen By Default This represents a real shift in how government operates and how it interacts with citizens. At the moment we often have to ask officials for the specific information we want. Open by default turns this on its head and says that there should be a presumption of publication for all. Governments need to justify data that‚Äôs kept closed, for example for security or data protection reasons. To make this work, citizens must also feel confident that open data will not compromise their right to privacy.\nTimely and Comprehensive Open data is only valuable if it‚Äôs still relevant. Getting information published quickly and in a comprehensive way is central to its potential for success. As much as possible governments should provide data in its original, unmodified form.\nAccessible and Usable Ensuring that data is machine readable and easy to find will make data go further. Portals are one way of achieving this. But it‚Äôs also important to think about the user experience of those accessing data, including the file formats that information is provided. Data should be free of charge, under an open license, for example, those developed by Creative Commons.\nComparable and Interoperable Data has a multiplier effect. The more quality datasets you have access to, and the easier it is for them to talk to each other, the more potential value you can get from them. Commonly-agreed data standards play a crucial role in making this happen.\nFor Improved Governance & Citizen Engagement Open data has the capacity to let citizens (and others in government) have a better idea of what officials and politicians are doing. This transparency can improve public services and help hold governments to account.\nFor Inclusive Development and Innovation Finally, open data can help spur inclusive economic development. For example, greater access to data can make farming more efficient, or it can be used to tackle climate change. Finally, we often think of open data as just about improving government performance, but there‚Äôs a whole universe out there of entrepreneurs making money off the back of open data."
  },
  {
    "objectID": "slides/metadata.html#fair-and-care",
    "href": "slides/metadata.html#fair-and-care",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "27 FAIR and CARE",
    "text": "27 FAIR and CARE\n\n\nFAIR Guiding Principles (2016):\n\nFindable,\nAccessible,\nInteroperable,\nand Reusable\n\nCARE Principles for Indigenous Data Governance (2019):\n\nCollective benefit,\nAuthority to control,\nResponsibility,\nand Ethics\n\n\n\n\n\nImage: https://www.nature.com/articles/s41597-021-00892-0/figures/1"
  },
  {
    "objectID": "slides/metadata.html#fair-and-care-in-practice",
    "href": "slides/metadata.html#fair-and-care-in-practice",
    "title": "Metadata, geospatial metadata, and READMEs",
    "section": "28 FAIR and CARE in Practice",
    "text": "28 FAIR and CARE in Practice\n\n\n\nFig. 2 from Operationalizing the CARE and FAIR Principles for Indigenous data futures\n\n\n\nImage: https://www.nature.com/articles/s41597-021-00892-0/figures/2"
  },
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": "Slides",
    "section": "",
    "text": "Welcome to GES 668: Building Spatial Datasets\n\n\n\n\n\n\n\n\n\nAug 28, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting started with spatial data using {sf} and the {tidyverse}\n\n\n\n\n\n\n\n\n\nAug 29, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizing spatial data with ggplot2\n\n\n\n\n\n\n\n\n\nSep 6, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTransforming data with {dplyr} and {tidyr}\n\n\n\n\n\n\n\n\n\nSep 13, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nCreating and manipulating attributes for spatial data\n\n\n\n\n\n\n\n\n\nSep 20, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWorking with spatial and geometric operations in {sf}\n\n\n\n\n\n\n\n\n\nSep 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidying and joining data\n\n\n\n\n\n\n\n\n\nOct 16, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWriting functions and pipelines\n\n\n\n\n\n\n\n\n\nOct 16, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExploratory data analysis\n\n\n\n\n\n\n\n\n\nOct 18, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEditing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package\n\n\n\n\n\n\n\n\n\nOct 25, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReading and writing spatial data\n\n\n\n\n\n\n\n\n\nOct 16, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMetadata, geospatial metadata, and READMEs\n\n\n\n\n\n\n\n\n\nOct 16, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nEffective visualization with {ggplot2} and R\n\n\n\n\n\n\n\n\n\nOct 16, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nCoding basics\n\n\n\n\n\n\n\n\n\nOct 16, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nFall 2023 Weekly Updates\n\n\n\n\n\n\n\n\n\nAug 30, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWeekly Updates\n\n\n\n\n\n\n\n\n\nSep 4, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nWorking with Quarto\n\n\n\n\n\n\n\n\n\nOct 16, 2024\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Course information",
      "Slides"
    ]
  },
  {
    "objectID": "final-project.html",
    "href": "final-project.html",
    "title": "Final Project",
    "section": "",
    "text": "The final project is an opportunity for you to practice the spatial data skills we‚Äôve been working on in this course while also exploring your interests and the potential for spatial data to support real-world goals.\nYour project should focus on a topic area or dataset that is relevant to your personal and professional interests. Typically, the final project should fit into one of two categories:\n\nA data visualization or interactive that uses the data to tell a story or prompt reflection\nAn exploratory data analysis that uses the data to ask or answer questions\n\nThis project has three parts:\n\nA project proposal (due 2024-11-13)\nAn short recorded presentation about your project (due 2024-12-04)\nA project GitHub repository including code, data, output files, and a README (due 2024-12-16)\n\nYou are also expected to complete a final self-assessment reflecting on your project by 2024-12-18 .",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "final-project.html#overview",
    "href": "final-project.html#overview",
    "title": "Final Project",
    "section": "",
    "text": "The final project is an opportunity for you to practice the spatial data skills we‚Äôve been working on in this course while also exploring your interests and the potential for spatial data to support real-world goals.\nYour project should focus on a topic area or dataset that is relevant to your personal and professional interests. Typically, the final project should fit into one of two categories:\n\nA data visualization or interactive that uses the data to tell a story or prompt reflection\nAn exploratory data analysis that uses the data to ask or answer questions\n\nThis project has three parts:\n\nA project proposal (due 2024-11-13)\nAn short recorded presentation about your project (due 2024-12-04)\nA project GitHub repository including code, data, output files, and a README (due 2024-12-16)\n\nYou are also expected to complete a final self-assessment reflecting on your project by 2024-12-18 .",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "final-project.html#project-proposal",
    "href": "final-project.html#project-proposal",
    "title": "Final Project",
    "section": "Project proposal",
    "text": "Project proposal\nYour project proposal needs to answer identify a data source and answer three main questions:\n\nWhat are your goals for the project?\nWhat data can you use to support your goal?\nWhat is your approach to using data to support your goal?\n\nYou should answer each question with a brief but considered response. If it helps to have a word count, try to answer all three questions in something between 700 and 1000 words.\nFormat your proposal as Quarto document with citations within the project folder of your class respository. Your proposal should include:\n\nlinks to any published data or related resources\nreproducible code blocks for any preliminary data analysis you completed to support your proposal\n\nDon‚Äôt forget to cite your sources! While an extensive literature review is unnecessary, reviewing how other researching and practitioners have used the same or similar spatial data may give you ideas for your own project.\n\nIdentifying a data source\nStudents are strongly encouraged to build a project using data from:\n\nOpenStreetMap (accessed with the {osmdata} package),\nor American Community Survey data (accessed with the {tidycensus} package)\n\nSee the readings and materials from week 9 or week 10 for more background information on these sources.\n\n\n\n\n\n\nA caution about using different data source\n\n\n\nIf you do not using {tidycensus} or {osmdata}, I may not be able to provide the same level of assistance with trouble-shooting your code for the final project. Consider opportunities to use OpenStreetMap and American Community Survey data in combination with other sources.\n\n\nIf you are interested in working with some other data source, your project proposal should explain your reason for selecting the source and make sure to confirm that:\n\nyou know the data and goals are related (e.g.¬†you have a question that can be answered using the data),\nyou have permission to use the data (e.g.¬†the data is published under an open license),\nyou know the data is in an accessible format (e.g.¬†CSV, ArcGIS Feature Server, GeoPackage file),\nand you know there are no major data quality issues (e.g.¬†location accuracy, completeness) that you can‚Äôt address as part of the project.\n\n\n\nWhat are your goals for the project?\nYour goals could include answering a research question, making the case for a public policy change, or building an interface to help people better understand an issue in their community.\nYour goals could also include developing your own ability to analyze a specific type of data or exploring an academic interest.\nAsk yourself: Who might benefit from your proposed project? How can your project can avoid causing people harm?\nIn framing your project, look for opportunities to apply one or more of the six models of local practice described in Loukissas (2019):\n\nLook at the data setting, not just the data set\nMake place part of data presentation\nTake a comparative approach to data analysis\nCreate counterdata to challenge normative algorithms\nCreate interfaces that cause friction\nUse data to build relationships\n\nIs your project designed around what Loukissas calls the common ‚Äúambitions‚Äù for working data‚Äîorientation, access, analysis, and optimization? Or, are you trying to promote critical reflection on the local conditions of data using strategies such as place making, restraint, reflexivity, or contestation?\nYour goals may change between your initial proposal and the completion of your project but your final presentation should include both an explanation of your goals and how your goals do or do not engage with critical approaches to spatial data.\n\n\nWhat data can you use to support your goal?\nYour data could include any public spatial data or data that has a spatial attribute. You can even create data from scratch or collect your own data.\nAsk yourself: What is the ‚Äúsetting‚Äù for the data? Whose local knowledge does it represent? What communities participate in collecting or maintaining the data?\n\n\nWhat is your approach to using data to support your goal?\nYour approach could include mapping, exploratory analysis, documentation, visualization, or a combination of multiple approaches.\nYou don‚Äôt need to reinvent the wheel. You can adapt an existing approach (reproducing an existing using new data or geography) or propose a few options you hope to try and compare.\nAsk yourself: Is your proposed approach feasible in the time you have available this semester? What challenges do you anticipate in using this data?\n\n\n\n\n\n\nCiting sources with RStudio and Zotero\n\n\n\nCiting sources in RStudio is a little different than Microsoft Word so I strongly recommend using the Zotero citation manager in combination with the Better Bibtex extension. If a single R package is a big part of your proposed approach, make sure to also include a citation for the package. Read How to Cite R and R Packages by Steffi LaZerte for more background on how and why you should cite R packages.",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "final-project.html#project-presentation",
    "href": "final-project.html#project-presentation",
    "title": "Final Project",
    "section": "Project presentation",
    "text": "Project presentation\nYour in-class presentation should be around five minutes and address these key questions:\n\nWhat were your initial goals for the project? How did they change or develop as you worked on your project?\nWhat data sources did you use? How, why, and where were they created?\nWhat packages, templates, or other resources did you use in creating your final project?\nWhat challenges did you encounter in making use of these resources and this data?\nWhat do you think your project does well?\n\n\n\n\n\n\n\nCreating presentations with Quarto and reveal.js\n\n\n\nUse the Quarto reveal.js presentation format for your presentation. This format can be tricky to learn but allows you to easily incorporate data visualizations or other materials from your project into your presentation.",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "final-project.html#final-project-repository",
    "href": "final-project.html#final-project-repository",
    "title": "Final Project",
    "section": "Final project repository",
    "text": "Final project repository\nYour final project should be submitted as a GitHub repository. A private repository can be provided to you as part of the course organization or you can set up your own repository on your personal GitHub account.\nThe repository must include:\n\nproject data (if needed): including the source files or, if files exceed the 50MB maximum size allowed on GitHub, a script used for importing and processing the data before visualization or analysis. Students who are using {osmdata} or {tidycensus} should include scripts for downloading data but do not include the source data.\nproject code: including any R scripts, RMarkdown, or Quarto files used to read, tidy, transform, analyze, visualize or map the selected data.\noutput files: including any processed data files or rendered PDF or HTML documents.\nREADME: a public-facing summary of the project explaining your process for processing the data and any relevant information another person may need to work with the data or your code.\nadditional materials: including any data collection materials (e.g.¬†survey forms), reference data used by the project code, or other related materials.",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "exercises/exercise_05.html",
    "href": "exercises/exercise_05.html",
    "title": "Exercise 05",
    "section": "",
    "text": "Exercise due on 2023-10-06\n\n\n\n‚ÑπÔ∏è See week 5 for related slides and readings",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 05"
    ]
  },
  {
    "objectID": "course-schedule.html",
    "href": "course-schedule.html",
    "title": "Schedule overview",
    "section": "",
    "text": "Week 1\n\n\nWelcome to GES668\n\n\n\n\n\nAug 28, 2024\n\n\n\n\n\n\n\nWeek 2\n\n\nVisualizing spatial data with {ggplot2}\n\n\n\n\n\nSep 4, 2024\n\n\n\n\n\n\n\nWeek 3\n\n\nTransforming data with {dplyr}\n\n\n\n\n\nSep 11, 2024\n\n\n\n\n\n\n\nWeek 4\n\n\nTransforming spatial data attributes\n\n\n\n\n\nSep 18, 2024\n\n\n\n\n\n\n\nWeek 5\n\n\nTidying and joining spatial data\n\n\n\n\n\nSep 25, 2024\n\n\n\n\n\n\n\nWeek 6\n\n\nApplying spatial transformations and geometric operations using {sf}\n\n\n\n\n\nOct 2, 2024\n\n\n\n\n\n\n\nWeek 7\n\n\nWriting functions and pipelines\n\n\n\n\n\nOct 9, 2024\n\n\n\n\n\n\n\nWeek 8\n\n\nDeveloping an exploratory data analysis with {sf} and the {tidyverse}\n\n\n\n\n\nOct 16, 2024\n\n\n\n\n\n\n\nWeek 9\n\n\nEditing OpenStreetMap and exploring OpenStreetMap data with {osmdata}\n\n\n\n\n\nOct 23, 2024\n\n\n\n\n\n\n\nWeek 10\n\n\nExploring American Community Survey data with {tidycensus}\n\n\n\n\n\nOct 30, 2024\n\n\n\n\n\n\n\nWeek 11\n\n\nReading and writing spatial data files and services\n\n\n\n\n\nNov 6, 2024\n\n\n\n\n\n\n\nWeek 12\n\n\nCreating and managing spatial metadata\n\n\n\n\n\nNov 13, 2024\n\n\n\n\n\n\n\nWeek 13\n\n\nProject check-in meetings\n\n\n\n\n\nNov 20, 2024\n\n\n\n\n\n\n\nWeek 14\n\n\nFinal Project Work Session\n\n\n\n\n\nNov 27, 2024\n\n\n\n\n\n\n\nWeek 15\n\n\nFinal Project Presentations\n\n\n\n\n\nDec 4, 2024\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Course information",
      "Schedule"
    ]
  },
  {
    "objectID": "exercises/exercise_07.html",
    "href": "exercises/exercise_07.html",
    "title": "Exercise 07",
    "section": "",
    "text": "Exercise due on 2023-10-20\n‚ÑπÔ∏è See week 7 for related slides and readings",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 07"
    ]
  },
  {
    "objectID": "exercises/exercise_07.html#setup",
    "href": "exercises/exercise_07.html#setup",
    "title": "Exercise 07",
    "section": "1 Setup",
    "text": "1 Setup\nTo start this week‚Äôs exercise, I have created a new folder named project in each of your class repositories (based on the new public project-template repository for our class). Sync your repository to make sure you have the latest files before you get started with the exercise.\nIn the folder you will find a new RStudio project file (.Rproj) named project.Rproj. Open the project and locate the file named example-functions.qmd.\nOpen example-functions.qmd and, in the editor pane of RStudio, click the ‚ÄúRender‚Äù button to turn the Quarto document into a rendered HTML document in the ‚ÄúPreview‚Äù pane.\nThis Quarto document is designed to review the topics we covered in last week‚Äôs class and to show some of the options for Quarto documents. You can review the document or, if you feel confident in the material, jump ahead to the exercise.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 07"
    ]
  },
  {
    "objectID": "exercises/exercise_07.html#exercise",
    "href": "exercises/exercise_07.html#exercise",
    "title": "Exercise 07",
    "section": "2 Exercise",
    "text": "2 Exercise\nHere are the steps to complete this week‚Äôs exercise:\n\nUse the menu to create a new Quarto document (Go to File &gt; New File &gt; Quarto Document...). Fill in the title ‚ÄúExercise 7‚Äù and your name as the author. After the new document opens, notice how the title and author appear in the front matter for the new document.\n\n\n\nSave the Quarto document using the file name exercise_07.qmd.\nInsert a new code block and add code to read spatial data into R. You can use sf::read_sf() to read data from a URL or file path or you can use one of the data functions we‚Äôve tried in class, such as tigris::counties() or rnaturalearth::ne_countries(returnclass = \"sf\").\n\n\n\n\n\n\n\nDon‚Äôt forget! If you are using a local file, the file size¬†must¬†be less than 50MB or your changes to the repository can‚Äôt be committed to GitHub. If your file is not a spatial data file (e.g.¬†a CSV file) you should convert the object into a sf object using¬†sf::st_as_sf().\n\n\n\n\nInsert a new code block and write a vector function (either a ‚Äúmutate‚Äù or ‚Äúsummary‚Äù style function) that can take one or more attributes from your data as an input. Include one or more examples of how the function works.\nInsert a new code block and write a vector function (either a ‚Äúmutate‚Äù or ‚Äúsummary‚Äù style function) that can take the feature geometry from your data as an input. This function should use one of the geometric unary or binary functions from the {sf} package. It doesn‚Äôt need to be complicated but take a look at the function reference or the sf cheatsheet and find a function that you are curious to try out. Include one or more examples of how the function works.\nInsert a new code block and write a mapping or plotting function. Remember, if you write a mapping function, it should probably include ggplot2::geom_sf() in the body of the function.\nFinally‚Äîrender the Quarto document and make sure it can be knit as an HTML page without error! You can also run quarto::quarto_preview() in the console to keep a live preview running in the background while you complete the exercise.\n\n\n\n\n\n\n\nUse verbs for function names\n\n\n\n\n\nFor each part of this exercise, make sure to use function names that help you and anyone using your code understand what the function does. Using verbs is an easy way to do that.\n\n\n\nBetween each code block, please include a brief explanation of what question you are trying to answer with the functions.\nFor example, you could write: ‚ÄúThis function takes data on storm observations and summarizes the average wind speed and air pressure by hurricane category so I can better understand the relationship between the continuous and categorical variables.‚Äù\nWhen you are done writing the functions (and examples!), there are just two steps left in this exercise to help you practice working with Quarto.\n\nAdd a link to your Exercise 7 document to the navigation menu of your Quarto website. Open the _quarto.yml project configuration file and look for the navbar section. Take a look at the Quarto guide to Website Navigation for more information.\nExplore the HTML theme options for your Quarto site. Try swapping the default cosmo theme for one of the other Bootswatch¬†themes.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 07"
    ]
  },
  {
    "objectID": "exercises/exercise_07.html#bonus-exercise",
    "href": "exercises/exercise_07.html#bonus-exercise",
    "title": "Exercise 07",
    "section": "3 Bonus exercise",
    "text": "3 Bonus exercise\nRead in more data and try using your mapping or plotting function with a different dataset.\nDoes the function still work they way you expect? Why or why not?\nWrite a few sentences explaining what happens and, if the functions do not work, try writing a new version that works with both your original data and the new version.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 07"
    ]
  },
  {
    "objectID": "resources/data-sources.html",
    "href": "resources/data-sources.html",
    "title": "Data sources",
    "section": "",
    "text": "Spatial data is available in a wide range of formats at the local, national, and international levels. Data is often published through larger data portals where you can find links to access data through a web service or options to download part of all of the data.",
    "crumbs": [
      "Resources üìãÔ∏è",
      "Data Sources"
    ]
  },
  {
    "objectID": "resources/data-sources.html#local-data-sources-for-baltimore-and-maryland",
    "href": "resources/data-sources.html#local-data-sources-for-baltimore-and-maryland",
    "title": "Data sources",
    "section": "Local data sources for Baltimore and Maryland ü¶Ä",
    "text": "Local data sources for Baltimore and Maryland ü¶Ä\n\nBaltimore City Open Data Hub\nBaltimore County GIS Open Data Portal\nBMC Regional GIS Data Center - Baltimore Metropolitan Council\nChesapeake Bay Open Data Portal\nMaryland‚Äôs GIS Data Catalog\nMaryland Open Data\nVital Signs Open Data Portal\nMaryland ArcGIS REST API Services Index",
    "crumbs": [
      "Resources üìãÔ∏è",
      "Data Sources"
    ]
  },
  {
    "objectID": "resources/data-sources.html#national-data-sources-for-the-u.s.",
    "href": "resources/data-sources.html#national-data-sources-for-the-u.s.",
    "title": "Data sources",
    "section": "National data sources for the U.S. üá∫üá∏",
    "text": "National data sources for the U.S. üá∫üá∏\n\nData.gov (Aggregates local, state, and federal open data catalogs)\nU.S. Department of Housing and Urban Development Geospatial Data Storefront\nGeospatial at BTS (Bureau of Transportation Statistics), U.S. Department of Transportation\nBTS Data Inventory (Bureau of Transportation Statistics), U.S. Department of Transportation\nEDGE Geodata (Education Demographic and Geographic Estimates), U.S. Department of Education, National Center for Education Statistics\nU.S. Geological Survey Science Data Catalog\nGeoPlatform.gov\nNational Ecological Observatory Network (NEON) Data Portal\nOpen Data Network (Socrata/Tyler Technologies)\nUrban Institute Data Catalog",
    "crumbs": [
      "Resources üìãÔ∏è",
      "Data Sources"
    ]
  },
  {
    "objectID": "resources/data-sources.html#global-data-sources",
    "href": "resources/data-sources.html#global-data-sources",
    "title": "Data sources",
    "section": "Global data sources üåè",
    "text": "Global data sources üåè\n\nNatural Earth\nOpenStreetMap (see the OSM Wiki for more on how data is organized on OSM)\nArcGIS Living Atlas of the World\nNASA Open Data Portal\nNOAA Data Discovery Portal\nWorld Bank Open Data\nHumanitarian Data Exchange\nData Portals (Open Knowledge Foundation)\nRegistry of Open Data on AWS",
    "crumbs": [
      "Resources üìãÔ∏è",
      "Data Sources"
    ]
  },
  {
    "objectID": "resources/data-sources.html#r-packages-for-data-access",
    "href": "resources/data-sources.html#r-packages-for-data-access",
    "title": "Data sources",
    "section": "R packages for data access",
    "text": "R packages for data access\n\nGeneral data access packages\nGeneral data access packages include:\n\n{arcgislayers} üì¶ to access ArcGIS FeatureServer data\n{RSocrata} to access Socrata data portals\n{ckanr} to access CKAN data portals\n\n\n\nDomain-specific data access packages\nThere are many different data access R packages for interacting with APIs and web services relevant to specific domains of research or practice.\nA few broadly useful packages include:\n\n{tigris}: Download and use Census TIGER/Line shapefiles.\n{tidycensus}: Get US Census boundary and attribute data.\n{rnaturalearth}: Get Natural Earth data.\n{osmdata}: Get OpenStreetMap data.\n{geodata}: Get climate, elevation, soil, crop, species occurrence, and administrative boundary data.\n{dataRetrieval}: Get USGS or EPA water quality sample data, streamflow data, and metadata directly from web services.\n\nExplore the Data Access category on ROpenSci or search for packages on R-universe or CRAN to find the right package for your project or exercise.\n\n\nLocal data access packages\nI also maintain a few R packages for open data access in Baltimore and Maryland that students working on local projects may find helpful:\n\n{mapbaltimore}\n{bcpss}\n{mapmaryland}\n{marylandedu}",
    "crumbs": [
      "Resources üìãÔ∏è",
      "Data Sources"
    ]
  },
  {
    "objectID": "slides/effective-visualization.html#where-to-start",
    "href": "slides/effective-visualization.html#where-to-start",
    "title": "Effective visualization with {ggplot2} and R",
    "section": "1 Where to start?",
    "text": "1 Where to start?\n\nKnow your goal\nKnow your audience\nKnow your format"
  },
  {
    "objectID": "slides/effective-visualization.html#what-next",
    "href": "slides/effective-visualization.html#what-next",
    "title": "Effective visualization with {ggplot2} and R",
    "section": "2 What next?",
    "text": "2 What next?\n\nChoosing appropriate graphic types\nWriting and formatting clear text\nSelecting appropriate and engaging colors\nPreparing your feature geometry appropriately"
  },
  {
    "objectID": "slides/effective-visualization.html#choosing-appropriate-graphic-types",
    "href": "slides/effective-visualization.html#choosing-appropriate-graphic-types",
    "title": "Effective visualization with {ggplot2} and R",
    "section": "3 Choosing appropriate graphic types",
    "text": "3 Choosing appropriate graphic types\n\nWhat makes one graphic, chart, plot, or map ‚Äúbetter‚Äù or ‚Äúworse‚Äù?"
  },
  {
    "objectID": "slides/effective-visualization.html#items-attributes-marks-and-channels",
    "href": "slides/effective-visualization.html#items-attributes-marks-and-channels",
    "title": "Effective visualization with {ggplot2} and R",
    "section": "4 Items, Attributes, Marks, and Channels",
    "text": "4 Items, Attributes, Marks, and Channels\nIn Visualization Analysis and Design (2014), Tamara Munzner describes a set of useful concepts:\n\nitems,\nattributes,\nlinks,\nmarks,\nand channels\n\n\nBook website: https://www.cs.ubc.ca/~tmm/vadbook/\nvia https://homepage.divms.uiowa.edu/~luke/classes/STAT4580/percep.html"
  },
  {
    "objectID": "slides/effective-visualization.html#items-and-attributes",
    "href": "slides/effective-visualization.html#items-and-attributes",
    "title": "Effective visualization with {ggplot2} and R",
    "section": "5 Items and Attributes",
    "text": "5 Items and Attributes\n\nItems\n\nbasic units on which data is collected\n\nAttributes\n\nnumerical or categorical features of the data items we want to represent\n\nLinks\n\nrelations among items, e.g.¬†months within a year, or countries within a continent."
  },
  {
    "objectID": "slides/effective-visualization.html#marks-and-channels",
    "href": "slides/effective-visualization.html#marks-and-channels",
    "title": "Effective visualization with {ggplot2} and R",
    "section": "6 Marks and Channels",
    "text": "6 Marks and Channels\n\nMarks\n\ngeometric entities used to represent items: points, lines, areas.\n\nVisual channels\n\nfeatures of marks that can be used to reflect values of attributes.‚Äù\n\n\n\nhttps://homepage.divms.uiowa.edu/~luke/classes/STAT4580/percep.html"
  },
  {
    "objectID": "slides/open-street-map.html#overview",
    "href": "slides/open-street-map.html#overview",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "1 Overview",
    "text": "1 Overview\n\nWhat is OpenStreetMap?\nHow do you contribute to OpenStreetMap?\nHow do you download data from OpenStreetMap?\n\nThese slides on OpenStreetMap and exploring OSM data with the {osmdata} package are based on a March 10, 2020 presentation by Jonathan Dandois for MaptimeBmore and the CCBC GIS Capstone."
  },
  {
    "objectID": "slides/open-street-map.html#what-is-openstreetmap",
    "href": "slides/open-street-map.html#what-is-openstreetmap",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "2 What is OpenStreetMap?",
    "text": "2 What is OpenStreetMap?\n\nCreated in 2004 in response to restrictive data sharing by the UK Ordnance Survey\nGrew as the ‚ÄúWikipedia of maps‚Äù in response to increasing cost of commercial services like Google Maps after 2011 price hikes"
  },
  {
    "objectID": "slides/open-street-map.html#using-openstreetmap",
    "href": "slides/open-street-map.html#using-openstreetmap",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "3 Using OpenStreetMap",
    "text": "3 Using OpenStreetMap\n\nOpenStreetMap isn‚Äôt just a map‚Äîit is a¬†‚Äúglobal geodatabase¬†of everything¬†and¬†anything¬†that people add to the map‚Äù:\n\nroads, crosswalks, speed bumps, stop lights\nrestaurants, daycares, playgrounds, cannons\nforests, central business districts, boundaries\nland cover, gravestones, utility ROWs"
  },
  {
    "objectID": "slides/open-street-map.html#who-is-using-openstreetmap",
    "href": "slides/open-street-map.html#who-is-using-openstreetmap",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "4 Who is using OpenStreetMap?",
    "text": "4 Who is using OpenStreetMap?\nIndividual users, developers, and researchers:\n\nApps and websites\nGames\nAdvocacy and policy"
  },
  {
    "objectID": "slides/open-street-map.html#who-is-using-openstreetmap-1",
    "href": "slides/open-street-map.html#who-is-using-openstreetmap-1",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "5 Who is using OpenStreetMap?",
    "text": "5 Who is using OpenStreetMap?"
  },
  {
    "objectID": "slides/open-street-map.html#contributing-to-open-street-map",
    "href": "slides/open-street-map.html#contributing-to-open-street-map",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "6 Contributing to Open Street Map",
    "text": "6 Contributing to Open Street Map\nDifferent editors have different reasons for contributing and contribute in different ways:\n\nIndividuals\nPublic agencies\nNon-profit organizations\nCorporations\n\n\nDifferent editors use different tools, focus on editing different resources.\nOther options include:\n\nArcGIS Editor for OpenStreetMap"
  },
  {
    "objectID": "slides/open-street-map.html#tracing-and-digitizing-imagery",
    "href": "slides/open-street-map.html#tracing-and-digitizing-imagery",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "7 Tracing and digitizing imagery",
    "text": "7 Tracing and digitizing imagery\nMost editors for OpenStreetMap use high-resolution aerial, satellite, and drone-based imagery to trace or digitize:\n\nPOIs, addresses (points)\nRoads, sidewalks, paths (lines)\nSchool areas, central business districts, parks, lakes, playgrounds (polygons)\n\nLearn more in Getting Started with OSM."
  },
  {
    "objectID": "slides/open-street-map.html#what-is-good-editing",
    "href": "slides/open-street-map.html#what-is-good-editing",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "8 What is ‚Äúgood‚Äù editing?",
    "text": "8 What is ‚Äúgood‚Äù editing?\nLearn more in the Good practice section of the OpenStreetMap Wiki."
  },
  {
    "objectID": "slides/open-street-map.html#downloading-data-with-overpass-turbo",
    "href": "slides/open-street-map.html#downloading-data-with-overpass-turbo",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "9 Downloading data with overpass turbo",
    "text": "9 Downloading data with overpass turbo\n overpass turbo, a web-based data filtering tool for¬†OpenStreetMap, can run¬†Overpass API¬†queries and analyze the resulting OSM data interactively on a map."
  },
  {
    "objectID": "slides/open-street-map.html#open-historical-map",
    "href": "slides/open-street-map.html#open-historical-map",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "10 Open Historical Map",
    "text": "10 Open Historical Map"
  },
  {
    "objectID": "slides/open-street-map.html#section",
    "href": "slides/open-street-map.html#section",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "11 ",
    "text": "11"
  },
  {
    "objectID": "slides/open-street-map.html#downloading-data-with-osmdata",
    "href": "slides/open-street-map.html#downloading-data-with-osmdata",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "12 Downloading data with {osmdata}",
    "text": "12 Downloading data with {osmdata}\n\nosmdata is an R package for accessing the data underlying OpenStreetMap (OSM), delivered via the Overpass API.\nThe package is designed to allow access to small-to-medium-sized OSM datasets (see osmextract for an approach for reading-in bulk OSM data extracts)."
  },
  {
    "objectID": "slides/open-street-map.html#resources",
    "href": "slides/open-street-map.html#resources",
    "title": "Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package",
    "section": "13 Resources",
    "text": "13 Resources\n\nOSM Wiki\nLearnOSM\nTeachOSM"
  },
  {
    "objectID": "slides/welcome.html#what-is-this-class-about",
    "href": "slides/welcome.html#what-is-this-class-about",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "What is this class about?",
    "text": "What is this class about?"
  },
  {
    "objectID": "slides/welcome.html#what-is-this-class-about-1",
    "href": "slides/welcome.html#what-is-this-class-about-1",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "What is this class about?",
    "text": "What is this class about?\n\nWorking with data using R"
  },
  {
    "objectID": "slides/welcome.html#what-is-this-class-about-2",
    "href": "slides/welcome.html#what-is-this-class-about-2",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "What is this class about?",
    "text": "What is this class about?\n\nWorking with data spatial data using R"
  },
  {
    "objectID": "slides/welcome.html#what-is-this-class-about-3",
    "href": "slides/welcome.html#what-is-this-class-about-3",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "What is this class about?",
    "text": "What is this class about?\n\nWorking with spatial data about places"
  },
  {
    "objectID": "slides/welcome.html#what-is-this-class-about-4",
    "href": "slides/welcome.html#what-is-this-class-about-4",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "What is this class about?",
    "text": "What is this class about?\n\nWorking with spatial data about people and places"
  },
  {
    "objectID": "slides/welcome.html#what-is-this-class-about-5",
    "href": "slides/welcome.html#what-is-this-class-about-5",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "What is this class about?",
    "text": "What is this class about?\n\nWorking with spatial data local knowledge about people and places"
  },
  {
    "objectID": "slides/welcome.html#why-are-you-here",
    "href": "slides/welcome.html#why-are-you-here",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "Why are you here?",
    "text": "Why are you here?"
  },
  {
    "objectID": "slides/welcome.html#how-did-you-get-here",
    "href": "slides/welcome.html#how-did-you-get-here",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "How did you get here?",
    "text": "How did you get here?\nThis isn‚Äôt a metaphorical question.\nLet‚Äôs make a map:\n\nOpen this Felt map and trace a route for your commute to campus today\nStart as close or far from home as you like\nUse the ‚ÄúDetails‚Äù tab to add a ‚Äúname‚Äù attribute (with your name) and a ‚Äúmode‚Äù attribute (e.g.¬†UMBC Shuttle, Car or truck, Bike, etc.)"
  },
  {
    "objectID": "slides/welcome.html#what-experiences-do-you-bring-with-you-today",
    "href": "slides/welcome.html#what-experiences-do-you-bring-with-you-today",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "What experiences do you bring with you today?",
    "text": "What experiences do you bring with you today?"
  },
  {
    "objectID": "slides/welcome.html#why-am-i-here",
    "href": "slides/welcome.html#why-am-i-here",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "Why am I here?",
    "text": "Why am I here?\nA few things about me:\n\nI first started using GIS tools as a student studying anthropology and historic preservation at the University of Maryland College Park around 2007\nI started learning R as a student at the John Hopkins University School of Public Health in 2019\nI started developing R packages while working at the Neighborhood Design Center in 2020\nI work as a community planner at the Baltimore City Department of Planning (since June 2022)\n\n\nI believe in the potential of data to build power, inform collective action, and make change in the world"
  },
  {
    "objectID": "slides/welcome.html#communication",
    "href": "slides/welcome.html#communication",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "Communication üì¨",
    "text": "Communication üì¨\n\nI am not always on top of my email.\nPlease post questions to the Discord if you think other students could help (or others may share your question).\nIf you don‚Äôt get a timely response by email, message me on Discord."
  },
  {
    "objectID": "slides/welcome.html#assignments",
    "href": "slides/welcome.html#assignments",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "Assignments",
    "text": "Assignments\n\nWeekly check-in\nPractice exercises\nFinal project"
  },
  {
    "objectID": "slides/welcome.html#readings",
    "href": "slides/welcome.html#readings",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "Readings üìö",
    "text": "Readings üìö\n\nWhat are the readings?\nHow can you get the most out of the readings?"
  },
  {
    "objectID": "slides/welcome.html#miscellaneous",
    "href": "slides/welcome.html#miscellaneous",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "Miscellaneous",
    "text": "Miscellaneous"
  },
  {
    "objectID": "slides/welcome.html#welcome-again",
    "href": "slides/welcome.html#welcome-again",
    "title": "Welcome to GES 668: Building Spatial Datasets",
    "section": "Welcome again!",
    "text": "Welcome again!"
  },
  {
    "objectID": "weeks/week_15.html",
    "href": "weeks/week_15.html",
    "title": "Week 15",
    "section": "",
    "text": "Reminder! Your final project repository is due on 2024-12-16",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 15"
    ]
  },
  {
    "objectID": "course-overview.html",
    "href": "course-overview.html",
    "title": "GES668: Building Spatial Datasets",
    "section": "",
    "text": "In this course, students learn how to look critically at spatial data and use the R programming language to transform, visualize, and create spatial datasets. Working with open-source tools, reproducible methods, and real world data, students develop skills in the fundamentals of reading and wrangling spatial data with the sf and tidyverse family of R packages.\nReadings and practical exercise prepare students to build and maintain data sets about local places and navigate critical issues including data ownership, accuracy, and privacy considerations.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "weeks/week_04.html",
    "href": "weeks/week_04.html",
    "title": "Week 4",
    "section": "",
    "text": "This week is to learn to use {dplyr} and {sf} in combination to create and manipulate attributes associated with spatial data.\n\n\n\nReview key concepts of simple features in R\nIntroduce key concepts for spatial attribute data (e.g.¬†point vs.¬†block support)\nPractice using {sf} functions for geometric confirmation (st_intersects(), st_disjoint()) and geometric measurement (st_area(), st_length(), st_distance())\nDiscuss ideas for final projects",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 4"
    ]
  },
  {
    "objectID": "weeks/week_04.html#overview",
    "href": "weeks/week_04.html#overview",
    "title": "Week 4",
    "section": "",
    "text": "This week is to learn to use {dplyr} and {sf} in combination to create and manipulate attributes associated with spatial data.\n\n\n\nReview key concepts of simple features in R\nIntroduce key concepts for spatial attribute data (e.g.¬†point vs.¬†block support)\nPractice using {sf} functions for geometric confirmation (st_intersects(), st_disjoint()) and geometric measurement (st_area(), st_length(), st_distance())\nDiscuss ideas for final projects",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 4"
    ]
  },
  {
    "objectID": "weeks/week_04.html#prepare",
    "href": "weeks/week_04.html#prepare",
    "title": "Week 4",
    "section": "Prepare",
    "text": "Prepare\n\nRequired readings\n\nEdzer Pebesma ‚Äú3. Manipulating Simple Feature Geometries‚Äù (sf, November 28, 2016), https://r-spatial.github.io/sf/articles/sf3.html.\nCh. 4 Spatial data operations in Robin Lovelace, Jakub Nowosad, and Jannes Muenchow Geocomputation with R, 2nd ed. (CRC Press, 2025), https://r.geocompx.org.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 4"
    ]
  },
  {
    "objectID": "weeks/week_04.html#participate",
    "href": "weeks/week_04.html#participate",
    "title": "Week 4",
    "section": "Participate",
    "text": "Participate\nüñ•Ô∏è Creating and manipulating attributes for spatial data",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 4"
    ]
  },
  {
    "objectID": "weeks/week_04.html#practice",
    "href": "weeks/week_04.html#practice",
    "title": "Week 4",
    "section": "Practice",
    "text": "Practice\nExercise details to be provided.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 4"
    ]
  },
  {
    "objectID": "weeks/week_06.html",
    "href": "weeks/week_06.html",
    "title": "Week 6",
    "section": "",
    "text": "Introduce spatial, geometry, and geometric operations in {sf}\nPractice using geometry operations for buffering or simplifying features\nPractice using geometric operations like union, intersection, and difference\nPractice using related functions including spatial joins and filters",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 6"
    ]
  },
  {
    "objectID": "weeks/week_06.html#overview",
    "href": "weeks/week_06.html#overview",
    "title": "Week 6",
    "section": "",
    "text": "Introduce spatial, geometry, and geometric operations in {sf}\nPractice using geometry operations for buffering or simplifying features\nPractice using geometric operations like union, intersection, and difference\nPractice using related functions including spatial joins and filters",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 6"
    ]
  },
  {
    "objectID": "weeks/week_06.html#prepare",
    "href": "weeks/week_06.html#prepare",
    "title": "Week 6",
    "section": "Prepare",
    "text": "Prepare\n\nRequired reading\n\n\nCh. 20 Joins in Hadley Wickham, Garrett Grolemund, and Mine √áetinkaya-Rundel R for Data Science: Import, Tidy, Transform, Visualize, and Model Data, 2nd edition. (Sebastopol, CA: O‚ÄôReilly Media, 2023), https://r4ds.hadley.nz/.\nCh. 5 Geometry operations in Robin Lovelace, Jakub Nowosad, and Jannes Muenchow Geocomputation with R, 2nd ed. (CRC Press, 2025), https://r.geocompx.org.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 6"
    ]
  },
  {
    "objectID": "weeks/week_06.html#participate",
    "href": "weeks/week_06.html#participate",
    "title": "Week 6",
    "section": "Participate",
    "text": "Participate\nüñ•Ô∏è Getting started with spatial data using sf and the tidyverse",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 6"
    ]
  },
  {
    "objectID": "weeks/week_06.html#practice",
    "href": "weeks/week_06.html#practice",
    "title": "Week 6",
    "section": "Practice",
    "text": "Practice\nDetails on week 6 exercise to be provided.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 6"
    ]
  },
  {
    "objectID": "weeks/week_08.html",
    "href": "weeks/week_08.html",
    "title": "Week 8",
    "section": "",
    "text": "How do you understand a dataset? Descriptive statistics, tables, and interactive tools can be helpful in a preliminary analysis for any dataset.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 8"
    ]
  },
  {
    "objectID": "weeks/week_08.html#overview",
    "href": "weeks/week_08.html#overview",
    "title": "Week 8",
    "section": "",
    "text": "How do you understand a dataset? Descriptive statistics, tables, and interactive tools can be helpful in a preliminary analysis for any dataset.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 8"
    ]
  },
  {
    "objectID": "weeks/week_08.html#prepare",
    "href": "weeks/week_08.html#prepare",
    "title": "Week 8",
    "section": "Prepare",
    "text": "Prepare\n\nRequired readings\n\nCh. 11 Exploratory Data Analysis in Hadley Wickham, Garrett Grolemund, and Mine √áetinkaya-Rundel R for Data Science: Import, Tidy, Transform, Visualize, and Model Data, 2nd edition. (Sebastopol, CA: O‚ÄôReilly Media, 2023), https://r4ds.hadley.nz/.\nNatalia Mazotte ‚ÄúWorking Openly in Data Journalism,‚Äù in The Data Journalism Handbook: Towards A Critical Data Practice, ed. Liliana Bounegru and Jonathan Gray, 2nd ed. (Amsterdam University Press, 2021), 138‚Äì142, doi:10.2307/j.ctv1qr6smr.\n\n\n\nOptional readings\n\nCh. 12 Communication in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 8"
    ]
  },
  {
    "objectID": "weeks/week_11.html",
    "href": "weeks/week_11.html",
    "title": "Week 11",
    "section": "",
    "text": "Reminder! Your project proposal is due by 2024-11-13.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 11"
    ]
  },
  {
    "objectID": "weeks/week_11.html#overview",
    "href": "weeks/week_11.html#overview",
    "title": "Week 11",
    "section": "Overview",
    "text": "Overview\nFile formats for spatial data have developed and changed over time with different file types serving different specialized needs. Spatial data can also be stored and made accessible through web services running on remote servers. It is helpful to learn how to access data in many different forms and places.\n\nKey Objectives\n\nReview uses of common data file formats and web services\nPractice downloading spatial data using {RSocrata}",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 11"
    ]
  },
  {
    "objectID": "weeks/week_11.html#prepare",
    "href": "weeks/week_11.html#prepare",
    "title": "Week 11",
    "section": "Prepare",
    "text": "Prepare\n\nRequired readings\n\nCh. 8 Geographic data I/O in Robin Lovelace, Jakub Nowosad, and Jannes Muenchow Geocomputation with R, 2nd ed. (CRC Press, 2025), https://r.geocompx.org.\nCh. 20 Spreadsheets in Hadley Wickham, Garrett Grolemund, and Mine √áetinkaya-Rundel R for Data Science: Import, Tidy, Transform, Visualize, and Model Data, 2nd edition. (Sebastopol, CA: O‚ÄôReilly Media, 2023), https://r4ds.hadley.nz/.\n\n\n\nOptional readings\n\nCh. 21 Databases in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\nTom MacWright ‚ÄúMore Than You Ever Wanted to Know about GeoJSON‚Äù (Tom MacWright, March 23, 2015), https://macwright.com/2015/03/23/geojson-second-bite.html.\nOpenGeoLabs ‚ÄúSwitch from Shapefile,‚Äù October 5, 2017, http://switchfromshapefile.org/.\nSpatial Data on the Web Working Group ‚ÄúSpatial Data on the Web Best Practices,‚Äù September 28, 2017, https://www.w3.org/TR/sdw-bp/.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 11"
    ]
  },
  {
    "objectID": "weeks/week_11.html#participate",
    "href": "weeks/week_11.html#participate",
    "title": "Week 11",
    "section": "Participate",
    "text": "Participate\nüñ•Ô∏è Reading and writing spatial data",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 11"
    ]
  },
  {
    "objectID": "weeks/week_13.html",
    "href": "weeks/week_13.html",
    "title": "Week 13",
    "section": "",
    "text": "Ch. 5 Market, Place, Interface, Ch. 6 Models of Local Practice, and Ch. 7 Local Ends in Yanni Alexander Loukissas All Data Are Local: Thinking Critically in a Data-Driven Society, 2019, doi:10.7551/mitpress/11543.001.0001.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 13"
    ]
  },
  {
    "objectID": "weeks/week_13.html#prepare",
    "href": "weeks/week_13.html#prepare",
    "title": "Week 13",
    "section": "",
    "text": "Ch. 5 Market, Place, Interface, Ch. 6 Models of Local Practice, and Ch. 7 Local Ends in Yanni Alexander Loukissas All Data Are Local: Thinking Critically in a Data-Driven Society, 2019, doi:10.7551/mitpress/11543.001.0001.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 13"
    ]
  },
  {
    "objectID": "weeks/week_01.html",
    "href": "weeks/week_01.html",
    "title": "Week 1",
    "section": "",
    "text": "Welcome to Building Spatial Datasets!\nOur first session starts with a general introduction to the course and a quick introduction to using R for working with spatial data.\n\n\n\nProvide an overview of the scope and schedule of the course\nIntroduce the concept of reproducibility and key reproducible practices for data management, programming, collaborating with colleagues, organizing projects, and tracking work\nConfigure RStudio and create a RStudio project\nIntroduce the concept of simple features and how the concept is implemented by the {sf} package\nCreate a Quarto document to practice using the {tidyverse} and {sf} package\n\n\n\n\n\nCreating self-contained projects with RStudio\nInstalling packages with install.packages()\nLoading packages with library()\nUsing the ? operator to look up function documentation\nUsing str() or View() to look at an object\nUsing an assignment operator (&lt;- or =) to save an output to a new object\nCreating and editing Quarto documents with RStudio\nUsing sf::st_read() to read a sf object from a file path or URL",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 1"
    ]
  },
  {
    "objectID": "weeks/week_01.html#overview",
    "href": "weeks/week_01.html#overview",
    "title": "Week 1",
    "section": "",
    "text": "Welcome to Building Spatial Datasets!\nOur first session starts with a general introduction to the course and a quick introduction to using R for working with spatial data.\n\n\n\nProvide an overview of the scope and schedule of the course\nIntroduce the concept of reproducibility and key reproducible practices for data management, programming, collaborating with colleagues, organizing projects, and tracking work\nConfigure RStudio and create a RStudio project\nIntroduce the concept of simple features and how the concept is implemented by the {sf} package\nCreate a Quarto document to practice using the {tidyverse} and {sf} package\n\n\n\n\n\nCreating self-contained projects with RStudio\nInstalling packages with install.packages()\nLoading packages with library()\nUsing the ? operator to look up function documentation\nUsing str() or View() to look at an object\nUsing an assignment operator (&lt;- or =) to save an output to a new object\nCreating and editing Quarto documents with RStudio\nUsing sf::st_read() to read a sf object from a file path or URL",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 1"
    ]
  },
  {
    "objectID": "weeks/week_01.html#prepare",
    "href": "weeks/week_01.html#prepare",
    "title": "Week 1",
    "section": "Prepare",
    "text": "Prepare\n\n\n\n\n\n\nGetting ready for the first class\n\n\n\n\n\nInstall R and RStudio on your computer. If you already have R installed, please check to make sure your installation is up to date. For more details, check out the Prerequisites section from R for Data Science (one of a few books we‚Äôll use in our class).\nInstall Git on your computer. The easiest option is to install the GitHub Desktop application (which installs Git at the same time). Alternatively, Happy Git and GitHub for the useR details a few different ways to install Git on Windows, OSX, or Linux.\nSign up for a GitHub user account. I use GitHub to distribute assignments and you will use GitHub to submit assignments. GitHub makes it easier to use Git for version control and is the most popular platform for collaborative development work. People use GitHub for everything from writing R packages to textbooks!\nJoin our course Discord. I use Discord to share class announcements and encourage students to use the Discord to share links and questions throughout the semester.\nComplete the student survey. This is how you share your GitHub username. I‚Äôd also love to know more about what experiences you‚Äôre bringing to the class and what you hope to learn.\nIf you have not done any programming before, I‚Äôd recommend taking some time to review The Very Basics and Packages and Help Pages (section 2 and 3 from Hands-On Programming with R).\n\n\n\n\nRequired readings\n\nCh. 1 Introduction in Robin Lovelace, Jakub Nowosad, and Jannes Muenchow Geocomputation with R, 2nd ed. (CRC Press, 2025), https://r.geocompx.org.\nCh. 2 Geographic data in R in Lovelace, Nowosad, and Muenchow Geocomputation with R.\nChris Brunsdon and Alexis Comber ‚ÄúOpening Practice: Supporting Reproducibility and Critical Spatial Data Science,‚Äù Journal of Geographical Systems 23, no. 4 (October 1, 2021): 477‚Äì496, doi:10.1007/s10109-020-00334-2.\nGreg Wilson et al. ‚ÄúGood Enough Practices in Scientific Computing,‚Äù PLOS Computational Biology 13, no. 6 (June 22, 2017): e1005510, doi:10.1371/journal.pcbi.1005510.\nCh. 3 Workflow: basics in Hadley Wickham, Garrett Grolemund, and Mine √áetinkaya-Rundel R for Data Science: Import, Tidy, Transform, Visualize, and Model Data, 2nd edition. (Sebastopol, CA: O‚ÄôReilly Media, 2023), https://r4ds.hadley.nz/.\n\n\n\nOptional readings\nAdditional readings on working with spatial data in R:\n\nIntroduction to Geospatial Concepts (Data Carpentry)\nIntroduction to R for Geospatial Data (Data Carpentry)\nCh. 3 Geometries in Edzer Pebesma and Roger Bivand Spatial Data Science (CRC Press, 2023), https://r-spatial.org/book/.\n\nAdditional readings on reproducible practices:\n\nJennifer Bryan ‚ÄúHow to Name Files,‚Äù May 14, 2015, https://speakerdeck.com/jennybc/how-to-name-files. (or the more recent recorded talk How to name files talk for NormConf 2022)",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 1"
    ]
  },
  {
    "objectID": "weeks/week_01.html#participate",
    "href": "weeks/week_01.html#participate",
    "title": "Week 1",
    "section": "Participate",
    "text": "Participate\nüñ•Ô∏è Welcome to GES 668\nüñ•Ô∏è Introduction to Spatial Data with R",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 1"
    ]
  },
  {
    "objectID": "weeks/week_01.html#practice",
    "href": "weeks/week_01.html#practice",
    "title": "Week 1",
    "section": "Practice",
    "text": "Practice\nüõ†Ô∏èÔ∏è Exercise 01",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 1"
    ]
  },
  {
    "objectID": "weeks/week_02.html",
    "href": "weeks/week_02.html",
    "title": "Week 2",
    "section": "",
    "text": "This week is all about making plots and maps using the {ggplot} package. Learning to visualize data is a great place for start learning how to exploring data analytically and understanding the value of tidy data when working with R.\n\n\n\nIntroduce the concept of a ‚Äúpipe‚Äù (%&gt;% or |&gt;) and how and when to use it\nIntroduce the concept of the ‚Äúgrammar of graphics‚Äù\nPractice plotting and mapping data with {ggplot2}\nPractice mapping data with {mapview}\n\n\n\n\n\n\nUsing keyboard shortcuts in RStudio\nCreating plots using ggplot(), aes(), and geom_() functions\nCreating static maps using geom_sf() and coord_sf()\nCreating interactive maps using mapview()\nUsing theme_ functions to customize the appearance of a plot\nUsing labs() to add labels to a plot",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 2"
    ]
  },
  {
    "objectID": "weeks/week_02.html#overview",
    "href": "weeks/week_02.html#overview",
    "title": "Week 2",
    "section": "",
    "text": "This week is all about making plots and maps using the {ggplot} package. Learning to visualize data is a great place for start learning how to exploring data analytically and understanding the value of tidy data when working with R.\n\n\n\nIntroduce the concept of a ‚Äúpipe‚Äù (%&gt;% or |&gt;) and how and when to use it\nIntroduce the concept of the ‚Äúgrammar of graphics‚Äù\nPractice plotting and mapping data with {ggplot2}\nPractice mapping data with {mapview}\n\n\n\n\n\n\nUsing keyboard shortcuts in RStudio\nCreating plots using ggplot(), aes(), and geom_() functions\nCreating static maps using geom_sf() and coord_sf()\nCreating interactive maps using mapview()\nUsing theme_ functions to customize the appearance of a plot\nUsing labs() to add labels to a plot",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 2"
    ]
  },
  {
    "objectID": "weeks/week_02.html#prepare",
    "href": "weeks/week_02.html#prepare",
    "title": "Week 2",
    "section": "Prepare",
    "text": "Prepare\n\nRequired readings\n\nCh. 2 Data visualization in Hadley Wickham, Garrett Grolemund, and Mine √áetinkaya-Rundel R for Data Science: Import, Tidy, Transform, Visualize, and Model Data, 2nd edition. (Sebastopol, CA: O‚ÄôReilly Media, 2023), https://r4ds.hadley.nz/.\nCh. 6 Workflow: scripts and projects in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\nCh. 6 Maps in Hadley Wickham, Danielle Navarro, and Thomas Lin Pedersen Ggplot2: Elegant Graphics for Data Analysis, 3rd (WIP)., Use R! (Springer, 2023), https://ggplot2-book.org/index.html.\n\n\n\nOptional readings\n\nElliot Bentley ‚ÄúThe Web as Medium for Data Visualization,‚Äù in The Data Journalism Handbook: Towards A Critical Data Practice, ed. Liliana Bounegru and Jonathan Gray, 2nd ed. (Amsterdam University Press, 2021), 138‚Äì142, doi:10.2307/j.ctv1qr6smr.29.\nggplot2 workshop part 1 and part 2 with Thomas Lin Pedersen, 2020\nCh. 9 Mapping in Robin Lovelace, Jakub Nowosad, and Jannes Muenchow Geocomputation with R, 2nd ed. (CRC Press, 2025), https://r.geocompx.org.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 2"
    ]
  },
  {
    "objectID": "weeks/week_02.html#participate",
    "href": "weeks/week_02.html#participate",
    "title": "Week 2",
    "section": "Participate",
    "text": "Participate\nüñ•Ô∏è Visualizing spatial data with {ggplot2}",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 2"
    ]
  },
  {
    "objectID": "weeks/week_02.html#practice",
    "href": "weeks/week_02.html#practice",
    "title": "Week 2",
    "section": "Practice",
    "text": "Practice\nüõ†Ô∏èÔ∏è Exercise 02",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 2"
    ]
  },
  {
    "objectID": "course-syllabus.html",
    "href": "course-syllabus.html",
    "title": "GES 668: Course Syllabus",
    "section": "",
    "text": "Date üìÖ\n\nAugust 28 ‚Äì December 11, 2024\n\nTime ‚è∞\n\nWednesdays, 6:00‚Äì8:30 PM\n\nLocation üìç\n\nSondheim Hall 001 (Cartography Lab), University of Maryland, Baltimore County, 1099 Hilltop Road, Baltimore, MD 21250\n\nInstructor\n\nEli Pousson | eli.pousson@umbc.edu",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#learning-objectives",
    "href": "course-syllabus.html#learning-objectives",
    "title": "GES 668: Course Syllabus",
    "section": "Learning objectives",
    "text": "Learning objectives\nBy the end of the semester, you will be able to:\n\nread and write spatial data from a wide range of file formats and web services\ntidy, transform, and visualize spatial data to understand the spatial and non-spatial distribution of attributes\nmeasure the spatial attributes or relationships between features and transform feature geometry\nuse Quarto to create presentations and reproducible reports and use GitHub for version control and collaboration.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#communication",
    "href": "course-syllabus.html#communication",
    "title": "GES 668: Course Syllabus",
    "section": "Communication",
    "text": "Communication\nThis class uses a dedicated Discord channel to share announcements and make it easy for students to share and discuss questions during and outside of in-person class sessions.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#accessibility",
    "href": "course-syllabus.html#accessibility",
    "title": "GES 668: Course Syllabus",
    "section": "Accessibility",
    "text": "Accessibility\nAccommodations for students with disabilities are provided for all students with a qualified disability under the Americans with Disabilities Act (ADA & ADAAA) and Section 504 of the Rehabilitation Act who request and are eligible for accommodations. The Office of Student Disability Services (SDS) coordinates accommodations to create equal access for students when barriers to participation exist in University courses, programs, or activities.\nIf you will be using SDS approved accommodations in this class, please let me know so we can make those accommodations. Students should contact the SDS at disAbility@umbc.edu or (410) 455-2459 to request or update accommodations as needed.\n\n\n\n\n\n\nSoftware Accessibility\n\n\n\nR is required software for this course. Please visit RStudio Accessibility Features for information about the program‚Äôs accessibility.\nUsing GitHub is also required. Find more information on managing accessibility settings for the GitHub website.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#respect",
    "href": "course-syllabus.html#respect",
    "title": "GES 668: Course Syllabus",
    "section": "Respect",
    "text": "Respect\nStudents in this class are encouraged to speak up and participate during class sessions. Because the class will include a diversity of individual beliefs, backgrounds, and experiences, every person participating in this class must show respect for every other participant both in person and when communicating online.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#readings",
    "href": "course-syllabus.html#readings",
    "title": "GES 668: Course Syllabus",
    "section": "Readings",
    "text": "Readings\nMost of the reading for this class will come from these three books:\n\nR for Data Science by Hadley Wickham, Mine √áetinkaya-Rundel, and Garret Grolemund\nGeocomputation with R by Robin Lovelace, Jakub Nowosad, and Jannes Muenchow\nAll Data Are Local: Thinking Critically in a Data-Driven Society by Yanni Alexander Loukissas\n\nAll three books are available for free online or available for purchase. Additional readings are listed on the page for each week‚Äôs session.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#assessment",
    "href": "course-syllabus.html#assessment",
    "title": "GES 668: Course Syllabus",
    "section": "Assessment",
    "text": "Assessment\nAssessment for this course includes four parts:\n\nweekly check-ins,\npractice exercises,\nin-class activities,\nand a final project\n\n\nWeekly check-ins\nEach week students are expected to submit a brief written check-in based on the assigned readings and exercises. Your check-in should answer three questions:\n\nWhat did you find most interesting this week?\nWhat did you find most difficult this week?\nWhat is one question you have about the readings or exercise?\n\nYour check-in response should be submitted via Google Forms before the start of each class session. You are also encouraged but not required to post your question to the class Discord where other students are able to reply. Partial credit will be awarded for incomplete check-in responses.\nStudents are expected to submit at least 10 weekly check-in responses during the term so may skip up to 5 check-in responses without penalty. Weekly check-in assignments must be submitted before 11:59 am on the day before each class session. No late responses will be accepted for the weekly check-in.\n\n\nPractice exercises\nThese exercises give you an opportunity to practice the application of concepts and code introduced in the readings and lectures. You may discuss lab assignments with other students; however, labs should be completed and submitted individually.\nExercises are graded based on completion‚Äîso an effort to attempt all parts of the exercise will be awarded full credit. Some assignments may also include a bonus objective. An assignment with less than 80% of questions attempted will be considered incomplete. Incomplete assignments can be revised and resubmitted for full credit within a week of a student receiving my feedback.\n\n3: Assignment is submitted, complete, and includes a complete bonus objective\n2: Assignment is submitted and complete\n1: Assignment is submitted but incomplete\n0: Assignment not submitted\n\nStudents are expected to submit at least 10 exercises during the term so may skip up to 2 exercises without penalty. Practice exercises are due the Monday before each class session. For example, if an exercise is introduced on Wednesday, August 30 and should be completed by 11:59 PM on Monday, September 4.\n\n\nIn-class activities\nClass sessions may include short quizzes or collaborative learning activities. These activities, including quizzes, are graded based on completion‚Äînot on correct or incorrect answers. If you are unable to participate in an in-class activity, bonus act\n\n\nFinal project\nAll students will participate in a final project that can be completed independently or in collaboration with other students in the class.\nThe final project is an opportunity for students to focus on the ‚Äúmodels of local practice‚Äù described in All Data Are Local.\nStudents are encouraged to connect their project to the Baltimore area (or some place within the Baltimore area).\nTypically, the final project should fit into one of two categories:\n\nA data visualization or interactive that offers a interpretive or descriptive data to understand the data\nAn exploratory data analysis that asks questions about a dataset\n\nLearn more about the final project.\n\n\nKey dates and deliverables\nThe assessment of the project is based on three pieces:\n\nA project proposal (1-2 pages in length) must be submitted by November 13 (updated).\nAn project presentation delivered in-class on December 6 - tentative.\nA project repository completed by December 14 - tentative.\n\nEvaluation of the final project will be based on both self-assessment by the individual student or group and an instructor assessment. The instructor can also offer bonus points in recognition of exceptional work or, if necessary, adjust points awarded through the student self-assessment.\n\n\nGrading\nAssessment in this course is intended to help you focus on completing assignments and keeping up with the material‚Äînot getting everything perfect along the way.\nYou can earn up to a total of 100 points in this class by completing in-class activities (15 point), submitting at least 10 weekly check-ins (15 points), completing practice exercises (20 points), and completing all four parts of the final project (50 points).\n\n\n\nAssessment\nPoints\n\n\n\n\nIn-class activities\n15\n\n\nWeekly check-in\n15\n\n\nPractice exercises\n20\n\n\nFinal project\n\n\n\nProject proposal\n5\n\n\nPresentation\n10\n\n\nProject repository\n25\n\n\nProject self-assessment\n10",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#policies-resources",
    "href": "course-syllabus.html#policies-resources",
    "title": "GES 668: Course Syllabus",
    "section": "Policies & Resources",
    "text": "Policies & Resources\n\nSexual Assault, Sexual Harassment, and Gender Based Violence and Discrimination\nUMBC Policy and Federal law (Title IX) prohibit discrimination and harassment on the basis of sex, sexual orientation, and gender identity in University programs and activities. Any student who is impacted by sexual harassment, sexual assault, domestic violence, dating violence, stalking, sexual exploitation, gender discrimination, pregnancy discrimination, gender-based harassment or retaliation should contact the University‚Äôs Title IX Coordinator to make a report and/or access support and resources:\n\nJackie Moran, Title IX Coordinator and Interim Director\n410-455-1717, jmoran5@umbc.edu\n\nYou can access support and resources even if you do not want to take any further action. You will not be forced to file a formal complaint or police report. Please be aware that the University may take action on its own if essential to protect the safety of the community.\nIf you are interested in or thinking about making a report, please use the Online Reporting/Referral Form. Please note that, if you report anonymously, the University‚Äôs ability to respond will be limited.\n\n\n\n\n\n\nFaculty are Responsible Employees with Mandatory Reporting Obligations\n\n\n\nAll faculty members are considered Responsible Employees, per UMBC‚Äôs Policy on Sexual Misconduct, Sexual Harassment, and Gender Discrimination. Faculty are therefore required to report any/ all available information regarding conduct falling under the Policy and violations of the Policy to the Title IX Coordinator, even if a student discloses an experience that occurred before attending UMBC and/or an incident that only involves people not affiliated with UMBC. Reports are required regardless of the amount of detail provided and even in instances where support has already been offered or received.\nWhile faculty members want encourage you to share information related to your life experiences through discussion and written work, students should understand that faculty are required to report past and present sexual assault, domestic and interpersonal violence, stalking, and gender discrimination that is shared with them to the Title IX Coordinator so that the University can inform students of their rights, resources and support. While you are encouraged to do so, you are not obligated to respond to outreach conducted as a result of a report to the Title IX Coordinator.\nIf you need to speak with someone in confidence, who does not have an obligation to report to the Title IX Coordinator, UMBC has a number of Confidential Resources available to support you:\n\nRetriever Integrated Health¬†(Main Campus): 410-455-2472 [Monday ‚Äì Friday; 8:30 a.m. ‚Äì 5 p.m.] / After-Hours Support 410-455-3230\nCenter for Counseling and Consultation (Shady Grove Campus): 301-738-6273 (Messages checked hourly)¬† Online Appointment Request Form\nPastoral Counseling via Interfaith Center: 410-455-3657; interfaith@umbc.edu [7 days a week; Fall and Spring 7 a.m. ‚Äì 11 p.m.; Summer and Winter 8 a.m. ‚Äì 8 p.m.]\n\nOther Resources:\n\nWomen‚Äôs Center (for students of all genders): 410-455-2714; womenscenter@umbc.edu. [Monday ‚Äì Thursday 10:00am-5:30pm and Friday 10:00am-4pm]\nShady Grove Student Resources,Maryland Resources,National Resources.\n\n\n\n\n\n\n\n\n\nChild Abuse and Neglect\n\n\n\nPlease note that Maryland law and UMBC policy require that faculty report all disclosures or suspicions of child abuse or neglect to the Department of Social Services and/or the police even if the person who experienced the abuse or neglect is now over 18.\n\n\n\n\n\n\n\n\nParenting and Pregnant Students\n\n\n\nUMBC‚Äôs Policy on Sexual Misconduct, Sexual Harassment and Gender Discrimination expressly prohibits all forms of Discrimination and Harassment on the basis of sex, including pregnancy.Resources for pregnant, parenting and breastfeeding students are available through the University‚Äôs Office of Equity and Civil Rights.¬† Pregnant and parenting students are encouraged to contact the Title IX Coordinator to discuss plans and ensure ongoing access to their academic program with respect to a leave of absence or return following leave related to pregnancy, delivery, adoption, breastfeeding and/or the early months of parenting.\nPregnant students and students in the early months of parenting may be entitled to accommodations under Title IX through the Office of Equity and Civil Rights.\nIn addition, students who are pregnant and have an impairment related to their pregnancy that qualifies as disability under the ADA may be entitled to accommodations through the Student Disability Service Office.\n\n\n\n\nReligious Observances & Accommodations\nUMBC Policy provides that students should not be penalized because of observances of their religious beliefs, and that students shall be given an opportunity, whenever feasible, to make up within a reasonable time any academic assignment that is missed due to individual participation in religious observances. It is the responsibility of the student to inform the instructor of any intended absences or requested modifications for religious observances in advance, and as early as possible.\nFor questions or guidance regarding religious observance accommodations, please contact the Office of Equity and Civil Rights at ecr@umbc.edu.\n\n\nPlagiarism\nCopying or using another‚Äôs work in written or oral form‚Äîpartial or complete‚Äîwithout giving credit to the other person is a serious academic offense and is taken very seriously in this class, by the Department and by the University of Maryland, Baltimore County. UMBC specifically defines plagiarism as anyone who ‚Äúknowingly, or by carelessness or negligence, representing as one‚Äôs own in any academic exercise the words, ideas, works of art or computer-generated information and images of someone else.‚Äù\nAny student who plagiarizes will be referred to the Department Chair and will be subject to the policies of the university. In general, the consequences of plagiarism include failing an assignment, receiving a lower course grade, and even failing a course. Examples of plagiarism include:\n\nSubmit someone else‚Äôs work as your own.\nBuy a paper from a paper-mill, website or other source.\nCopy sentences, phrases, paragraphs, or ideas from someone else‚Äôs work, published or unpublished, without giving the original author credit.\nReplace select words from a passage without giving the original author credit.\nCopy any type of graphics, tables, graphs, maps, or charts from someone else‚Äôs work without giving the original author credit.\nPiece together phrases, ideas, and sentences from a variety of sources to write an essay.\nBuild on someone else‚Äôs idea or phrase without giving the original author credit.\n\nDetails about avoiding plagiarism, examples, and disciplinary policies should be reviewed to gain a clear understanding prior to working on an assignment or exam.\n\n\nHate, Bias, Discrimination and Harassment\nUMBC values safety, cultural and ethnic diversity, social responsibility, lifelong learning, equity, and civic engagement.\nConsistent with these principles, UMBC Policy prohibits discrimination and harassment in its educational programs and activities or with respect to employment terms and conditions based on race, creed, color, religion, sex, gender, pregnancy, ancestry, age, gender identity or expression, national origin, veterans status, marital status, sexual orientation, physical or mental disability, or genetic information.\nStudents (and faculty and staff) who experience discrimination, harassment, hate or bias or who have such matters reported to them should use theonline reporting/referral form to report discrimination, hate or bias incidents. You may report incidents that happen to you anonymously. Please note that, if you report anonymously, the University‚Äôs ability to respond will be limited.\n\n\nCOVID-19 Safety Protocols\nUMBC encourages all members of our community to take personal safety measures. This includes remaining up to date on your vaccinations and following CDC guidelines if you are recovering from COVID-19. See the Retriever Ready: COVID-19 Response page for UMBC‚Äôs curent COVID-19 policies and answers to frequently asked questions.\nFor the health of all in our community, please remember to Stay Home if You Are Sick.\n\n\nRetriever Essentials\nRetriever Essentials is a faculty, staff, and student-led partnership that promotes food access in the UMBC community. Retriever Essentials offers free groceries, toiletries, baby items, and meal swipes, and have opportunities to engage and volunteer:\n\nPick up items from our free store The Essential Space located in RAC 235¬†\nReceive fresh food every Thursday 2:15-2:45pm @ the Library (email or see IG for exact location)\nStop by one of our Food Zones to pick up a pre-assembled bag of non-perishable food items and personal care products\nPick up snacks and food from our Free Corner Stores at the Campus Police Station or Library Atrium\nEmail us at retrieveressentials@umbc.edu if you need free meal swipes\nTo donate food, see instructions here!\n\nEmail Retriever Essentials if you would like to join our team or volunteer.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#notes",
    "href": "course-syllabus.html#notes",
    "title": "GES 668: Course Syllabus",
    "section": "Notes",
    "text": "Notes\n\nThe respect statement is adapted from California State University Chico‚Äôs Office of Diversity and Inclusion.\nThis course website is based in part on the website for STA 210 at Duke University. Check out the repository on GitHub for more information about the site.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-1",
    "href": "course-syllabus.html#week-1",
    "title": "GES 668: Course Syllabus",
    "section": "Week 1",
    "text": "Week 1\n\nRequired readings\n\nCh. 1 Introduction in Robin Lovelace, Jakub Nowosad, and Jannes Muenchow Geocomputation with R, 2nd ed. (CRC Press, 2025), https://r.geocompx.org.\nCh. 2 Geographic data in R in Lovelace, Nowosad, and Muenchow Geocomputation with R.\nChris Brunsdon and Alexis Comber ‚ÄúOpening Practice: Supporting Reproducibility and Critical Spatial Data Science,‚Äù Journal of Geographical Systems 23, no. 4 (October 1, 2021): 477‚Äì496, doi:10.1007/s10109-020-00334-2.\nGreg Wilson et al. ‚ÄúGood Enough Practices in Scientific Computing,‚Äù PLOS Computational Biology 13, no. 6 (June 22, 2017): e1005510, doi:10.1371/journal.pcbi.1005510.\nCh. 3 Workflow: basics in Hadley Wickham, Garrett Grolemund, and Mine √áetinkaya-Rundel R for Data Science: Import, Tidy, Transform, Visualize, and Model Data, 2nd edition. (Sebastopol, CA: O‚ÄôReilly Media, 2023), https://r4ds.hadley.nz/.\n\n\n\nOptional readings\nAdditional readings on working with spatial data in R:\n\nIntroduction to Geospatial Concepts (Data Carpentry)\nIntroduction to R for Geospatial Data (Data Carpentry)\nCh. 3 Geometries in Edzer Pebesma and Roger Bivand Spatial Data Science (CRC Press, 2023), https://r-spatial.org/book/.\n\nAdditional readings on reproducible practices:\n\nJennifer Bryan ‚ÄúHow to Name Files,‚Äù May 14, 2015, https://speakerdeck.com/jennybc/how-to-name-files. (or the more recent recorded talk How to name files talk for NormConf 2022)",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-2",
    "href": "course-syllabus.html#week-2",
    "title": "GES 668: Course Syllabus",
    "section": "Week 2",
    "text": "Week 2\n\nRequired readings\n\nCh. 2 Data visualization in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\nCh. 6 Maps in Hadley Wickham, Danielle Navarro, and Thomas Lin Pedersen Ggplot2: Elegant Graphics for Data Analysis, 3rd (WIP)., Use R! (Springer, 2023), https://ggplot2-book.org/index.html.\nCh. 6 Workflow: scripts and projects in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\n\n\n\nOptional readings\nAdditional resources on data visualization and mapping with R:\n\nggplot2 workshop part 1 and part 2 with Thomas Lin Pedersen, 2020\nCh. 9 Mapping in Lovelace, Nowosad, and Muenchow Geocomputation with R.\n\nAdditional reading on data visualization:\n\nElliot Bentley ‚ÄúThe Web as Medium for Data Visualization,‚Äù in The Data Journalism Handbook: Towards A Critical Data Practice, ed. Liliana Bounegru and Jonathan Gray, 2nd ed. (Amsterdam University Press, 2021), 138‚Äì142, doi:10.2307/j.ctv1qr6smr.29.\n\nAdditional resources on working with projects:\n\nR-Ladies STL: Project Oriented Workflows with Shannon Pileggi (September 11, 2023) - Slides",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-3",
    "href": "course-syllabus.html#week-3",
    "title": "GES 668: Course Syllabus",
    "section": "Week 3",
    "text": "Week 3\n\nRequired readings\n\nCh. 3 Data Structure in Crystal Lewis Data Management in Large-Scale Education Research, 1st ed. (Chapman & Hall, 2024), https://datamgmtinedresearch.com/.\nCh. 5 Data transformation in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\nCh. 3 Attribute data operations in Lovelace, Nowosad, and Muenchow Geocomputation with R.\n\n\n\nOptional readings\n\nCh. 5 Attributes and Support in Pebesma and Bivand Spatial Data Science.\ndplyr base R vignette for the {dplyr} package comparing dplyr functions to their base R equivalents.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-4",
    "href": "course-syllabus.html#week-4",
    "title": "GES 668: Course Syllabus",
    "section": "Week 4",
    "text": "Week 4\n\nRequired readings\n\nEdzer Pebesma ‚Äú3. Manipulating Simple Feature Geometries‚Äù (sf, November 28, 2016), https://r-spatial.github.io/sf/articles/sf3.html.\nCh. 4 Spatial data operations in Lovelace, Nowosad, and Muenchow Geocomputation with R.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-5",
    "href": "course-syllabus.html#week-5",
    "title": "GES 668: Course Syllabus",
    "section": "Week 5",
    "text": "Week 5\n\nRequired readings\n\nCh. 6 Data tidying in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\nCh. 14 Data cleaning in Lewis Data Management in Large-Scale Education Research.\nCh. 1 Local Origins, Ch. 2 A Place for Plant Data, and Ch. 3 Collecting Infrastructures in Yanni Alexander Loukissas All Data Are Local: Thinking Critically in a Data-Driven Society, 2019, doi:10.7551/mitpress/11543.001.0001.\n\n\n\nOptional readings\n\nCatherine D‚ÄôIgnazio and Lauren Klein ‚ÄúWho Collects the Data? A Tale of Three Maps,‚Äù MIT Case Studies in Social and Ethical Responsibilities of Computing (February 5, 2021), doi:10.21428/2c646de5.fc6a97cc.\nKarl W. Broman and Kara H. Woo ‚ÄúData Organization in Spreadsheets,‚Äù The American Statistician 72, no. 1 (January 2, 2018): 2‚Äì10, doi:10.1080/00031305.2017.1375989.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-6",
    "href": "course-syllabus.html#week-6",
    "title": "GES 668: Course Syllabus",
    "section": "Week 6",
    "text": "Week 6\n\nRequired reading\n\n\nCh. 20 Joins in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\nCh. 5 Geometry operations in Lovelace, Nowosad, and Muenchow Geocomputation with R.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-7",
    "href": "course-syllabus.html#week-7",
    "title": "GES 668: Course Syllabus",
    "section": "Week 7",
    "text": "Week 7\n\nRequired readings\n\nCh. 26 Functions in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\nCh. 11 Scripts, algorithms and functions in Lovelace, Nowosad, and Muenchow Geocomputation with R.\nCh. 29 Quarto in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\n\n\n\nOptional readings\n\nSam Leon ‚ÄúAccounting for Methods: Spreadsheets, Scripts and Programming Notebooks,‚Äù in The Data Journalism Handbook: Towards A Critical Data Practice, ed. Liliana Bounegru and Jonathan Gray, 2nd ed. (Amsterdam University Press, 2021), 128‚Äì137, doi:10.2307/j.ctv1qr6smr.\nWelcome to Quarto Workshop! (Posit PBC, 2022), https://www.youtube.com/watch?v=yvi5uXQMvu4.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-8",
    "href": "course-syllabus.html#week-8",
    "title": "GES 668: Course Syllabus",
    "section": "Week 8",
    "text": "Week 8\n\nRequired readings\n\nCh. 11 Exploratory Data Analysis in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\nNatalia Mazotte ‚ÄúWorking Openly in Data Journalism,‚Äù in The Data Journalism Handbook: Towards A Critical Data Practice, ed. Liliana Bounegru and Jonathan Gray, 2nd ed. (Amsterdam University Press, 2021), 138‚Äì142, doi:10.2307/j.ctv1qr6smr.\n\n\n\nOptional readings\n\nCh. 12 Communication in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-9",
    "href": "course-syllabus.html#week-9",
    "title": "GES 668: Course Syllabus",
    "section": "Week 9",
    "text": "Week 9\n\nRequired readings\n\nMark Padgham and Robin Lovelace ‚Äú1. Osmdata‚Äù (osmdata, August 15, 2023), https://docs.ropensci.org/osmdata/articles/osmdata.html.\nAlan McConchie ‚ÄúOpenStreetMap Pasts, OpenStreetMap Futures,‚Äù July 27, 2016, https://www.youtube.com/watch?v=KNTSZGnQVRw.\n\n\n\nOptional readings\n\nGeoff Boeing ‚ÄúThe Right Tools for the Job: The Case for Spatial Science Tool-Building,‚Äù Transactions in GIS 24, no. 5 (October 2020): 1299‚Äì1314, doi:10.1111/tgis.12678.\nDani Arribas-Bel and Jon Reades ‚ÄúGeography and Computers: Past, Present, and Future,‚Äù Geography Compass 12, no. 10 (2018): e12403, doi:10.1111/gec3.12403.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-10",
    "href": "course-syllabus.html#week-10",
    "title": "GES 668: Course Syllabus",
    "section": "Week 10",
    "text": "Week 10\n\nRequired readings\n\nCh. 5 Census Geographic Data and Applications in R in Kyle E. Walker Analyzing US Census Data: Methods, Maps, and Models in R (CRC Press, 2022), https://walker-data.com/census-r/census-geographic-data-and-applications-in-r.html.\nSpatial Analysis of US Census Data in R (Social Science Data Analysis Network, 2021), https://www.youtube.com/watch?v=GqC1HjAKui4.\n\n\n\nOptional readings\n\nDan Bouk ‚ÄúHow Does Queerness Fit Into the US Census?‚Äù Wired, August 23, 2022, https://www.wired.com/story/us-census-queerness-data/.\nAccessing and Analyzing U.S. Census Data in R (Social Science Data Analysis Network, 2021), https://www.youtube.com/watch?v=PnFJfuJ83NI.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-11",
    "href": "course-syllabus.html#week-11",
    "title": "GES 668: Course Syllabus",
    "section": "Week 11",
    "text": "Week 11\n\nRequired readings\n\nCh. 8 Geographic data I/O in Lovelace, Nowosad, and Muenchow Geocomputation with R.\nCh. 20 Spreadsheets in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\n\n\n\nOptional readings\n\nCh. 21 Databases in Wickham, Grolemund, and √áetinkaya-Rundel R for Data Science.\nTom MacWright ‚ÄúMore Than You Ever Wanted to Know about GeoJSON‚Äù (Tom MacWright, March 23, 2015), https://macwright.com/2015/03/23/geojson-second-bite.html.\nOpenGeoLabs ‚ÄúSwitch from Shapefile,‚Äù October 5, 2017, http://switchfromshapefile.org/.\nSpatial Data on the Web Working Group ‚ÄúSpatial Data on the Web Best Practices,‚Äù September 28, 2017, https://www.w3.org/TR/sdw-bp/.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-12",
    "href": "course-syllabus.html#week-12",
    "title": "GES 668: Course Syllabus",
    "section": "Week 12",
    "text": "Week 12\n\nRequired readings\n\nCh. 8 Documentation in Lewis Data Management in Large-Scale Education Research.\nCh. 7 Show Your Work in Catherine D‚ÄôIgnazio and Lauren F. Klein Data Feminism (The MIT Press, 2020), https://data-feminism.mitpress.mit.edu/.\nShannon Pileggi ‚ÄúThe Case for Variable Labels in R‚Äù (Piping Hot Data, September 13, 2022), https://www.pipinghotdata.com/posts/2022-09-13-the-case-for-variable-labels-in-r/.\n\n\n\nOptional readngs\n\n‚ÄúGuide to Writing \"Readme\" Style Metadata‚Äù (Research Data Management Service Group), accessed August 27, 2022, https://data.research.cornell.edu/content/readme.\nEmily Riederer ‚ÄúColumn Names as Contracts‚Äù (Emily Riederer, September 6, 2020), https://emilyriederer.netlify.app/post/column-name-contracts/.\n‚ÄúData-Primers‚Äù (DataCurationNetwork, 2019), https://github.com/DataCurationNetwork/data-primers/tree/c6ec438e76fea49eaaf2806bc79ec2c8c12de7f3.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-13",
    "href": "course-syllabus.html#week-13",
    "title": "GES 668: Course Syllabus",
    "section": "Week 13",
    "text": "Week 13\n\nRequired readings\n\nCh. 5 Market, Place, Interface, Ch. 6 Models of Local Practice, and Ch. 7 Local Ends in Loukissas All Data Are Local.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-14",
    "href": "course-syllabus.html#week-14",
    "title": "GES 668: Course Syllabus",
    "section": "Week 14",
    "text": "Week 14\nNo readings for this week. Enjoy the holiday.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#week-15",
    "href": "course-syllabus.html#week-15",
    "title": "GES 668: Course Syllabus",
    "section": "Week 15",
    "text": "Week 15\nNo readings for this week.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "weeks/week_10.html",
    "href": "weeks/week_10.html",
    "title": "Week 10",
    "section": "",
    "text": "Ch. 5 Census Geographic Data and Applications in R in Kyle E. Walker Analyzing US Census Data: Methods, Maps, and Models in R (CRC Press, 2022), https://walker-data.com/census-r/census-geographic-data-and-applications-in-r.html.\nSpatial Analysis of US Census Data in R (Social Science Data Analysis Network, 2021), https://www.youtube.com/watch?v=GqC1HjAKui4.\n\n\n\n\n\nDan Bouk ‚ÄúHow Does Queerness Fit Into the US Census?‚Äù Wired, August 23, 2022, https://www.wired.com/story/us-census-queerness-data/.\nAccessing and Analyzing U.S. Census Data in R (Social Science Data Analysis Network, 2021), https://www.youtube.com/watch?v=PnFJfuJ83NI.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 10"
    ]
  },
  {
    "objectID": "weeks/week_10.html#prepare",
    "href": "weeks/week_10.html#prepare",
    "title": "Week 10",
    "section": "",
    "text": "Ch. 5 Census Geographic Data and Applications in R in Kyle E. Walker Analyzing US Census Data: Methods, Maps, and Models in R (CRC Press, 2022), https://walker-data.com/census-r/census-geographic-data-and-applications-in-r.html.\nSpatial Analysis of US Census Data in R (Social Science Data Analysis Network, 2021), https://www.youtube.com/watch?v=GqC1HjAKui4.\n\n\n\n\n\nDan Bouk ‚ÄúHow Does Queerness Fit Into the US Census?‚Äù Wired, August 23, 2022, https://www.wired.com/story/us-census-queerness-data/.\nAccessing and Analyzing U.S. Census Data in R (Social Science Data Analysis Network, 2021), https://www.youtube.com/watch?v=PnFJfuJ83NI.",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 10"
    ]
  },
  {
    "objectID": "weeks/week_10.html#participate",
    "href": "weeks/week_10.html#participate",
    "title": "Week 10",
    "section": "Participate",
    "text": "Participate\nDuring class, we will review this sample code as an exercise.\n\n\nPractice exercise\n# Load libraries\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(osmdata)\nlibrary(tidyverse)\n\n# Set option for tigris\noptions(tigris_use_cache = TRUE)\n\n# Get American Community Survey tract level data on population by race/ethnicity\n# Make sure to include a summary variable with total population\nbaltcity_pop &lt;- get_acs(\n  geography = ____,\n  variables = ____,\n  summary_var = ____,\n  cache_table = TRUE,\n  year = 2021,\n  state = \"MD\",\n  county = \"Baltimore city\",\n  geometry = TRUE,\n  survey = \"acs5\"\n)\n\n# If you are unsure what variables to use, use the `load_variables()` function\n# to get a data frame with all of the variables\nacs_vars &lt;- load_variables(year = ____, dataset = ____)\n\n# Use `tidycensus::as_dot_density()` to convert the geometry of your data into a\n# dot density format and scale the values based on the values_per_dot parameter\nbaltcity_pop_dots &lt;- as_dot_density(\n  input_data = ____,\n  value = ____,\n  values_per_dot = 100,\n  group = \"variable\"\n)\n\n# Use tigris to get a basemap layer with the tract geometry\nbaltcity_tracts &lt;- tracts(\n  state = ____,\n  county = ____\n)\n\n# Use geom_sf to make a map using the `baltimore_dots` data that is color-coded\n# by race/ethnicity\nggplot() +\n  geom_sf(data = ____) +\n  geom_sf(data = ____, aes(color = ____)) +\n  theme_void()\n\n# Now try to improve the map:\n#\n# - Change the size and transparency of the dots to address over-plotting\n# - Change the color scale to a color-blind friendly palette (I recommend `scale_color_brewer()`)\n# - Change the values of the attribute mapped to color to reflect the categories used by the U.S. Census Bureau\n\nggplot() +\n  geom_sf(data = ____) +\n  geom_sf(data = ____, aes(color = ____)) +\n  theme_void()\n\n\nSolutions for this sample code are now available here.\n\n\nPractice solutions\n# Load libraries\n\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(osmdata)\nlibrary(tidyverse)\n\n# Set option for tigris\n\noptions(tigris_use_cache = TRUE)\n\n# Get American Community Survey data on population by race/ethnicity\n\nbaltcity_pop &lt;- get_acs(\n  geography = \"tract\",\n  variables = c(\"B03002_003\", \"B03002_004\", \"B03002_012\"),\n  summary_var = \"B03002_001\",\n  cache_table = TRUE,\n  year = 2021,\n  state = \"MD\",\n  county = \"Baltimore city\",\n  geometry = TRUE,\n  survey = \"acs5\"\n)\n\n# If you are unsure what variables to use, use the `load_variables()` function\n# to get a data frame with all of the variables\n\nacs_vars &lt;- load_variables(year = 2021, dataset = \"acs5\")\n\n# You can visualize the estimate using fill and split variables into different\n# panels of the plot\n\nggplot() +\n  geom_sf(data = baltcity_pop, aes(fill = estimate)) +\n  facet_wrap(~variable) +\n  theme_void()\n\n\n# Use `tidycensus::as_dot_density()` to convert the geometry of your data into a\n# dot density format and scale the values based on the values_per_dot parameter\n\nbaltcity_pop_dots &lt;- as_dot_density(\n  input_data = baltcity_pop,\n  value = \"estimate\",\n  values_per_dot = 100,\n  group = \"variable\"\n)\n\nbaltcity_tracts &lt;- tracts(\n  state = \"MD\",\n  county = \"Baltimore city\"\n)\n\n# Use geom_sf to make a map using the `baltimore_dots` data that is color-coded\n# by race/ethnicity\n\nggplot() +\n  geom_sf(data = baltcity_tracts) +\n  geom_sf(\n    data = baltcity_pop_dots,\n    aes(color = variable)\n  ) +\n  theme_void()\n\n# Now try to improve the map:\n#\n# - Change the size and transparency of the dots to address over-plotting\n# - Change the color scale to a color-blind friendly palette (I recommend `scale_color_brewer()`)\n# - Change the values of the attribute mapped to color to reflect the categories used by the U.S. Census Bureau\n\nggplot() +\n  geom_sf(data = baltcity_tracts, fill = NA) +\n  geom_sf(\n    data = baltcity_pop_dots,\n    aes(color = variable),\n    alpha = 0.5,\n    size = 0.35\n  ) +\n  scale_color_brewer(palette = \"Accent\", direction = -1) +\n  theme_void() +\n  theme(\n    legend.position = \"bottom\"\n  ) +\n  labs(\n    color = \"Race/ethnicity\"\n  )",
    "crumbs": [
      "Weeks üóìÔ∏è",
      "Week 10"
    ]
  },
  {
    "objectID": "slides/exploratory-analysis.html#why-open-your-work",
    "href": "slides/exploratory-analysis.html#why-open-your-work",
    "title": "Exploratory data analysis",
    "section": "1.1 Why open your work?",
    "text": "1.1 Why open your work?\n\nImprove the quality of your work: ‚Äúbe more organized, more accurate, less likely to miss errors‚Äù\nBroaden reach and impact\nFoster data literacy: ‚Äúothers can follow and learn‚Äîwhich can enrich and diversify data ecosystems, practices, and communities‚Äù"
  },
  {
    "objectID": "slides/exploratory-analysis.html#how-to-open-your-work",
    "href": "slides/exploratory-analysis.html#how-to-open-your-work",
    "title": "Exploratory data analysis",
    "section": "1.2 How to open your work?",
    "text": "1.2 How to open your work?\nConsider:\n\nwhen is transparency valuable?\nwhen is transparency a lower priority?\nwhen is transparency potentially harmful?"
  },
  {
    "objectID": "slides/exploratory-analysis.html#what-do-you-do-when-you-do-exploratory-data-analysis",
    "href": "slides/exploratory-analysis.html#what-do-you-do-when-you-do-exploratory-data-analysis",
    "title": "Exploratory data analysis",
    "section": "2.1 What do you do when you do exploratory data analysis?",
    "text": "2.1 What do you do when you do exploratory data analysis?\n\nGenerate questions about your data.\nSearch for answers by visualizing, transforming, and modelling your data.\nUse what you learn to refine your questions and/or generate new questions.\n\n‚ÄúMore than anything, EDA is a state of mind.‚Äù"
  },
  {
    "objectID": "slides/exploratory-analysis.html#use-questions-as-tools-to-guide-your-investigation",
    "href": "slides/exploratory-analysis.html#use-questions-as-tools-to-guide-your-investigation",
    "title": "Exploratory data analysis",
    "section": "2.2 Use questions as tools to guide your investigation",
    "text": "2.2 Use questions as tools to guide your investigation\nWhen you ask a question‚Ä¶\n\nthe question focuses your attention on a specific part of your dataset\nthis helps you decide which graphs, models, or transformations to make.\nthe¬†key to asking¬†quality¬†questions is to generate a large¬†quantity¬†of questions\n\n\n\nYour goal during EDA is to develop an understanding of your data. The easiest way to do this is to use questions as tools to guide your investigation. When you ask a question, the question focuses your attention on a specific part of your dataset and helps you decide which graphs, models, or transformations to make."
  },
  {
    "objectID": "slides/exploratory-analysis.html#two-useful-questions-to-start",
    "href": "slides/exploratory-analysis.html#two-useful-questions-to-start",
    "title": "Exploratory data analysis",
    "section": "2.3 Two useful questions to start",
    "text": "2.3 Two useful questions to start\n\nWhat type of variation occurs within my variables?\nWhat type of covariation occurs between my variables?"
  },
  {
    "objectID": "slides/exploratory-analysis.html#what-are-you-exploring-when-you-do-exploratory-data-analysis",
    "href": "slides/exploratory-analysis.html#what-are-you-exploring-when-you-do-exploratory-data-analysis",
    "title": "Exploratory data analysis",
    "section": "2.4 What are you ‚Äúexploring‚Äù when you do exploratory data analysis?",
    "text": "2.4 What are you ‚Äúexploring‚Äù when you do exploratory data analysis?"
  },
  {
    "objectID": "slides/exploratory-analysis.html#tabular-summaries",
    "href": "slides/exploratory-analysis.html#tabular-summaries",
    "title": "Exploratory data analysis",
    "section": "2.5 Tabular summaries",
    "text": "2.5 Tabular summaries\n\njanitor::tabyl(): Generate a frequency table (1-, 2-, or 3-way)\ngt: Easily generate information-rich, publication-quality tables from R\ngtsummary: Presentation-Ready Data Summary and Analytic Result Tables"
  },
  {
    "objectID": "slides/exploratory-analysis.html#automated-summaries",
    "href": "slides/exploratory-analysis.html#automated-summaries",
    "title": "Exploratory data analysis",
    "section": "2.6 Automated summaries",
    "text": "2.6 Automated summaries\n\nDataExplorer: Automate Data Exploration and Treatment\nvisdat: Preliminary Exploratory Visualisation of Data\nesquisse: RStudio add-in to make plots interactively with ggplot2"
  },
  {
    "objectID": "slides/exploratory-analysis.html#variation",
    "href": "slides/exploratory-analysis.html#variation",
    "title": "Exploratory data analysis",
    "section": "2.7 Variation",
    "text": "2.7 Variation\nTypes of values to explore:\n\nTypical values\nUnusual values\nMissing values*"
  },
  {
    "objectID": "slides/exploratory-analysis.html#covariation",
    "href": "slides/exploratory-analysis.html#covariation",
    "title": "Exploratory data analysis",
    "section": "2.8 Covariation",
    "text": "2.8 Covariation\n\n\nCovariation¬†is the tendency for the values of two or more variables to vary together in a related way. The best way to spot covariation is to visualize the relationship between two or more variables."
  },
  {
    "objectID": "slides/exploratory-analysis.html#patterns-and-models",
    "href": "slides/exploratory-analysis.html#patterns-and-models",
    "title": "Exploratory data analysis",
    "section": "2.9 Patterns and models",
    "text": "2.9 Patterns and models\nIf a systematic relationship exists between two variables it will appear as a pattern in the data. If you spot a pattern, ask yourself:\n\nCould this pattern be due to coincidence (i.e.¬†random chance)?\nHow can you describe the relationship implied by the pattern?\nHow strong is the relationship implied by the pattern?\nWhat other variables might affect the relationship?\nDoes the relationship change if you look at individual subgroups of the data?"
  },
  {
    "objectID": "slides/exploratory-analysis.html#exploratory-data-analysis-checklist",
    "href": "slides/exploratory-analysis.html#exploratory-data-analysis-checklist",
    "title": "Exploratory data analysis",
    "section": "2.10 Exploratory Data Analysis Checklist",
    "text": "2.10 Exploratory Data Analysis Checklist\nFrom The Art of Data Science (2017) by Roger D. Peng and Elizabeth Matsui:\n\nFormulate your question\nRead in your data\nCheck the packaging\nLook at the top and the bottom of your data\nCheck your ‚Äún‚Äùs\nValidate with at least one external data source\nMake a plot\nTry the easy solution first\nFollow up"
  },
  {
    "objectID": "slides/exploratory-analysis.html#tools-for-exploring-data-with-visualizations",
    "href": "slides/exploratory-analysis.html#tools-for-exploring-data-with-visualizations",
    "title": "Exploratory data analysis",
    "section": "2.11 Tools for exploring data with visualizations",
    "text": "2.11 Tools for exploring data with visualizations\nSpecialty packages for working with data."
  },
  {
    "objectID": "slides/exploratory-analysis.html#communicating",
    "href": "slides/exploratory-analysis.html#communicating",
    "title": "Exploratory data analysis",
    "section": "2.12 Communicating",
    "text": "2.12 Communicating"
  },
  {
    "objectID": "slides/fall-2024.html#week-4",
    "href": "slides/fall-2024.html#week-4",
    "title": "Weekly Updates",
    "section": "Week 4",
    "text": "Week 4\n\nExercise 2 solutions\nData transformation with dplyr\nParsons Problems"
  },
  {
    "objectID": "slides/fall-2024.html#week-3",
    "href": "slides/fall-2024.html#week-3",
    "title": "Weekly Updates",
    "section": "Week 3",
    "text": "Week 3\n\nExercise submission process\nExercise 1 solutions\nMapping with ggplot2\nData transformation with dplyr\nQuestions"
  },
  {
    "objectID": "slides/fall-2024.html#week-2",
    "href": "slides/fall-2024.html#week-2",
    "title": "Weekly Updates",
    "section": "Week 2",
    "text": "Week 2\n\nSyllabus updates\nCheat sheets\nCheck-in on exercise 1 and GitHub Classroom\nWeek 2 in-class quiz\nVisualizing spatial data with ggplot2"
  },
  {
    "objectID": "slides/fall-2024.html#cheat-sheets",
    "href": "slides/fall-2024.html#cheat-sheets",
    "title": "Weekly Updates",
    "section": "Cheat sheets",
    "text": "Cheat sheets\n\nRStudio\nsf\nggplot2"
  },
  {
    "objectID": "slides/fall-2023.html#week-12-agenda",
    "href": "slides/fall-2023.html#week-12-agenda",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 12 Agenda",
    "text": "Week 12 Agenda\n\nCheck-in on difficult + interesting things\nExercise 2 and 4 solutions review (forgot this last week)\nLecture: Reading and writing spatial data with R (continued)\nSpatial metadata"
  },
  {
    "objectID": "slides/fall-2023.html#questions",
    "href": "slides/fall-2023.html#questions",
    "title": "Fall 2023 Weekly Updates",
    "section": "Questions",
    "text": "Questions\nDo people actually create data dictionaries within R?"
  },
  {
    "objectID": "slides/fall-2023.html#week-14-november-29-2023",
    "href": "slides/fall-2023.html#week-14-november-29-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 14: November 29, 2023",
    "text": "Week 14: November 29, 2023\n\nScheduling\nFinal project check-in\nLecture + discussion for spatial metadata"
  },
  {
    "objectID": "slides/fall-2023.html#week-12-agenda-1",
    "href": "slides/fall-2023.html#week-12-agenda-1",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 12 Agenda",
    "text": "Week 12 Agenda\n\nCheck-in on difficult + interesting things\nExercise 2 and 4 solutions review (forgot this last week)\nLecture: Reading and writing spatial data with R (continued)\nSpatial metadata"
  },
  {
    "objectID": "slides/fall-2023.html#questions-1",
    "href": "slides/fall-2023.html#questions-1",
    "title": "Fall 2023 Weekly Updates",
    "section": "Questions",
    "text": "Questions\nDo people actually create data dictionaries within R?"
  },
  {
    "objectID": "slides/fall-2023.html#week-11-agenda",
    "href": "slides/fall-2023.html#week-11-agenda",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 11 Agenda",
    "text": "Week 11 Agenda\n\nQuestions about the final project\nCheck-in on difficult + interesting things\nExercise 2 and 4 review\nLecture + practice: Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package\nLecture + practice: Reading and writing spatial data with R"
  },
  {
    "objectID": "slides/fall-2023.html#week-10-agenda",
    "href": "slides/fall-2023.html#week-10-agenda",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 10 Agenda",
    "text": "Week 10 Agenda\n\nCheck-in on difficult + interesting things\nErrors of the week\nLecture + practice: Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package\nLecture + practice: Exploring American Community Survey data with the {tidycensus} package\nWeekly questions"
  },
  {
    "objectID": "slides/fall-2023.html#week-9-agenda",
    "href": "slides/fall-2023.html#week-9-agenda",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 9 Agenda",
    "text": "Week 9 Agenda\n\nCheck-in on difficult + interesting things\nErrors of the week\nLecture + practice (continued): Exploratory data analysis with {sf} and the tidyverse\nLecture + practice: Editing OpenStreetMap and exploring OpenStreetMap data with the {osmdata} package\nWeekly questions"
  },
  {
    "objectID": "slides/fall-2023.html#week-8-agenda",
    "href": "slides/fall-2023.html#week-8-agenda",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 8 Agenda",
    "text": "Week 8 Agenda\n\nCheck-in on difficult + interesting things\nFeedback on course experience (things to change, add, or keep)\nErrors of the week\nLecture + practice: Exploratory data analysis with {sf} and the tidyverse\nWeekly questions"
  },
  {
    "objectID": "slides/fall-2023.html#week-7-october-11-2023",
    "href": "slides/fall-2023.html#week-7-october-11-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 7: October 11, 2023",
    "text": "Week 7: October 11, 2023\nThese past updates are in reverse chronological order."
  },
  {
    "objectID": "slides/fall-2023.html#week-6-october-4-2023",
    "href": "slides/fall-2023.html#week-6-october-4-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 6: October 4, 2023",
    "text": "Week 6: October 4, 2023"
  },
  {
    "objectID": "slides/fall-2023.html#weekly-questions",
    "href": "slides/fall-2023.html#weekly-questions",
    "title": "Fall 2023 Weekly Updates",
    "section": "Weekly questions",
    "text": "Weekly questions"
  },
  {
    "objectID": "slides/fall-2023.html#week-5-september-27-2023",
    "href": "slides/fall-2023.html#week-5-september-27-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 5: September 27, 2023",
    "text": "Week 5: September 27, 2023"
  },
  {
    "objectID": "slides/fall-2023.html#week-4-september-20-2023",
    "href": "slides/fall-2023.html#week-4-september-20-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 4: September 20, 2023",
    "text": "Week 4: September 20, 2023"
  },
  {
    "objectID": "slides/fall-2023.html#week-3-september-13-2023",
    "href": "slides/fall-2023.html#week-3-september-13-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 3: September 13, 2023",
    "text": "Week 3: September 13, 2023"
  },
  {
    "objectID": "slides/fall-2023.html#week-2-september-6-2023",
    "href": "slides/fall-2023.html#week-2-september-6-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 2: September 6, 2023",
    "text": "Week 2: September 6, 2023"
  },
  {
    "objectID": "slides/fall-2023.html#week-1-september-6-2023",
    "href": "slides/fall-2023.html#week-1-september-6-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 1: September 6, 2023",
    "text": "Week 1: September 6, 2023\n\nWelcome!"
  },
  {
    "objectID": "slides/fall-2023.html#week-8-october-18-2023",
    "href": "slides/fall-2023.html#week-8-october-18-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 8: October 18, 2023",
    "text": "Week 8: October 18, 2023"
  },
  {
    "objectID": "slides/fall-2023.html#week-9-october-25-2023",
    "href": "slides/fall-2023.html#week-9-october-25-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 9: October 25, 2023",
    "text": "Week 9: October 25, 2023"
  },
  {
    "objectID": "slides/fall-2023.html#week-10-november-1-2023",
    "href": "slides/fall-2023.html#week-10-november-1-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 10: November 1, 2023",
    "text": "Week 10: November 1, 2023"
  },
  {
    "objectID": "slides/fall-2023.html#week-11-november-8-2023",
    "href": "slides/fall-2023.html#week-11-november-8-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 11: November 8, 2023",
    "text": "Week 11: November 8, 2023"
  },
  {
    "objectID": "slides/fall-2023.html#week-12-november-15-2023",
    "href": "slides/fall-2023.html#week-12-november-15-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 12: November 15, 2023",
    "text": "Week 12: November 15, 2023"
  },
  {
    "objectID": "slides/fall-2023.html#week-13-november-22-2023",
    "href": "slides/fall-2023.html#week-13-november-22-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 13: November 22, 2023",
    "text": "Week 13: November 22, 2023"
  },
  {
    "objectID": "slides/fall-2023.html#week-14-november-29-2023-1",
    "href": "slides/fall-2023.html#week-14-november-29-2023-1",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 14: November 29, 2023",
    "text": "Week 14: November 29, 2023"
  },
  {
    "objectID": "slides/fall-2023.html#week-15-december-6-2023",
    "href": "slides/fall-2023.html#week-15-december-6-2023",
    "title": "Fall 2023 Weekly Updates",
    "section": "Week 15: December 6, 2023",
    "text": "Week 15: December 6, 2023"
  },
  {
    "objectID": "slides/feature-geometry.html#getting-started",
    "href": "slides/feature-geometry.html#getting-started",
    "title": "Working with spatial and geometric operations in {sf}",
    "section": "1 Getting started",
    "text": "1 Getting started\n\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tigris)\noptions(tigris_use_cache = TRUE)"
  },
  {
    "objectID": "slides/feature-geometry.html#converting-objects-between-types",
    "href": "slides/feature-geometry.html#converting-objects-between-types",
    "title": "Working with spatial and geometric operations in {sf}",
    "section": "2 Converting objects between types",
    "text": "2 Converting objects between types"
  },
  {
    "objectID": "slides/feature-geometry.html#types-of-spatial-operations",
    "href": "slides/feature-geometry.html#types-of-spatial-operations",
    "title": "Working with spatial and geometric operations in {sf}",
    "section": "3 Types of spatial operations",
    "text": "3 Types of spatial operations\n\nSpatial filtering and topological relations\nSpatial joins and non-overlapping joins\nSpatial aggregation"
  },
  {
    "objectID": "slides/feature-geometry.html#types-of-geometric-operations",
    "href": "slides/feature-geometry.html#types-of-geometric-operations",
    "title": "Working with spatial and geometric operations in {sf}",
    "section": "4 Types of geometric operations",
    "text": "4 Types of geometric operations\n\nSimplification\nCentroids\nBuffers\nClipping (with or without subsetting)\nUnions\nType transformations"
  },
  {
    "objectID": "exercises/exercise_01.html",
    "href": "exercises/exercise_01.html",
    "title": "Exercise 01",
    "section": "",
    "text": "Practice these skills\n\n\n\n\nConfirm that you understand some coding basics\nUse the ? operator to access function and package documentation\nUse class(), names(), attributes(), and summary() functions to explore sf and sfc objects\nUse the base plot() function to visualize a sf object",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 01"
    ]
  },
  {
    "objectID": "exercises/exercise_01.html#getting-started",
    "href": "exercises/exercise_01.html#getting-started",
    "title": "Exercise 01",
    "section": "1 Getting started",
    "text": "1 Getting started\n\n1.1 Packages\nYou need the {sf}, {tidyverse}, and {spData} packages installed to complete this exercise. If they aren‚Äôt installed, install them now by copying the following lines into the console to install all three packages (don‚Äôt forget to restart your session afterwards):\ninstall.packages(c(\"tidyverse\", \"sf\", \"spData\"))\nAfter restarting make sure to load the sf and tidyverse library:\n\nlibrary(tidyverse)\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.5\n‚úî forcats   1.0.0     ‚úî stringr   1.5.1\n‚úî ggplot2   3.5.1     ‚úî tibble    3.2.1\n‚úî lubridate 1.9.3     ‚úî tidyr     1.3.1\n‚úî purrr     1.0.2     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\n\n\n\n1.2 Datas\nThis exercise uses the nc North Carolina SIDS dataset that is included with the sf package. We can use the sf::st_read() function to load it from a shapefile:\n\nnc &lt;- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"), as_tibble = TRUE)\n\nReading layer `nc' from data source \n  `/Users/elipousson/Library/R/arm64/4.4/library/sf/shape/nc.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 100 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965\nGeodetic CRS:  NAD27",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 01"
    ]
  },
  {
    "objectID": "exercises/exercise_01.html#exercises",
    "href": "exercises/exercise_01.html#exercises",
    "title": "Exercise 01",
    "section": "2 Exercises",
    "text": "2 Exercises\nThis week‚Äôs exercise is mostly ‚Äúfill in the blank‚Äù questions and coding exercises. You can expect fewer hints and more freedom to experiment in future exercises!\nThere are periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub as you complete the exercise. You should have at least three commits with meaningful commit messages by the end of the assignment. Take a look at the RStudio documentation on version control for more details on how to commit and push changes.\n\n2.1 Coding basics\nThe exercises in this section are from Ch. 3 Workflow: basics in R for Data Science (2e). If you have any trouble with the next couple exercises, please review the chapter before continuing to the next section.\nWhy does this code not work? ____\n\nmy_variable &lt;- 10\nmy_varƒ±able\n\n\nTweak each of the following R commands so that they run correctly:\n\nlibary(todyverse)\n\nggplot(dTA = mpg) + \n  geom_point(maping = aes(x = displ y = hwy)) +\n  geom_smooth(method = \"lm)\n\n\nPress ‚å• + ‚áß + K or ‚éá + ‚áß + K.\nWhat happens? ____\nHow can you get to the same place using the menus? ____\n\n\n\n\n\n\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answers for coding basics questions‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterwards.\n\n\n\n\n\n2.2 Look up documentation\n? is an operator that you can use to pull up documentation on a function, dataset, or other topic in the Help tab pane of the RStudio IDE. For example, running the code: ?sf::st_read will pull up the documentation on a set of functions for read simple features or layers from a file or database.\nUse ? to access the documentation on sf::st_geometry() then look for the ‚ÄúValue‚Äù heading that provides information about the value returned by the function.\nWhat type of object does sf::st_geometry() return? ____\nWhat is one other function documented on the same page? ____\n\n\n\n\n\n\nTip\n\n\n\n\n\nReview Ch. 9 Workflow: getting help in R for Data Science (2e) for more information about getting help when you struggle with a package, function, or project.\n\n\n\n\n\n2.3 Explore sf and sfc objects\nEvery object in R has at least one class:\n\nclass(1)\n\n[1] \"numeric\"\n\nclass(\"A\")\n\n[1] \"character\"\n\nclass(TRUE)\n\n[1] \"logical\"\n\n\nVectors, lists, data frames, and other objects can also have names and attributes. This is a named character vector:\n\nnames(c(\"A\" = \"apple\"))\n\n[1] \"A\"\n\n\nA sf object is a data.frame but it also has a special sf class that is designed to implement the formal simple features standard in R:\n\nclass(nc)\n\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\nAs a data frame, a sf object has column names (which you can access with names() or colnames()):\n\ncolnames(nc)\n\n [1] \"AREA\"      \"PERIMETER\" \"CNTY_\"     \"CNTY_ID\"   \"NAME\"      \"FIPS\"     \n [7] \"FIPSNO\"    \"CRESS_ID\"  \"BIR74\"     \"SID74\"     \"NWBIR74\"   \"BIR79\"    \n[13] \"SID79\"     \"NWBIR79\"   \"geometry\" \n\n\n\nNext, we should run st_geometry() on nc:\n\nnc_geometry &lt;- st_geometry(nc)\n\nNow, use class() to find out what type of object st_geometry() returned:\n\n____\n\nThis object is a special type of list. You can subset one or more items from a list using a single or double set of square brackets like this:\n\nnc_geometry[1]\n\nGeometry set for 1 feature \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -81.74107 ymin: 36.23436 xmax: -81.23989 ymax: 36.58965\nGeodetic CRS:  NAD27\n\n\nMULTIPOLYGON (((-81.47276 36.23436, -81.54084 3...\n\nnc_geometry[[1]]\n\nMULTIPOLYGON (((-81.47276 36.23436, -81.54084 36.27251, -81.56198 36.27359, -81.63306 36.34069, -81.74107 36.39178, -81.69828 36.47178, -81.7028 36.51934, -81.67 36.58965, -81.3453 36.57286, -81.34754 36.53791, -81.32478 36.51368, -81.31332 36.4807, -81.26624 36.43721, -81.26284 36.40504, -81.24069 36.37942, -81.23989 36.36536, -81.26424 36.35241, -81.32899 36.3635, -81.36137 36.35316, -81.36569 36.33905, -81.35413 36.29972, -81.36745 36.2787, -81.40639 36.28505, -81.41233 36.26729, -81.43104 36.26072, -81.45289 36.23959, -81.47276 36.23436)))\n\n\nTake a look at the attributes for this list using attributes():\n\n____(nc_geometry)\n\nNow, use class() one more time to find out what type of objects make up nc_geometry:\n\n____(nc_geometry[[1]])\n\n\nsummary() is another way to get information about names and attributes all at once. Try using summary() on nc_geometry:\n\nsummary(____)\n\nReview the results and try to answer the following:\n\nWhat is the geometry type? ____\nWhat is the coordinate reference system? ____\nHow many features? ____\n\n\n\n\n\n\n\nNow is another good time to render, commit, and push your changes to GitHub with a meaningful commit message.\nOnce again, make sure to commit and push all changed files so that your Git pane is empty afterwards.\n\n\n\n\n\n2.4 Visualize sf objects\nSome packages come with data we can use as soon as the package is loaded.\nLoad the {spData} packages using library() then make a plot of the us_states data:\n\nlibrary(____)\n\nplot(____)\n\nCan you use plot() to make a map of states color-coded by region?\n\nplot(____)\n\nOptional: can you use ggplot() and geom_sf() to create a plot of us_states color-coded by total population in 2015? Here is part of the code to start with:\n\nggplot() +\n  geom_sf()\n\n\n\n\n\n\n\nRender, commit, and push your final changes to GitHub with a meaningful commit message.\nMake sure to commit and push all changed files so that your Git pane is empty afterwards.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 01"
    ]
  },
  {
    "objectID": "exercises/exercise_02.html",
    "href": "exercises/exercise_02.html",
    "title": "Exercise 02",
    "section": "",
    "text": "Practice these skills\n\n\n\n\n\n\nBuild a layered plot using ggplot(), aes(), and different geom_ functions\nExplore the difference between discrete and continuous variables\nUse coord_sf() to modify a plot created with geom_sf()",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 02"
    ]
  },
  {
    "objectID": "exercises/exercise_02.html#setup",
    "href": "exercises/exercise_02.html#setup",
    "title": "Exercise 02",
    "section": "1 Setup",
    "text": "1 Setup\nThis exercises uses the {ggplot2} and {dplyr} packages (both from the tidyverse family of packages) and the {sf} package:\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(sf)\n\nFor this week‚Äôs exercise, we are also going to use data from the {rnaturalearth} package (which downloads data from the Natural Earth data project) and the {smoothr} package that works with sf objects. If these packages are not installed already, make sure to install those packages and re-start your session:\n\npak::pkg_install(c(\"rnaturalearth\", \"rnaturalearthdata\", \"smoothr\"))\n\n\nlibrary(rnaturalearth)\n\nWe are going to use ne_download() to download the countries dataset and then use st_centroid() to make a version of this dataset where the features show the center of each country instead of the boundaries:\n\n# Download data from Natural Earth\ncountries_ne &lt;- ne_download(scale = \"medium\", type = \"countries\")\n\ncountries &lt;- countries_ne |&gt; \n  # Drop unused columns\n  select(\n    !starts_with(c(\"ISO\", \"ADM0\", \"FCLASS\", \"NAME\", \"MAPCOLOR\"))\n  ) |&gt; \n  # Exclude Antarctica\n  filter(\n    SOVEREIGNT != \"Antarctica\"\n  ) |&gt;\n  st_transform(crs = 3857)\n\ncountries_center &lt;- st_centroid(countries)\n\nglimpse(countries)",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 02"
    ]
  },
  {
    "objectID": "exercises/exercise_02.html#exercises",
    "href": "exercises/exercise_02.html#exercises",
    "title": "Exercise 02",
    "section": "2 Exercises",
    "text": "2 Exercises\n\n2.1 Plotting a single variable\nFind a discrete variable in countries and then create a plot with geom_bar():\n\nggplot(data = countries) +\n  geom_bar(mapping = aes(x = ____))\n\nNext, find a continuous variable and make a plot with geom_histogram():\n\nggplot(data = countries) +\n  geom_histogram(mapping = aes(x = ____))\n\nNow, let‚Äôs make a map! Use countries_center and geom_sf() to make a map with a continuous variable mapped to size:\n\nggplot(data = countries_center) +\n  geom_sf(aes(size = ____))\n\n\nNext, make a map with geom_sf() with one discrete variable mapped to color:\n\nggplot(data = countries) +\n  geom_sf(aes(color = ____))\n\nIs that the map you expected? Try it again with the discrete variable mapped to fill:\n\nggplot(data = countries) +\n  geom_sf(aes(fill = ____))\n\nNow, try mapping the data using the same variable but use facet_wrap() to create a set of small maps for each region:\n\nggplot(data = countries) +\n  geom_sf(aes(fill = ____)) +\n  facet_wrap(~ ____)\n\n\nNow, make a plot using any geom function of your choice:\n\nggplot(data = countries) +\n  ____\n\nExplain in plain language. What does your map or plot show? ____\n\n\n\n\n\n\nRender, commit, and push your changes to GitHub with the commit message ‚ÄúAdded answers on plotting a single variable‚Äù.\nMake sure to commit and push all changed files so that your Git pane is empty afterwards.\n\n\n\n\n\n2.2 Plotting two variables\nFor this next section, we are also going to use the nc data from the {sf} package since it has a larger number of continuous variables:\n\nnc &lt;- read_sf(system.file(\"shape/nc.shp\", package = \"sf\"))\n\nFirst, find two continuous variables and create a scatter plot with geom_point():\n\nggplot(data = nc, mapping = aes(____)) +\n  geom_point()\n\nNext, look in your data for one discrete and one continuous variable then use aes() to set those variables for geom_col(). The geom_col() function is similar to geom_bar() but you must provide both an x and a y variable:\n\nggplot(data = nc, mapping = aes(____)) +\n  geom_col()\n\n\n\n2.3 Using scales and colors\n{ggplot2} uses naming conventions to organize the scale functions. This isn‚Äôt the same for every function but they look something like: ‚Äúscale_‚Äù. So, scale_fill_viridis_d() applies the Viridis color scale to a discrete variable mapped to the fill aesthetic.\nUse the data to create a map and take a look at the colors set when you use scale_fill_viridis_c():\n\nggplot(data = nc) +\n  geom_sf(aes(fill = ____)) +\n  scale_fill_viridis_c()\n\nThe ColorBrewer scales are designed for use with thematic maps. Use ?scale_color_brewer() to pull up the documentation for this function and review the information on the type and palette parameters.\nNow, map a variable to the color aesthetic for geom_sf() and assign an appropriate type and palette value:\n\nggplot(data = countries_center) +\n  geom_sf(aes(color = ____)) +\n  scale_color_brewer(type = ____, palette = ____)\n\nSwitching from color to fill, try it again with a different type and palette value:\n\nggplot(data = countries) +\n  geom_sf(aes(fill = ____)) +\n  scale_fill_brewer(type = ____, palette = ____)\n\nOne last time, but we‚Äôre using scale_fill_distiller(). Note that this scale_fill_distiller() scale only works with continuous values. If you get an error, you may need to map a different variable to fill:\n\nggplot(data = nc) +\n  geom_sf(aes(fill = ____)) +\n  scale_fill_distiller(type = ____, palette = ____)\n\n\n\n2.4 Adding labels, legends, and themes\nSet the data for ggplot() and then use the labs() function to apply a title and caption that make sense:\n\nggplot(data = ____) +\n  geom_sf(color = \"black\", fill = NA) +\n  labs(\n    title = ____,\n    caption = ____\n  )\n\nNow, map fill to a variable in your data using aes() and then use labs() to assign a label for fill:\n\nggplot(data = ____) +\n  geom_sf(aes(fill = ____)) +\n  labs(\n    ____\n  )\n\nFinally, put all of these elements together with a theme function. theme_minimal() and theme_void() are good themes to use for maps but you can explore all of the options in the ggplot2 documentation.\n\nggplot(data = ____) +\n  geom_sf(mapping = aes(____)) +\n  labs(\n    title = ____,\n    caption = ____,\n    ____\n  ) +\n  ____\n\n\n\n\n\n\n\nNow is another good time to render, commit, and push your changes to GitHub with a meaningful commit message.\nOnce again, make sure to commit and push all changed files so that your Git pane is empty afterwards.\n\n\n\n\n\n2.5 Map making with {ggplot2}\nBy default, any map created with geom_sf() will show the graticulates on the map and axis labels with the coordinate values. You can also hide or change graticules and axis title. Add data to this map and then hide these graticules by adding theme_void():\n\nggplot(data = ____) +\n  geom_sf(color = \"black\", fill = NA) +\n  ____\n\nTry setting the panel.grid argument to element_blank() to hide the grid:\n\nggplot(data = ____) +\n  geom_sf(color = \"black\", fill = NA) +\n  theme(\n    panel.grid = ____\n  )\n\nRegardless of the selected theme, when you are using geom_sf(), you can also modify or suppress the graticule and axis labels using the label_graticule and label_axes parameters for coord_sf():\n\nggplot(data = countries) +\n  geom_sf() +\n  coord_sf(\n    label_graticule = \"----\",\n    label_axes = \"----\"\n  ) +\n  theme_minimal()\n\nNow, try ‚Äúzooming‚Äù into a selected area of your map using the xlim and ylim arguments for coord_sf():\n\nggplot(data = ____) +\n  geom_sf(color = \"black\", fill = NA) +\n  coord_sf(\n    xlim = ____,\n    ylim = ____\n  )\n\nIf you have difficulty with this one, look back at our week 2 slides for an example showing how to use sf::st_bbox() to get xmin, xmax, ymin, and ymax values for the xlim and ylim parameter.\nThere are some cases when you need to modify the geometry of your data as part of the process of making a map. The st_simplify() function is one way to do that. Try setting dTolerance to a low value, e.g.¬†dTolerance = 10, and run the code block. Then try to run it again with dTolerance = 100000.\n\nusa &lt;- filter(countries, NAME == \"United States of America\")\n\nsimple_usa &lt;- st_simplify(x = usa, dTolerance = ____)\n\nggplot() +\n  geom_sf(\n    data = usa,\n    color = \"orange\"\n    ) +\n  geom_sf(\n    data = simple_usa,\n    color = \"purple\"\n  ) +\n  theme_void()\n\nWhat happens when you increase the value of dTolerance? ____\nNow, let‚Äôs try to same thing but smoothing features with smoothr::smooth() instead of simplifying with sf::st_simplify(). Start by setting smoothness to a small number, smoothness = 0.5, and then run again with higher and higher numbers:\n\nsmooth_usa &lt;- smoothr::smooth(x = usa, method = \"ksmooth\", smoothness = ____)\n\nggplot() +\n  geom_sf(\n    data = usa,\n    color = \"orange\"\n    ) +\n  geom_sf(\n    data = smooth_usa,\n    color = \"purple\"\n  ) +\n  theme_void()\n\nWhat happens when you increase the value of smoothness? ____\nCheck the documentation for st_simplify() or smoothr::smooth() for more information on how these functions work to modify the geometry. The rmapshaper::ms_simplify() is another function for the simplification of polygons in simple feature objects. In contrast to the other two examples, this function is topologically aware and preserves existing boundaries between contiguous polygons.\n\n\n2.6 Optional: Creating maps with {tmap}\nPick one of the maps you created in the prior questions of this exercise and create a similar version using the {tmap} package.\nYou can install {tmap} the same as any other package:\n\n# pak::pkg_install(\"tmap\")\n\nThen load the library:\n\nlibrary(tmap)\n\nAnd make a map using data from {rnaturalearth} or another source of your choice:\n\n____\n\nWhat is the same about making a map with {tmap} compared to {ggplot2}? ____\nWhat is different about making a map with {tmap} compared to {ggplot2}? ____\nDo you have any preference between the two? ____\n\n\n\n\n\n\nRender, commit, and push your final changes to GitHub with a meaningful commit message.\nMake sure to commit and push all changed files so that your Git pane is empty afterwards.",
    "crumbs": [
      "Exercises üõ†Ô∏è",
      "Exercise 02"
    ]
  },
  {
    "objectID": "slides/data-transformation.html#load-dplyr",
    "href": "slides/data-transformation.html#load-dplyr",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "1.1 Load {dplyr}",
    "text": "1.1 Load {dplyr}\n\nlibrary(dplyr)"
  },
  {
    "objectID": "slides/data-transformation.html#how-can-you-transform-your-data-using-dplyr",
    "href": "slides/data-transformation.html#how-can-you-transform-your-data-using-dplyr",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "1.2 How can you transform your data using {dplyr}?",
    "text": "1.2 How can you transform your data using {dplyr}?\n\nManipulate cases (rows)\nManipulate variables (columns)\nManipulate groups"
  },
  {
    "objectID": "slides/data-transformation.html#manipulate-cases",
    "href": "slides/data-transformation.html#manipulate-cases",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "1.3 Manipulate cases",
    "text": "1.3 Manipulate cases\n\nfilter(), which changes which rows are present without changing their order, and\narrange(), which changes the order of the rows without changing which are present.\ndistinct() which finds rows with unique values but unlike arrange() and filter() it can also optionally modify the columns."
  },
  {
    "objectID": "slides/data-transformation.html#manipulate-variables",
    "href": "slides/data-transformation.html#manipulate-variables",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "1.4 Manipulate variables",
    "text": "1.4 Manipulate variables\n\nmutate() creates new columns that are derived from the existing columns,\nselect() changes which columns are present,\nrename() changes the names of the columns, and\nrelocate() changes the positions of the columns."
  },
  {
    "objectID": "slides/data-transformation.html#manipulate-groups",
    "href": "slides/data-transformation.html#manipulate-groups",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "1.5 Manipulate groups",
    "text": "1.5 Manipulate groups\n\ngroup_by(),\nsummarize(), and\nthe slice_() family of functions."
  },
  {
    "objectID": "slides/data-transformation.html#the-pipe",
    "href": "slides/data-transformation.html#the-pipe",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "1.6 The pipe",
    "text": "1.6 The pipe"
  },
  {
    "objectID": "slides/data-transformation.html#take-a-minute",
    "href": "slides/data-transformation.html#take-a-minute",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "2.1 Take a minute ‚è∞",
    "text": "2.1 Take a minute ‚è∞"
  },
  {
    "objectID": "slides/data-transformation.html#take-a-minute-1",
    "href": "slides/data-transformation.html#take-a-minute-1",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "3.1 Take a minute ‚è∞",
    "text": "3.1 Take a minute ‚è∞"
  },
  {
    "objectID": "slides/data-transformation.html#mutate",
    "href": "slides/data-transformation.html#mutate",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "3.2 mutate()",
    "text": "3.2 mutate()\nmutate() creates new columns that are functions of existing variables.\nIt can also modify (if the name is the same as an existing column) and delete columns (by setting their value to NULL)."
  },
  {
    "objectID": "slides/data-transformation.html#summarise",
    "href": "slides/data-transformation.html#summarise",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "4.1 summarise()",
    "text": "4.1 summarise()\nsummarise() creates a new data frame with:\n\none row for each combination of grouping variables; if there are no grouping variables, the output will have a single row summarising all observations in the input.\none column for each grouping variable\none column for each of the summary statistics that you have specified."
  },
  {
    "objectID": "slides/data-transformation.html#using-filter-with-sf-objects",
    "href": "slides/data-transformation.html#using-filter-with-sf-objects",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "5.1 Using filter with sf objects",
    "text": "5.1 Using filter with sf objects\nIf you are just working with attributes (variables), sf objects work just like any other data frame:\n\nfilter(\n  storms_sf,\n  wind &gt; 50\n)\n\nBut, you can use a special set of predicate functions that work with sf objects to return a logical vector that also works with filter:\n\nfilter(\n  storms_sf,\n  as.logical(st_intersects(geometry, st_union(us_states), sparse = FALSE))\n)"
  },
  {
    "objectID": "slides/data-transformation.html#using-mutate-with-sf-objects",
    "href": "slides/data-transformation.html#using-mutate-with-sf-objects",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "5.2 Using mutate with sf objects",
    "text": "5.2 Using mutate with sf objects\n\nstorms_usa &lt;- storms_sf |&gt;\n  mutate(\n    usa_observation = as.logical(\n      st_intersects(\n        geometry,\n        st_union(us_states),\n        sparse = FALSE\n      )\n    )\n  )"
  },
  {
    "objectID": "slides/data-transformation.html#using-summarise-with-sf-objects",
    "href": "slides/data-transformation.html#using-summarise-with-sf-objects",
    "title": "Transforming data with {dplyr} and {tidyr}",
    "section": "5.3 Using summarise with sf objects",
    "text": "5.3 Using summarise with sf objects\nYou can use summarise to combine geometry by grouping variables:\n\nstorms_categories &lt;- storms_sf |&gt;\n  group_by(category) |&gt;\n  summarise()\n\nstorms_categories"
  }
]